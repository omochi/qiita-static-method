sil_stage canonical

import Builtin
import Swift
import SwiftShims

// static CommandLine._argc
sil_global [fragile] @_TZvOs11CommandLine5_argcVs5Int32 : $Int32

// globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4
sil_global private_external [fragile] @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 : $Builtin.Word

// static CommandLine._unsafeArgv
sil_global [fragile] @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>

// _emptyStringStorage
sil_global [fragile] @_Tvs19_emptyStringStorageVs6UInt32 : $UInt32

// _swiftEmptyArrayStorage
sil_global [fragile] @_swiftEmptyArrayStorage : $_SwiftEmptyArrayStorage

sil_scope 1 {  parent @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 }

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
// %0                                             // user: %3
// %1                                             // user: %9
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = global_addr @_TZvOs11CommandLine5_argcVs5Int32 : $*Int32, scope 1 // user: %3
  store %0 to %2 : $*Int32, scope 1               // id: %3
  %4 = global_addr @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 : $*Builtin.Word, scope 1 // user: %5
  %5 = address_to_pointer %4 : $*Builtin.Word to $Builtin.RawPointer, scope 1 // user: %7
  // function_ref globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4
  %6 = function_ref @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 : $@convention(thin) () -> (), scope 1 // user: %7
  %7 = builtin "once"(%5 : $Builtin.RawPointer, %6 : $@convention(thin) () -> ()) : $(), scope 1
  %8 = global_addr @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1 // user: %9
  store %1 to %8 : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1 // id: %9
  // function_ref main() -> ()
  %10 = function_ref @_TF4Main4mainFT_T_ : $@convention(thin) () -> (), loc "swift.swift":127:1, scope 1 // user: %11
  %11 = apply %10() : $@convention(thin) () -> (), loc "swift.swift":127:6, scope 1
  %12 = integer_literal $Builtin.Int32, 0, scope 1 // user: %13
  %13 = struct $Int32 (%12 : $Builtin.Int32), scope 1 // user: %14
  return %13 : $Int32, scope 1                    // id: %14
}

sil_scope 2 { loc "swift.swift":9:2 parent @_TFV4Main8EmployeeCfT4nameSS3ageSi_S0_ : $@convention(method) (@owned String, Int, @thin Employee.Type) -> @owned Employee }
sil_scope 3 { loc "swift.swift":12:2 parent 2 }

// Employee.init(name : String, age : Int) -> Employee
sil hidden @_TFV4Main8EmployeeCfT4nameSS3ageSi_S0_ : $@convention(method) (@owned String, Int, @thin Employee.Type) -> @owned Employee {
// %0                                             // users: %5, %3
// %1                                             // users: %5, %4
bb0(%0 : $String, %1 : $Int, %2 : $@thin Employee.Type):
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":9:7, scope 2 // id: %3
  debug_value %1 : $Int, let, name "age", argno 2, loc "swift.swift":9:21, scope 2 // id: %4
  %5 = struct $Employee (%0 : $String, %1 : $Int), loc "swift.swift":12:2, scope 3 // user: %6
  return %5 : $Employee, loc "swift.swift":12:2, scope 3 // id: %6
}

sil_scope 4 { loc "swift.swift":14:29 parent @_TFV4Main8Employeeg11descriptionSS : $@convention(method) (@guaranteed Employee) -> @owned String }

// Employee.description.getter
sil hidden [thunk] [always_inline] @_TFV4Main8Employeeg11descriptionSS : $@convention(method) (@guaranteed Employee) -> @owned String {
// %0                                             // users: %3, %2
bb0(%0 : $Employee):
  // function_ref specialized Employee.description.getter
  %1 = function_ref @_TTSf4s___TFV4Main8Employeeg11descriptionSS : $@convention(thin) (@guaranteed String, Int) -> @owned String, loc "swift.swift":14:29, scope 4 // user: %4
  %2 = struct_extract %0 : $Employee, #Employee.age, loc "swift.swift":14:29, scope 4 // user: %4
  %3 = struct_extract %0 : $Employee, #Employee.name, loc "swift.swift":14:29, scope 4 // user: %4
  %4 = apply %1(%3, %2) : $@convention(thin) (@guaranteed String, Int) -> @owned String, loc "swift.swift":14:29, scope 4 // user: %5
  return %4 : $String, loc "swift.swift":14:29, scope 4 // id: %5
}

sil_scope 5 {  parent @_TFs27_allocateUninitializedArrayurFBwTGSax_Bp_ : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) }

// _allocateUninitializedArray<A> (Builtin.Word) -> ([A], Builtin.RawPointer)
sil public_external [fragile] [always_inline] @_TFs27_allocateUninitializedArrayurFBwTGSax_Bp_ : $@convention(thin) <Element> (Builtin.Word) -> (@owned Array<Element>, Builtin.RawPointer) {
// %0                                             // users: %2, %1
bb0(%0 : $Builtin.Word):
  debug_value %0 : $Builtin.Word, scope 5         // id: %1
  %2 = builtin "zextOrBitCast_Word_Int64"(%0 : $Builtin.Word) : $Builtin.Int64, scope 5 // users: %6, %3
  %3 = struct $Int (%2 : $Builtin.Int64), scope 5 // users: %27, %21, %10, %4
  debug_value %3 : $Int, scope 5                  // id: %4
  %5 = integer_literal $Builtin.Int64, 0, scope 5 // user: %6
  %6 = builtin "cmp_sgt_Int64"(%2 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 5 // user: %7
  cond_br %6, bb2, bb1, scope 5                   // id: %7

bb1:                                              // Preds: bb0
  // function_ref static Array._allocateUninitialized(Int) -> ([A], UnsafeMutablePointer<A>)
  %8 = function_ref @_TZFSa22_allocateUninitializedfSiTGSax_GSpx__ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>), scope 5 // user: %10
  %9 = metatype $@thin Array<Element>.Type, scope 5 // user: %10
  %10 = apply %8<Element>(%3, %9) : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>), scope 5 // users: %12, %11
  %11 = tuple_extract %10 : $(Array<Element>, UnsafeMutablePointer<Element>), 0, scope 5 // users: %16, %13
  %12 = tuple_extract %10 : $(Array<Element>, UnsafeMutablePointer<Element>), 1, scope 5 // users: %15, %14
  debug_value %11 : $Array<Element>, scope 5      // id: %13
  debug_value %12 : $UnsafeMutablePointer<Element>, scope 5 // id: %14
  %15 = struct_extract %12 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 5 // user: %16
  br bb3(%11 : $Array<Element>, %15 : $Builtin.RawPointer), scope 5 // id: %16

bb2:                                              // Preds: bb0
  // function_ref ManagedBufferPointer.init(_uncheckedBufferClass : AnyObject.Type, minimumCapacity : Int) -> ManagedBufferPointer<A, B>
  %17 = function_ref @_TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 5 // user: %21
  %18 = metatype $@thin ManagedBufferPointer<_ArrayBody, Element>.Type, scope 5 // user: %21
  %19 = metatype $@thick _ContiguousArrayStorage<Element>.Type, scope 5 // user: %20
  %20 = init_existential_metatype %19 : $@thick _ContiguousArrayStorage<Element>.Type, $@thick AnyObject.Type, scope 5 // user: %21
  %21 = apply %17<_ArrayBody, Element>(%20, %3, %18) : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 5 // users: %28, %26, %22
  debug_value %21 : $ManagedBufferPointer<_ArrayBody, Element>, scope 5 // id: %22
  // function_ref static Array._adoptStorage(AnyObject, count : Int) -> ([A], UnsafeMutablePointer<A>)
  %23 = function_ref @_TZFSa13_adoptStoragefTPs9AnyObject_5countSi_TGSax_GSpx__ : $@convention(method) <τ_0_0> (@owned AnyObject, Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>), scope 5 // user: %27
  %24 = metatype $@thin Array<Element>.Type, scope 5 // user: %27
  // function_ref ManagedBufferPointer.buffer.getter
  %25 = function_ref @_TFVs20ManagedBufferPointerg6bufferPs9AnyObject_ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> @owned AnyObject, scope 5 // user: %26
  %26 = apply %25<_ArrayBody, Element>(%21) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> @owned AnyObject, scope 5 // user: %27
  %27 = apply %23<Element>(%26, %3, %24) : $@convention(method) <τ_0_0> (@owned AnyObject, Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>), scope 5 // users: %30, %29
  release_value %21 : $ManagedBufferPointer<_ArrayBody, Element>, scope 5 // id: %28
  %29 = tuple_extract %27 : $(Array<Element>, UnsafeMutablePointer<Element>), 0, scope 5 // users: %34, %31
  %30 = tuple_extract %27 : $(Array<Element>, UnsafeMutablePointer<Element>), 1, scope 5 // users: %33, %32
  debug_value %29 : $Array<Element>, scope 5      // id: %31
  debug_value %30 : $UnsafeMutablePointer<Element>, scope 5 // id: %32
  %33 = struct_extract %30 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 5 // user: %34
  br bb3(%29 : $Array<Element>, %33 : $Builtin.RawPointer), scope 5 // id: %34

// %35                                            // user: %37
// %36                                            // user: %37
bb3(%35 : $Array<Element>, %36 : $Builtin.RawPointer): // Preds: bb2 bb1
  %37 = tuple (%35 : $Array<Element>, %36 : $Builtin.RawPointer), scope 5 // user: %38
  return %37 : $(Array<Element>, Builtin.RawPointer), scope 5 // id: %38
}

sil_scope 6 { loc "swift.swift":7:6 parent @_TFV4Main8Employeeg4nameSS : $@convention(method) (@guaranteed Employee) -> @owned String }
sil_scope 7 { loc "swift.swift":7:6 parent 6 }

// Employee.name.getter
sil hidden [transparent] @_TFV4Main8Employeeg4nameSS : $@convention(method) (@guaranteed Employee) -> @owned String {
// %0                                             // users: %3, %2, %1
bb0(%0 : $Employee):
  debug_value %0 : $Employee, let, name "self", argno 1, loc "swift.swift":7:6, scope 6 // id: %1
  %2 = struct_extract %0 : $Employee, #Employee.name, scope 7 // user: %4
  retain_value %0 : $Employee, scope 6            // id: %3
  return %2 : $String, loc "swift.swift":7:6, scope 7 // id: %4
}

sil_scope 8 { loc "swift.swift":7:6 parent @_TFV4Main8Employees4nameSS : $@convention(method) (@owned String, @inout Employee) -> () }
sil_scope 9 { loc "swift.swift":7:6 parent 8 }

// Employee.name.setter
sil hidden [transparent] @_TFV4Main8Employees4nameSS : $@convention(method) (@owned String, @inout Employee) -> () {
// %0                                             // users: %8, %3
// %1                                             // users: %2, %4
bb0(%0 : $String, %1 : $*Employee):
  debug_value_addr %1 : $*Employee, var, name "self", argno 2, loc "swift.swift":7:6, scope 8 // id: %2
  debug_value %0 : $String, let, name "value", argno 1, loc "swift.swift":7:6, scope 8 // id: %3
  %4 = struct_element_addr %1 : $*Employee, #Employee.name, scope 9 // users: %5, %8
  %5 = struct_element_addr %4 : $*String, #String._core, scope 9 // user: %6
  %6 = struct_element_addr %5 : $*_StringCore, #_StringCore._owner, scope 9 // user: %7
  %7 = load %6 : $*Optional<AnyObject>, scope 9   // user: %9
  store %0 to %4 : $*String, scope 9              // id: %8
  release_value %7 : $Optional<AnyObject>, scope 8 // id: %9
  %10 = tuple (), loc "swift.swift":7:6, scope 9  // user: %11
  return %10 : $(), loc "swift.swift":7:6, scope 9 // id: %11
}

sil_scope 10 { loc "swift.swift":7:6 parent @_TFV4Main8Employeem4nameSS : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @inout Employee) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) }

// Employee.name.materializeForSet
sil hidden [transparent] @_TFV4Main8Employeem4nameSS : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @inout Employee) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) {
// %2                                             // user: %3
bb0(%0 : $Builtin.RawPointer, %1 : $*Builtin.UnsafeValueBuffer, %2 : $*Employee):
  %3 = struct_element_addr %2 : $*Employee, #Employee.name, scope 10 // user: %4
  %4 = address_to_pointer %3 : $*String to $Builtin.RawPointer, scope 10 // user: %6
  %5 = enum $Optional<Builtin.RawPointer>, #Optional.none!enumelt, scope 10 // user: %6
  %6 = tuple (%4 : $Builtin.RawPointer, %5 : $Optional<Builtin.RawPointer>), scope 10 // user: %7
  return %6 : $(Builtin.RawPointer, Optional<Builtin.RawPointer>), scope 10 // id: %7
}

sil_scope 11 { loc "swift.swift":8:6 parent @_TFV4Main8Employeeg3ageSi : $@convention(method) (@guaranteed Employee) -> Int }
sil_scope 12 { loc "swift.swift":8:6 parent 11 }

// Employee.age.getter
sil hidden [transparent] @_TFV4Main8Employeeg3ageSi : $@convention(method) (@guaranteed Employee) -> Int {
// %0                                             // users: %2, %1
bb0(%0 : $Employee):
  debug_value %0 : $Employee, let, name "self", argno 1, loc "swift.swift":8:6, scope 11 // id: %1
  %2 = struct_extract %0 : $Employee, #Employee.age, scope 12 // user: %3
  return %2 : $Int, loc "swift.swift":8:6, scope 12 // id: %3
}

sil_scope 13 { loc "swift.swift":8:6 parent @_TFV4Main8Employees3ageSi : $@convention(method) (Int, @inout Employee) -> () }
sil_scope 14 { loc "swift.swift":8:6 parent 13 }

// Employee.age.setter
sil hidden [transparent] @_TFV4Main8Employees3ageSi : $@convention(method) (Int, @inout Employee) -> () {
// %0                                             // users: %5, %3
// %1                                             // users: %2, %4
bb0(%0 : $Int, %1 : $*Employee):
  debug_value_addr %1 : $*Employee, var, name "self", argno 2, loc "swift.swift":8:6, scope 13 // id: %2
  debug_value %0 : $Int, let, name "value", argno 1, loc "swift.swift":8:6, scope 13 // id: %3
  %4 = struct_element_addr %1 : $*Employee, #Employee.age, scope 14 // user: %5
  store %0 to %4 : $*Int, scope 14                // id: %5
  %6 = tuple (), loc "swift.swift":8:6, scope 14  // user: %7
  return %6 : $(), loc "swift.swift":8:6, scope 14 // id: %7
}

sil_scope 15 { loc "swift.swift":8:6 parent @_TFV4Main8Employeem3ageSi : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @inout Employee) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) }

// Employee.age.materializeForSet
sil hidden [transparent] @_TFV4Main8Employeem3ageSi : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @inout Employee) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) {
// %2                                             // user: %3
bb0(%0 : $Builtin.RawPointer, %1 : $*Builtin.UnsafeValueBuffer, %2 : $*Employee):
  %3 = struct_element_addr %2 : $*Employee, #Employee.age, scope 15 // user: %4
  %4 = address_to_pointer %3 : $*Int to $Builtin.RawPointer, scope 15 // user: %6
  %5 = enum $Optional<Builtin.RawPointer>, #Optional.none!enumelt, scope 15 // user: %6
  %6 = tuple (%4 : $Builtin.RawPointer, %5 : $Optional<Builtin.RawPointer>), scope 15 // user: %7
  return %6 : $(Builtin.RawPointer, Optional<Builtin.RawPointer>), scope 15 // id: %7
}

sil_scope 16 { loc "swift.swift":14:29 parent @_TTWV4Main8Employees23CustomStringConvertibleS_FS1_g11descriptionSS : $@convention(witness_method) (@in_guaranteed Employee) -> @owned String }
sil_scope 17 { loc "swift.swift":14:29 parent 16 }
sil_scope 18 { loc "swift.swift":14:29 parent 4 inlined_at 17 }

// protocol witness for CustomStringConvertible.description.getter in conformance Employee
sil [transparent] [thunk] @_TTWV4Main8Employees23CustomStringConvertibleS_FS1_g11descriptionSS : $@convention(witness_method) (@in_guaranteed Employee) -> @owned String {
// %0                                             // users: %3, %1
bb0(%0 : $*Employee):
  %1 = struct_element_addr %0 : $*Employee, #Employee.name, loc "swift.swift":14:29, scope 16 // user: %2
  %2 = load %1 : $*String, loc "swift.swift":14:29, scope 16 // users: %8, %6, %7
  %3 = struct_element_addr %0 : $*Employee, #Employee.age, loc "swift.swift":14:29, scope 16 // user: %4
  %4 = load %3 : $*Int, loc "swift.swift":14:29, scope 16 // user: %7
  // function_ref specialized Employee.description.getter
  %5 = function_ref @_TTSf4s___TFV4Main8Employeeg11descriptionSS : $@convention(thin) (@guaranteed String, Int) -> @owned String, loc "swift.swift":14:29, scope 18 // user: %7
  retain_value %2 : $String, scope 16             // id: %6
  %7 = apply %5(%2, %4) : $@convention(thin) (@guaranteed String, Int) -> @owned String, loc "swift.swift":14:29, scope 18 // user: %9
  release_value %2 : $String, scope 16            // id: %8
  return %7 : $String, loc "swift.swift":14:29, scope 16 // id: %9
}

sil_scope 19 { loc "swift.swift":22:2 parent @_TFC4Main7CompanycfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @owned Company) -> @owned Company }
sil_scope 20 { loc "swift.swift":25:2 parent 19 }

// Company.init(name : String, employees : [Employee]) -> Company
sil hidden @_TFC4Main7CompanycfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @owned Company) -> @owned Company {
// %0                                             // users: %7, %3
// %1                                             // users: %9, %4
// %2                                             // users: %6, %8, %10, %5
bb0(%0 : $String, %1 : $Array<Employee>, %2 : $Company):
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 19 // id: %3
  debug_value %1 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 19 // id: %4
  debug_value %2 : $Company, let, name "self", loc "swift.swift":22:2, scope 19 // id: %5
  %6 = ref_element_addr %2 : $Company, #Company.name, loc "swift.swift":23:13, scope 20 // user: %7
  store %0 to %6 : $*String, loc "swift.swift":23:13, scope 20 // id: %7
  %8 = ref_element_addr %2 : $Company, #Company.employees, loc "swift.swift":24:18, scope 20 // user: %9
  store %1 to %8 : $*Array<Employee>, loc "swift.swift":24:18, scope 20 // id: %9
  return %2 : $Company, loc "swift.swift":25:2, scope 20 // id: %10
}

sil_scope 21 { loc "swift.swift":22:2 parent @_TFC4Main7CompanyCfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @thick Company.Type) -> @owned Company }
sil_scope 22 {  parent 21 }
sil_scope 23 { loc "swift.swift":22:2 parent 19 inlined_at 22 }
sil_scope 24 { loc "swift.swift":25:2 parent 20 inlined_at 22 }

// Company.__allocating_init(name : String, employees : [Employee]) -> Company
sil hidden @_TFC4Main7CompanyCfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @thick Company.Type) -> @owned Company {
// %0                                             // users: %8, %4
// %1                                             // users: %10, %5
bb0(%0 : $String, %1 : $Array<Employee>, %2 : $@thick Company.Type):
  %3 = alloc_ref $Company, scope 21               // users: %11, %9, %7, %6
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 23 // id: %4
  debug_value %1 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 23 // id: %5
  debug_value %3 : $Company, let, name "self", loc "swift.swift":22:2, scope 23 // id: %6
  %7 = ref_element_addr %3 : $Company, #Company.name, loc "swift.swift":23:13, scope 24 // user: %8
  store %0 to %7 : $*String, loc "swift.swift":23:13, scope 24 // id: %8
  %9 = ref_element_addr %3 : $Company, #Company.employees, loc "swift.swift":24:18, scope 24 // user: %10
  store %1 to %9 : $*Array<Employee>, loc "swift.swift":24:18, scope 24 // id: %10
  return %3 : $Company, scope 21                  // id: %11
}

sil_scope 25 { loc "swift.swift":27:29 parent @_TFC4Main7Companyg11descriptionSS : $@convention(method) (@guaranteed Company) -> @owned String }
sil_scope 26 {  parent @_TTSg5SS___TFs27_allocateUninitializedArrayurFBwTGSax_Bp_ : $@convention(thin) (Builtin.Word) -> (@owned Array<String>, Builtin.RawPointer) }
sil_scope 27 { loc "swift.swift":29:5 parent 25 }
sil_scope 28 { loc "swift.swift":28:16 parent 27 }
sil_scope 29 {  parent 26 inlined_at 28 }
sil_scope 30 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<_ArrayBody, String>.Type) -> @owned ManagedBufferPointer<_ArrayBody, String> }
sil_scope 31 {  parent 26 }
sil_scope 32 {  parent 30 inlined_at 31 }
sil_scope 33 {  parent 32 inlined_at 28 }
sil_scope 34 {  parent @_TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, String>.Type) -> Int }
sil_scope 35 {  parent 30 }
sil_scope 36 {  parent 34 inlined_at 35 }
sil_scope 37 {  parent 36 inlined_at 31 }
sil_scope 38 {  parent 37 inlined_at 28 }
sil_scope 39 {  parent @_TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, String>.Type) -> Int }
sil_scope 40 {  parent 34 }
sil_scope 41 {  parent 39 inlined_at 40 }
sil_scope 42 {  parent 41 inlined_at 35 }
sil_scope 43 {  parent 42 inlined_at 31 }
sil_scope 44 {  parent 43 inlined_at 28 }
sil_scope 45 {  parent @_TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg14_alignmentMaskSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, String>.Type) -> Int }
sil_scope 46 {  parent 30 }
sil_scope 47 {  parent 45 inlined_at 46 }
sil_scope 48 {  parent 47 inlined_at 31 }
sil_scope 49 {  parent 48 inlined_at 28 }
sil_scope 50 {  parent @_TTSg5SS___TZFSa13_adoptStoragefTPs9AnyObject_5countSi_TGSax_GSpx__ : $@convention(method) (@owned AnyObject, Int, @thin Array<String>.Type) -> (@owned Array<String>, UnsafeMutablePointer<String>) }
sil_scope 51 {  parent 29 }
sil_scope 52 {  parent 50 inlined_at 51 }
sil_scope 53 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferCfT5countSi7storageGCs23_ContiguousArrayStoragex__GS_x_ : $@convention(method) (Int, @owned _ContiguousArrayStorage<String>, @thin _ContiguousArrayBuffer<String>.Type) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 54 {  parent 50 }
sil_scope 55 {  parent 53 inlined_at 54 }
sil_scope 56 {  parent 55 inlined_at 51 }
sil_scope 57 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) (Int, Int, @guaranteed _ContiguousArrayBuffer<String>) -> () }
sil_scope 58 {  parent 53 }
sil_scope 59 {  parent 57 inlined_at 58 }
sil_scope 60 {  parent 59 inlined_at 54 }
sil_scope 61 {  parent 60 inlined_at 51 }
sil_scope 62 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> UnsafeMutablePointer<_ArrayBody> }
sil_scope 63 {  parent 57 }
sil_scope 64 {  parent 62 inlined_at 63 }
sil_scope 65 {  parent 64 inlined_at 58 }
sil_scope 66 {  parent 65 inlined_at 54 }
sil_scope 67 {  parent 66 inlined_at 51 }
sil_scope 68 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> UnsafeMutableRawPointer }
sil_scope 69 {  parent 62 }
sil_scope 70 {  parent 68 inlined_at 69 }
sil_scope 71 {  parent 70 inlined_at 63 }
sil_scope 72 {  parent 71 inlined_at 58 }
sil_scope 73 {  parent 72 inlined_at 54 }
sil_scope 74 {  parent 73 inlined_at 51 }
sil_scope 75 {  parent 62 }
sil_scope 76 {  parent 39 inlined_at 75 }
sil_scope 77 {  parent 76 inlined_at 63 }
sil_scope 78 {  parent 77 inlined_at 58 }
sil_scope 79 {  parent 78 inlined_at 54 }
sil_scope 80 {  parent 79 inlined_at 51 }
sil_scope 81 {  parent @_TTSgq5Vs10_ArrayBody___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (_ArrayBody, Int, UnsafeMutablePointer<_ArrayBody>) -> () }
sil_scope 82 {  parent 57 }
sil_scope 83 {  parent 81 inlined_at 82 }
sil_scope 84 {  parent 83 inlined_at 58 }
sil_scope 85 {  parent 84 inlined_at 54 }
sil_scope 86 {  parent 85 inlined_at 51 }
sil_scope 87 {  parent @_TTSg5SS___TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) (@owned _ContiguousArrayBuffer<String>, Int, @thin _ArrayBuffer<String>.Type) -> @owned _ArrayBuffer<String> }
sil_scope 88 {  parent 50 }
sil_scope 89 {  parent 87 inlined_at 88 }
sil_scope 90 {  parent 89 inlined_at 51 }
sil_scope 91 {  parent @_TTSg5SS___TFSaCfT7_bufferGVs12_ArrayBufferx__GSax_ : $@convention(method) (@owned _ArrayBuffer<String>, @thin Array<String>.Type) -> @owned Array<String> }
sil_scope 92 {  parent 50 }
sil_scope 93 {  parent 91 inlined_at 92 }
sil_scope 94 {  parent 93 inlined_at 51 }
sil_scope 95 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> UnsafeMutablePointer<String> }
sil_scope 96 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) (@guaranteed _ContiguousArrayBuffer<String>) -> UnsafeMutablePointer<String> }
sil_scope 97 {  parent 96 }
sil_scope 98 {  parent 95 inlined_at 97 }
sil_scope 99 {  parent 50 }
sil_scope 100 {  parent 98 inlined_at 99 }
sil_scope 101 {  parent 100 inlined_at 51 }
sil_scope 102 {  parent 95 }
sil_scope 103 {  parent 34 inlined_at 102 }
sil_scope 104 {  parent 103 inlined_at 97 }
sil_scope 105 {  parent 104 inlined_at 99 }
sil_scope 106 {  parent 105 inlined_at 51 }
sil_scope 107 {  parent 41 inlined_at 102 }
sil_scope 108 {  parent 107 inlined_at 97 }
sil_scope 109 {  parent 108 inlined_at 99 }
sil_scope 110 {  parent 109 inlined_at 51 }
sil_scope 111 {  parent @_TTSfq4n_n_n_d___TFSSCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__SS : $@convention(thin) (Builtin.RawPointer, Builtin.Word, Builtin.Int1) -> @owned String }
sil_scope 112 {  parent @_TFSSCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__SS : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String }
sil_scope 113 { loc "swift.swift":28:16 parent 27 }
sil_scope 114 {  parent 112 inlined_at 113 }
sil_scope 115 {  parent 114 }
sil_scope 116 {  parent 111 inlined_at 115 }
sil_scope 117 {  parent @_TFSSCfT26stringInterpolationSegmentSS_SS : $@convention(method) (@owned String, @thin String.Type) -> @owned String }
sil_scope 118 { loc "swift.swift":28:16 parent 27 }
sil_scope 119 {  parent 117 inlined_at 118 }
sil_scope 120 {  parent @_TTSg5GSaV4Main8Employee____TFSSCurfT26stringInterpolationSegmentx_SS : $@convention(method) (@owned Array<Employee>, @thin String.Type) -> @owned String }
sil_scope 121 { loc "swift.swift":28:53 parent 27 }
sil_scope 122 {  parent 120 inlined_at 121 }
sil_scope 123 {  parent @_TTSg5GSaV4Main8Employee____TFSSCurfT10describingx_SS : $@convention(method) (@owned Array<Employee>, @thin String.Type) -> @owned String }
sil_scope 124 {  parent 120 }
sil_scope 125 {  parent 123 inlined_at 124 }
sil_scope 126 {  parent 125 inlined_at 121 }
sil_scope 127 { loc "swift.swift":28:54 parent 27 }
sil_scope 128 {  parent 112 inlined_at 127 }
sil_scope 129 {  parent 128 }
sil_scope 130 {  parent 111 inlined_at 129 }
sil_scope 131 { loc "swift.swift":28:54 parent 27 }
sil_scope 132 {  parent 117 inlined_at 131 }
sil_scope 133 {  parent @_TFSSCft19stringInterpolationGSaSS__SS : $@convention(method) (@owned Array<String>, @thin String.Type) -> @owned String }
sil_scope 134 { loc "swift.swift":28:54 parent 27 }
sil_scope 135 {  parent 133 inlined_at 134 }
sil_scope 136 {  parent @_TTSg5SS___TFCs23_ContiguousArrayStorageD : $@convention(method) (@owned _ContiguousArrayStorage<String>) -> () }
sil_scope 137 {  parent 25 }
sil_scope 138 {  parent 136 inlined_at 137 }
sil_scope 139 {  parent @_TTSg5SS___TFCs23_ContiguousArrayStoraged : $@convention(method) (@guaranteed _ContiguousArrayStorage<String>) -> @owned Builtin.NativeObject }
sil_scope 140 {  parent 136 }
sil_scope 141 {  parent 139 inlined_at 140 }
sil_scope 142 {  parent 141 inlined_at 137 }
sil_scope 143 {  parent @_TTSf4n_g__TTSg5SS___TFCs23_ContiguousArrayStorageg9__managerGVs20ManagedBufferPointerVs10_ArrayBodyx_ : $@convention(method) (@guaranteed _ContiguousArrayStorage<String>) -> ManagedBufferPointer<_ArrayBody, String> }
sil_scope 144 {  parent @_TTSg5SS___TFCs23_ContiguousArrayStorageg9__managerGVs20ManagedBufferPointerVs10_ArrayBodyx_ : $@convention(method) (@guaranteed _ContiguousArrayStorage<String>) -> @owned ManagedBufferPointer<_ArrayBody, String> }
sil_scope 145 {  parent 144 }
sil_scope 146 {  parent 143 inlined_at 145 }
sil_scope 147 {  parent 139 }
sil_scope 148 {  parent 146 inlined_at 147 }
sil_scope 149 {  parent 148 inlined_at 140 }
sil_scope 150 {  parent 149 inlined_at 137 }
sil_scope 151 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> UnsafeMutablePointer<String> }
sil_scope 152 {  parent 139 }
sil_scope 153 {  parent 151 inlined_at 152 }
sil_scope 154 {  parent 153 inlined_at 140 }
sil_scope 155 {  parent 154 inlined_at 137 }
sil_scope 156 {  parent @_TTSf4d___TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(thin) () -> Int }
sil_scope 157 {  parent @_TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, String>.Type) -> Int }
sil_scope 158 {  parent 151 }
sil_scope 159 {  parent 157 inlined_at 158 }
sil_scope 160 {  parent 159 }
sil_scope 161 {  parent 156 inlined_at 160 }
sil_scope 162 {  parent 161 inlined_at 152 }
sil_scope 163 {  parent 162 inlined_at 140 }
sil_scope 164 {  parent 163 inlined_at 137 }
sil_scope 165 {  parent @_TTSf4d___TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(thin) () -> Int }
sil_scope 166 {  parent @_TTSg5Vs10_ArrayBody_SS___TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, String>.Type) -> Int }
sil_scope 167 {  parent 166 }
sil_scope 168 {  parent 165 inlined_at 167 }
sil_scope 169 {  parent 156 }
sil_scope 170 {  parent 168 inlined_at 169 }
sil_scope 171 {  parent 170 inlined_at 160 }
sil_scope 172 {  parent 171 inlined_at 152 }
sil_scope 173 {  parent 172 inlined_at 140 }
sil_scope 174 {  parent 173 inlined_at 137 }
sil_scope 175 {  parent 139 }
sil_scope 176 {  parent 146 inlined_at 175 }
sil_scope 177 {  parent 176 inlined_at 140 }
sil_scope 178 {  parent 177 inlined_at 137 }
sil_scope 179 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> UnsafeMutablePointer<_ArrayBody> }
sil_scope 180 {  parent 139 }
sil_scope 181 {  parent 179 inlined_at 180 }
sil_scope 182 {  parent 181 inlined_at 140 }
sil_scope 183 {  parent 182 inlined_at 137 }
sil_scope 184 {  parent 179 }
sil_scope 185 {  parent 168 inlined_at 184 }
sil_scope 186 {  parent 185 inlined_at 180 }
sil_scope 187 {  parent 186 inlined_at 140 }
sil_scope 188 {  parent 187 inlined_at 137 }
sil_scope 189 {  parent @_TTSg5SS___TFSp12deinitializefT5countSi_Sv : $@convention(method) (Int, UnsafeMutablePointer<String>) -> UnsafeMutableRawPointer }
sil_scope 190 {  parent 139 }
sil_scope 191 {  parent 189 inlined_at 190 }
sil_scope 192 {  parent 191 inlined_at 140 }
sil_scope 193 {  parent 192 inlined_at 137 }
sil_scope 194 {  parent 139 }
sil_scope 195 {  parent 146 inlined_at 194 }
sil_scope 196 {  parent 195 inlined_at 140 }
sil_scope 197 {  parent 196 inlined_at 137 }
sil_scope 198 {  parent 139 }
sil_scope 199 {  parent 179 inlined_at 198 }
sil_scope 200 {  parent 199 inlined_at 140 }
sil_scope 201 {  parent 200 inlined_at 137 }
sil_scope 202 {  parent 185 inlined_at 198 }
sil_scope 203 {  parent 202 inlined_at 140 }
sil_scope 204 {  parent 203 inlined_at 137 }
sil_scope 205 {  parent 139 }
sil_scope 206 {  parent 146 inlined_at 205 }
sil_scope 207 {  parent 206 inlined_at 140 }
sil_scope 208 {  parent 207 inlined_at 137 }
sil_scope 209 { loc "swift.swift":20:6 parent @_TTSf4n_g__TFC4Main7Companyg4nameSS : $@convention(method) (@guaranteed Company) -> String }
sil_scope 210 { loc "swift.swift":20:6 parent @_TFC4Main7Companyg4nameSS : $@convention(method) (@guaranteed Company) -> @owned String }
sil_scope 211 { loc "swift.swift":20:6 parent 210 }
sil_scope 212 { loc "swift.swift":20:6 parent 209 inlined_at 211 }
sil_scope 213 { loc "swift.swift":28:25 parent 27 }
sil_scope 214 { loc "swift.swift":20:6 parent 212 inlined_at 213 }
sil_scope 215 { loc "swift.swift":20:6 parent 209 }
sil_scope 216 { loc "swift.swift":20:6 parent 215 inlined_at 211 }
sil_scope 217 { loc "swift.swift":20:6 parent 216 inlined_at 213 }
sil_scope 218 { loc "swift.swift":28:29 parent 27 }
sil_scope 219 {  parent 117 inlined_at 218 }
sil_scope 220 { loc "swift.swift":28:30 parent 27 }
sil_scope 221 {  parent 112 inlined_at 220 }
sil_scope 222 {  parent 221 }
sil_scope 223 {  parent 111 inlined_at 222 }
sil_scope 224 { loc "swift.swift":28:30 parent 27 }
sil_scope 225 {  parent 117 inlined_at 224 }
sil_scope 226 { loc "swift.swift":21:6 parent @_TTSf4n_g__TFC4Main7Companyg9employeesGSaVS_8Employee_ : $@convention(method) (@guaranteed Company) -> Array<Employee> }
sil_scope 227 { loc "swift.swift":21:6 parent @_TFC4Main7Companyg9employeesGSaVS_8Employee_ : $@convention(method) (@guaranteed Company) -> @owned Array<Employee> }
sil_scope 228 { loc "swift.swift":21:6 parent 227 }
sil_scope 229 { loc "swift.swift":21:6 parent 226 inlined_at 228 }
sil_scope 230 { loc "swift.swift":28:44 parent 27 }
sil_scope 231 { loc "swift.swift":21:6 parent 229 inlined_at 230 }
sil_scope 232 { loc "swift.swift":21:6 parent 226 }
sil_scope 233 { loc "swift.swift":21:6 parent 232 inlined_at 228 }
sil_scope 234 { loc "swift.swift":21:6 parent 233 inlined_at 230 }
sil_scope 235 { loc "swift.swift":28:25 parent 27 }
sil_scope 236 { loc "swift.swift":20:6 parent 212 inlined_at 235 }
sil_scope 237 { loc "swift.swift":20:6 parent 216 inlined_at 235 }
sil_scope 238 { loc "swift.swift":28:44 parent 27 }
sil_scope 239 { loc "swift.swift":21:6 parent 229 inlined_at 238 }
sil_scope 240 { loc "swift.swift":21:6 parent 233 inlined_at 238 }

// Company.description.getter
sil hidden @_TFC4Main7Companyg11descriptionSS : $@convention(method) (@guaranteed Company) -> @owned String {
// %0                                             // users: %292, %293, %270, %236, %135, %269, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":27:29, scope 25 // id: %1
  %2 = integer_literal $Builtin.Int64, 5, scope 29 // users: %3, %60
  %3 = struct $Int (%2 : $Builtin.Int64), scope 29 // users: %100, %97, %96, %90, %89, %88, %87, %8, %4
  debug_value %3 : $Int, scope 29                 // id: %4
  %5 = metatype $@thick _ContiguousArrayStorage<String>.Type, scope 29 // user: %6
  %6 = init_existential_metatype %5 : $@thick _ContiguousArrayStorage<String>.Type, $@thick AnyObject.Type, scope 29 // users: %84, %7
  debug_value %6 : $@thick AnyObject.Type, scope 33 // id: %7
  debug_value %3 : $Int, scope 33                 // id: %8
  %9 = integer_literal $Builtin.Int1, -1, scope 33 // users: %278, %249, %164, %216, %119, %64, %60, %44, %37, %18
  %10 = builtin "onFastPath"() : $(), scope 38
  %11 = builtin "onFastPath"() : $(), scope 44
  %12 = metatype $@thick HeapObject.Type, scope 44 // users: %74, %13
  %13 = builtin "sizeof"<HeapObject>(%12 : $@thick HeapObject.Type) : $Builtin.Word, scope 44 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 44 // user: %18
  %15 = metatype $@thick _ArrayBody.Type, scope 44 // users: %35, %16
  %16 = builtin "alignof"<_ArrayBody>(%15 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 44 // user: %17
  %17 = builtin "zextOrBitCast_Word_Int64"(%16 : $Builtin.Word) : $Builtin.Int64, scope 44 // users: %204, %70, %26, %18
  %18 = builtin "uadd_with_overflow_Int64"(%14 : $Builtin.Int64, %17 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 44 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 44 // user: %24
  %20 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 1, scope 44 // user: %21
  cond_fail %20 : $Builtin.Int1, scope 44         // id: %21
  %22 = integer_literal $Builtin.Int64, 1, scope 44 // users: %169, %80, %50, %48, %26, %24
  %23 = integer_literal $Builtin.Int1, 0, scope 44 // users: %80, %50, %48, %26, %24
  %24 = builtin "usub_with_overflow_Int64"(%19 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 44 // user: %25
  %25 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 0, scope 44 // user: %30
  %26 = builtin "usub_with_overflow_Int64"(%17 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 44 // user: %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 44 // user: %29
  %28 = integer_literal $Builtin.Int64, -1, scope 44 // users: %52, %29
  %29 = builtin "xor_Int64"(%27 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 44 // user: %30
  %30 = builtin "and_Int64"(%25 : $Builtin.Int64, %29 : $Builtin.Int64) : $Builtin.Int64, scope 44 // user: %31
  %31 = builtin "u_to_s_checked_conversion_Int64"(%30 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 44 // users: %33, %32
  %32 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 0, scope 44 // users: %94, %37
  %33 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 1, scope 44 // user: %34
  cond_fail %33 : $Builtin.Int1, scope 44         // id: %34
  %35 = builtin "sizeof"<_ArrayBody>(%15 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 38 // user: %36
  %36 = builtin "zextOrBitCast_Word_Int64"(%35 : $Builtin.Word) : $Builtin.Int64, scope 38 // user: %37
  %37 = builtin "sadd_with_overflow_Int64"(%32 : $Builtin.Int64, %36 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 38 // users: %39, %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 38 // user: %44
  %39 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 1, scope 38 // user: %40
  cond_fail %39 : $Builtin.Int1, scope 38         // id: %40
  %41 = metatype $@thick String.Type, scope 38    // users: %194, %58, %42
  %42 = builtin "alignof"<String>(%41 : $@thick String.Type) : $Builtin.Word, scope 38 // user: %43
  %43 = builtin "zextOrBitCast_Word_Int64"(%42 : $Builtin.Word) : $Builtin.Int64, scope 38 // users: %72, %70, %50, %44
  %44 = builtin "uadd_with_overflow_Int64"(%38 : $Builtin.Int64, %43 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 38 // users: %46, %45
  %45 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 0, scope 38 // user: %48
  %46 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 1, scope 38 // user: %47
  cond_fail %46 : $Builtin.Int1, scope 38         // id: %47
  %48 = builtin "usub_with_overflow_Int64"(%45 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 38 // user: %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, scope 38 // user: %53
  %50 = builtin "usub_with_overflow_Int64"(%43 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 38 // user: %51
  %51 = tuple_extract %50 : $(Builtin.Int64, Builtin.Int1), 0, scope 38 // user: %52
  %52 = builtin "xor_Int64"(%51 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 38 // user: %53
  %53 = builtin "and_Int64"(%49 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int64, scope 38 // user: %54
  %54 = builtin "u_to_s_checked_conversion_Int64"(%53 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 38 // users: %56, %55
  %55 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 0, scope 38 // users: %113, %64
  %56 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 1, scope 38 // user: %57
  cond_fail %56 : $Builtin.Int1, scope 38         // id: %57
  %58 = builtin "strideof_nonzero"<String>(%41 : $@thick String.Type) : $Builtin.Word, scope 33 // user: %59
  %59 = builtin "zextOrBitCast_Word_Int64"(%58 : $Builtin.Word) : $Builtin.Int64, scope 33 // user: %60
  %60 = builtin "smul_with_overflow_Int64"(%2 : $Builtin.Int64, %59 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 33 // users: %62, %61
  %61 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 0, scope 33 // user: %64
  %62 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 1, scope 33 // user: %63
  cond_fail %62 : $Builtin.Int1, scope 33         // id: %63
  %64 = builtin "sadd_with_overflow_Int64"(%55 : $Builtin.Int64, %61 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 33 // users: %66, %65
  %65 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 0, scope 33 // user: %68
  %66 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 1, scope 33 // user: %67
  cond_fail %66 : $Builtin.Int1, scope 33         // id: %67
  %68 = struct $Int (%65 : $Builtin.Int64), scope 33 // users: %84, %69
  debug_value %68 : $Int, scope 33                // id: %69
  %70 = builtin "cmp_sge_Int64"(%43 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int1, scope 49 // user: %71
  cond_br %70, bb1, bb7, scope 49                 // id: %71

bb1:                                              // Preds: bb0
  br bb2(%43 : $Builtin.Int64), scope 49          // id: %72

// %73                                            // users: %78, %76
bb2(%73 : $Builtin.Int64):                        // Preds: bb7 bb1
  %74 = builtin "alignof"<HeapObject>(%12 : $@thick HeapObject.Type) : $Builtin.Word, scope 49 // user: %75
  %75 = builtin "zextOrBitCast_Word_Int64"(%74 : $Builtin.Word) : $Builtin.Int64, scope 49 // users: %203, %76
  %76 = builtin "cmp_sge_Int64"(%73 : $Builtin.Int64, %75 : $Builtin.Int64) : $Builtin.Int1, scope 49 // user: %77
  cond_br %76, bb3, bb6, scope 49                 // id: %77

bb3:                                              // Preds: bb2
  br bb4(%73 : $Builtin.Int64), scope 49          // id: %78

// %79                                            // user: %80
bb4(%79 : $Builtin.Int64):                        // Preds: bb6 bb3
  %80 = builtin "ssub_with_overflow_Int64"(%79 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 49 // user: %81
  %81 = tuple_extract %80 : $(Builtin.Int64, Builtin.Int1), 0, scope 49 // user: %82
  %82 = struct $Int (%81 : $Builtin.Int64), scope 49 // user: %84
  // function_ref swift_bufferAllocateOnStack
  %83 = function_ref @swift_bufferAllocateOnStack : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 25 // user: %84
  %84 = apply %83(%6, %68, %82) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 33 // users: %177, %201, %105, %92, %86, %85
  debug_value %84 : $AnyObject, scope 33          // id: %85
  debug_value %84 : $AnyObject, scope 52          // id: %86
  debug_value %3 : $Int, scope 52                 // id: %87
  debug_value %3 : $Int, scope 56                 // id: %88
  debug_value %3 : $Int, scope 61                 // id: %89
  debug_value %3 : $Int, scope 61                 // id: %90
  %91 = builtin "onFastPath"() : $(), scope 67
  %92 = ref_to_raw_pointer %84 : $AnyObject to $Builtin.RawPointer, scope 74 // users: %114, %95
  %93 = builtin "onFastPath"() : $(), scope 80
  %94 = builtin "truncOrBitCast_Int64_Word"(%32 : $Builtin.Int64) : $Builtin.Word, scope 67 // user: %95
  %95 = index_raw_pointer %92 : $Builtin.RawPointer, %94 : $Builtin.Word, scope 67 // user: %103
  debug_value %3 : $Int, scope 61                 // id: %96
  debug_value %3 : $Int, scope 61                 // id: %97
  %98 = integer_literal $Builtin.Int64, 10, scope 61 // user: %99
  %99 = struct $UInt (%98 : $Builtin.Int64), scope 61 // user: %100
  %100 = struct $_SwiftArrayBodyStorage (%3 : $Int, %99 : $UInt), scope 61 // user: %101
  %101 = struct $_ArrayBody (%100 : $_SwiftArrayBodyStorage), scope 61 // users: %104, %102
  debug_value %101 : $_ArrayBody, scope 86        // id: %102
  %103 = pointer_to_address %95 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 86 // users: %188, %104
  store %101 to %103 : $*_ArrayBody, scope 86     // id: %104
  %105 = unchecked_ref_cast %84 : $AnyObject to $Builtin.BridgeObject, scope 56 // user: %106
  %106 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%105 : $Builtin.BridgeObject), scope 90 // user: %107
  %107 = struct $_ArrayBuffer<String> (%106 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 90 // users: %109, %108
  debug_value %107 : $_ArrayBuffer<String>, scope 94 // id: %108
  %109 = struct $Array<String> (%107 : $_ArrayBuffer<String>), scope 94 // users: %115, %176
  %110 = builtin "onFastPath"() : $(), scope 101
  %111 = builtin "onFastPath"() : $(), scope 106
  %112 = builtin "onFastPath"() : $(), scope 110
  %113 = builtin "truncOrBitCast_Int64_Word"(%55 : $Builtin.Int64) : $Builtin.Word, scope 101 // user: %114
  %114 = index_raw_pointer %92 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 101 // users: %194, %116
  debug_value %109 : $Array<String>, scope 29     // id: %115
  %116 = pointer_to_address %114 : $Builtin.RawPointer to [strict] $*String, loc "swift.swift":28:16, scope 27 // users: %291, %275, %262, %246, %160, %229, %213, %134, %132
  %117 = string_literal utf8 "(name=", loc "swift.swift":28:16, scope 27 // users: %120, %118
  debug_value %117 : $Builtin.RawPointer, scope 116 // id: %118
  debug_value %9 : $Builtin.Int1, scope 116       // id: %119
  %120 = struct $UnsafeMutableRawPointer (%117 : $Builtin.RawPointer), scope 116 // user: %121
  %121 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %120 : $UnsafeMutableRawPointer, scope 116 // users: %127, %123
  %122 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 116 // users: %285, %282, %256, %253, %168, %170, %150, %220, %223, %127, %124
  debug_value %121 : $Optional<UnsafeMutableRawPointer>, scope 116 // id: %123
  debug_value %122 : $Optional<AnyObject>, scope 116 // id: %124
  %125 = integer_literal $Builtin.Int64, 6, scope 116 // user: %126
  %126 = struct $UInt (%125 : $Builtin.Int64), scope 116 // user: %127
  %127 = struct $_StringCore (%121 : $Optional<UnsafeMutableRawPointer>, %126 : $UInt, %122 : $Optional<AnyObject>), scope 116 // user: %128
  %128 = struct $String (%127 : $_StringCore), scope 116 // users: %129, %131
  debug_value %128 : $String, scope 119           // id: %129
  // function_ref specialized _toStringReadOnlyStreamable<A where ...> (A) -> String
  %130 = function_ref @_TTSgq5SSSSs20TextOutputStreamables___TFs27_toStringReadOnlyStreamableuRxs20TextOutputStreamablerFxSS : $@convention(thin) (@owned String) -> @owned String, scope 119 // users: %288, %272, %259, %243, %173, %226, %210, %131
  %131 = apply %130(%128) : $@convention(thin) (@owned String) -> @owned String, scope 119 // user: %132
  store %131 to %116 : $*String, loc "swift.swift":28:16, scope 27 // id: %132
  %133 = integer_literal $Builtin.Word, 1, loc "swift.swift":28:29, scope 27 // users: %163, %134
  %134 = index_addr %116 : $*String, %133 : $Builtin.Word, loc "swift.swift":28:29, scope 27 // users: %273, %244, %211
  checked_cast_br [exact] %0 : $Company to $Company, bb8, bb9, loc "swift.swift":28:25, scope 27 // id: %135

// %136                                           // users: %141, %140, %138
// %137                                           // user: %158
bb5(%136 : $Array<Employee>, %137 : $*String):    // Preds: bb8 bb10 bb11
  debug_value %136 : $Array<Employee>, scope 122  // id: %138
  %139 = alloc_stack $Array<Employee>, scope 126  // users: %157, %154, %143, %140
  store %136 to %139 : $*Array<Employee>, scope 126 // id: %140
  debug_value %136 : $Array<Employee>, scope 126  // id: %141
  %142 = alloc_stack $String, scope 126           // users: %156, %155, %154, %152
  debug_value_addr %139 : $*Array<Employee>, scope 126 // id: %143
  %144 = global_addr @_Tvs19_emptyStringStorageVs6UInt32 : $*UInt32, scope 126 // user: %145
  %145 = address_to_pointer %144 : $*UInt32 to $Builtin.RawPointer, scope 126 // user: %146
  %146 = struct $UnsafeMutableRawPointer (%145 : $Builtin.RawPointer), scope 126 // user: %147
  %147 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %146 : $UnsafeMutableRawPointer, scope 126 // user: %150
  %148 = integer_literal $Builtin.Int64, 0, scope 126 // user: %149
  %149 = struct $UInt (%148 : $Builtin.Int64), scope 126 // user: %150
  %150 = struct $_StringCore (%147 : $Optional<UnsafeMutableRawPointer>, %149 : $UInt, %122 : $Optional<AnyObject>), scope 126 // user: %151
  %151 = struct $String (%150 : $_StringCore), scope 126 // user: %152
  store %151 to %142 : $*String, scope 126        // id: %152
  // function_ref _print_unlocked<A, B where ...> (A, inout B) -> ()
  %153 = function_ref @_TFs15_print_unlockedu0_R_s16TextOutputStreamrFTxRq__T_ : $@convention(thin) <τ_0_0, τ_0_1 where τ_0_1 : TextOutputStream> (@in τ_0_0, @inout τ_0_1) -> (), scope 126 // user: %154
  %154 = apply %153<Array<Employee>, String>(%139, %142) : $@convention(thin) <τ_0_0, τ_0_1 where τ_0_1 : TextOutputStream> (@in τ_0_0, @inout τ_0_1) -> (), scope 126
  %155 = load %142 : $*String, scope 126          // user: %158
  dealloc_stack %142 : $*String, scope 126        // id: %156
  dealloc_stack %139 : $*Array<Employee>, scope 126 // id: %157
  store %155 to %137 : $*String, loc "swift.swift":28:53, scope 27 // id: %158
  %159 = integer_literal $Builtin.Word, 4, loc "swift.swift":28:54, scope 27 // user: %160
  %160 = index_addr %116 : $*String, %159 : $Builtin.Word, loc "swift.swift":28:54, scope 27 // user: %174
  %161 = string_literal utf8 ")", loc "swift.swift":28:54, scope 27 // users: %165, %162
  debug_value %161 : $Builtin.RawPointer, scope 130 // id: %162
  debug_value %133 : $Builtin.Word, scope 130     // id: %163
  debug_value %9 : $Builtin.Int1, scope 130       // id: %164
  %165 = struct $UnsafeMutableRawPointer (%161 : $Builtin.RawPointer), scope 130 // user: %166
  %166 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %165 : $UnsafeMutableRawPointer, scope 130 // users: %170, %167
  debug_value %166 : $Optional<UnsafeMutableRawPointer>, scope 130 // id: %167
  debug_value %122 : $Optional<AnyObject>, scope 130 // id: %168
  %169 = struct $UInt (%22 : $Builtin.Int64), scope 130 // user: %170
  %170 = struct $_StringCore (%166 : $Optional<UnsafeMutableRawPointer>, %169 : $UInt, %122 : $Optional<AnyObject>), scope 130 // user: %171
  %171 = struct $String (%170 : $_StringCore), scope 130 // users: %172, %173
  debug_value %171 : $String, scope 132           // id: %172
  %173 = apply %130(%171) : $@convention(thin) (@owned String) -> @owned String, scope 132 // user: %174
  store %173 to %160 : $*String, loc "swift.swift":28:54, scope 27 // id: %174
  // function_ref specialized String.init(stringInterpolation : [String]...) -> String
  %175 = function_ref @_TTSfq4g_d___TFSSCft19stringInterpolationGSaSS__SS : $@convention(thin) (@guaranteed Array<String>) -> @owned String, scope 135 // user: %176
  %176 = apply %175(%109) : $@convention(thin) (@guaranteed Array<String>) -> @owned String, scope 135 // user: %202
  %177 = unchecked_ref_cast %84 : $AnyObject to $_ContiguousArrayStorage<String>, scope 25 // users: %199, %198, %195, %185, %181, %180, %179, %178
  set_deallocating %177 : $_ContiguousArrayStorage<String>, scope 25 // id: %178
  debug_value %177 : $_ContiguousArrayStorage<String>, scope 138 // id: %179
  debug_value %177 : $_ContiguousArrayStorage<String>, scope 142 // id: %180
  debug_value %177 : $_ContiguousArrayStorage<String>, scope 150 // id: %181
  %182 = builtin "onFastPath"() : $(), scope 155
  %183 = builtin "onFastPath"() : $(), scope 164
  %184 = builtin "onFastPath"() : $(), scope 174
  debug_value %177 : $_ContiguousArrayStorage<String>, scope 178 // id: %185
  %186 = builtin "onFastPath"() : $(), scope 183
  %187 = builtin "onFastPath"() : $(), scope 188
  %188 = struct_element_addr %103 : $*_ArrayBody, #_ArrayBody._storage, scope 142 // user: %189
  %189 = struct_element_addr %188 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 142 // user: %190
  %190 = struct_element_addr %189 : $*Int, #Int._value, scope 142 // user: %191
  %191 = load %190 : $*Builtin.Int64, scope 142   // user: %192
  %192 = builtin "assumeNonNegative_Int64"(%191 : $Builtin.Int64) : $Builtin.Int64, scope 142 // user: %193
  %193 = builtin "truncOrBitCast_Int64_Word"(%192 : $Builtin.Int64) : $Builtin.Word, scope 193 // user: %194
  %194 = builtin "destroyArray"<String>(%41 : $@thick String.Type, %114 : $Builtin.RawPointer, %193 : $Builtin.Word) : $(), scope 193
  debug_value %177 : $_ContiguousArrayStorage<String>, scope 197 // id: %195
  %196 = builtin "onFastPath"() : $(), scope 201
  %197 = builtin "onFastPath"() : $(), scope 204
  debug_value %177 : $_ContiguousArrayStorage<String>, scope 208 // id: %198
  dealloc_ref %177 : $_ContiguousArrayStorage<String>, scope 138 // id: %199
  // function_ref swift_bufferDeallocateFromStack
  %200 = function_ref @swift_bufferDeallocateFromStack : $@convention(thin) (@guaranteed AnyObject) -> (), scope 25 // user: %201
  %201 = apply %200(%84) : $@convention(thin) (@guaranteed AnyObject) -> (), scope 25
  return %176 : $String, loc "swift.swift":28:9, scope 27 // id: %202

bb6:                                              // Preds: bb2
  br bb4(%75 : $Builtin.Int64), scope 49          // id: %203

bb7:                                              // Preds: bb0
  br bb2(%17 : $Builtin.Int64), scope 49          // id: %204

// %205                                           // users: %231, %230, %207, %206
bb8(%205 : $Company):                             // Preds: bb4
  debug_value %205 : $Company, let, name "self", argno 1, loc "swift.swift":20:6, scope 214 // id: %206
  %207 = ref_element_addr %205 : $Company, #Company.name, scope 217 // user: %208
  %208 = load %207 : $*String, scope 217          // users: %233, %209, %210
  debug_value %208 : $String, scope 219           // id: %209
  %210 = apply %130(%208) : $@convention(thin) (@owned String) -> @owned String, scope 219 // user: %211
  store %210 to %134 : $*String, loc "swift.swift":28:29, scope 27 // id: %211
  %212 = integer_literal $Builtin.Word, 2, loc "swift.swift":28:30, scope 27 // user: %213
  %213 = index_addr %116 : $*String, %212 : $Builtin.Word, loc "swift.swift":28:30, scope 27 // user: %227
  %214 = string_literal utf8 ", employees=", loc "swift.swift":28:30, scope 27 // users: %217, %215
  debug_value %214 : $Builtin.RawPointer, scope 223 // id: %215
  debug_value %9 : $Builtin.Int1, scope 223       // id: %216
  %217 = struct $UnsafeMutableRawPointer (%214 : $Builtin.RawPointer), scope 223 // user: %218
  %218 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %217 : $UnsafeMutableRawPointer, scope 223 // users: %223, %219
  debug_value %218 : $Optional<UnsafeMutableRawPointer>, scope 223 // id: %219
  debug_value %122 : $Optional<AnyObject>, scope 223 // id: %220
  %221 = integer_literal $Builtin.Int64, 12, scope 223 // user: %222
  %222 = struct $UInt (%221 : $Builtin.Int64), scope 223 // user: %223
  %223 = struct $_StringCore (%218 : $Optional<UnsafeMutableRawPointer>, %222 : $UInt, %122 : $Optional<AnyObject>), scope 223 // user: %224
  %224 = struct $String (%223 : $_StringCore), scope 223 // users: %225, %226
  debug_value %224 : $String, scope 225           // id: %225
  %226 = apply %130(%224) : $@convention(thin) (@owned String) -> @owned String, scope 225 // user: %227
  store %226 to %213 : $*String, loc "swift.swift":28:30, scope 27 // id: %227
  %228 = integer_literal $Builtin.Word, 3, loc "swift.swift":28:53, scope 27 // user: %229
  %229 = index_addr %116 : $*String, %228 : $Builtin.Word, loc "swift.swift":28:53, scope 27 // user: %235
  debug_value %205 : $Company, let, name "self", argno 1, loc "swift.swift":21:6, scope 231 // id: %230
  %231 = ref_element_addr %205 : $Company, #Company.employees, scope 234 // user: %232
  %232 = load %231 : $*Array<Employee>, scope 234 // users: %234, %235
  retain_value %208 : $String, scope 25           // id: %233
  retain_value %232 : $Array<Employee>, scope 25  // id: %234
  br bb5(%232 : $Array<Employee>, %229 : $*String), loc "swift.swift":28:44, scope 27 // id: %235

bb9:                                              // Preds: bb4
  checked_cast_br [exact] %0 : $Company to $PaperCompany, bb10, bb11, loc "swift.swift":28:25, scope 27 // id: %236

// %237                                           // user: %238
bb10(%237 : $PaperCompany):                       // Preds: bb9
  %238 = upcast %237 : $PaperCompany to $Company, loc "swift.swift":28:25, scope 27 // users: %263, %264, %240, %239
  debug_value %238 : $Company, let, name "self", argno 1, loc "swift.swift":20:6, scope 236 // id: %239
  %240 = ref_element_addr %238 : $Company, #Company.name, scope 237 // user: %241
  %241 = load %240 : $*String, scope 237          // users: %266, %243, %242
  debug_value %241 : $String, scope 219           // id: %242
  %243 = apply %130(%241) : $@convention(thin) (@owned String) -> @owned String, scope 219 // user: %244
  store %243 to %134 : $*String, loc "swift.swift":28:29, scope 27 // id: %244
  %245 = integer_literal $Builtin.Word, 2, loc "swift.swift":28:30, scope 27 // user: %246
  %246 = index_addr %116 : $*String, %245 : $Builtin.Word, loc "swift.swift":28:30, scope 27 // user: %260
  %247 = string_literal utf8 ", employees=", loc "swift.swift":28:30, scope 27 // users: %250, %248
  debug_value %247 : $Builtin.RawPointer, scope 223 // id: %248
  debug_value %9 : $Builtin.Int1, scope 223       // id: %249
  %250 = struct $UnsafeMutableRawPointer (%247 : $Builtin.RawPointer), scope 223 // user: %251
  %251 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %250 : $UnsafeMutableRawPointer, scope 223 // users: %256, %252
  debug_value %251 : $Optional<UnsafeMutableRawPointer>, scope 223 // id: %252
  debug_value %122 : $Optional<AnyObject>, scope 223 // id: %253
  %254 = integer_literal $Builtin.Int64, 12, scope 223 // user: %255
  %255 = struct $UInt (%254 : $Builtin.Int64), scope 223 // user: %256
  %256 = struct $_StringCore (%251 : $Optional<UnsafeMutableRawPointer>, %255 : $UInt, %122 : $Optional<AnyObject>), scope 223 // user: %257
  %257 = struct $String (%256 : $_StringCore), scope 223 // users: %259, %258
  debug_value %257 : $String, scope 225           // id: %258
  %259 = apply %130(%257) : $@convention(thin) (@owned String) -> @owned String, scope 225 // user: %260
  store %259 to %246 : $*String, loc "swift.swift":28:30, scope 27 // id: %260
  %261 = integer_literal $Builtin.Word, 3, loc "swift.swift":28:53, scope 27 // user: %262
  %262 = index_addr %116 : $*String, %261 : $Builtin.Word, loc "swift.swift":28:53, scope 27 // user: %268
  debug_value %238 : $Company, let, name "self", argno 1, loc "swift.swift":21:6, scope 239 // id: %263
  %264 = ref_element_addr %238 : $Company, #Company.employees, scope 240 // user: %265
  %265 = load %264 : $*Array<Employee>, scope 240 // users: %267, %268
  retain_value %241 : $String, scope 25           // id: %266
  retain_value %265 : $Array<Employee>, scope 25  // id: %267
  br bb5(%265 : $Array<Employee>, %262 : $*String), loc "swift.swift":28:44, scope 27 // id: %268

bb11:                                             // Preds: bb9
  %269 = class_method %0 : $Company, #Company.name!getter.1 : (Company) -> () -> String , $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":28:25, scope 27 // user: %270
  %270 = apply %269(%0) : $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":28:25, scope 27 // users: %271, %272
  debug_value %270 : $String, scope 219           // id: %271
  %272 = apply %130(%270) : $@convention(thin) (@owned String) -> @owned String, scope 219 // user: %273
  store %272 to %134 : $*String, loc "swift.swift":28:29, scope 27 // id: %273
  %274 = integer_literal $Builtin.Word, 2, loc "swift.swift":28:30, scope 27 // user: %275
  %275 = index_addr %116 : $*String, %274 : $Builtin.Word, loc "swift.swift":28:30, scope 27 // user: %289
  %276 = string_literal utf8 ", employees=", loc "swift.swift":28:30, scope 27 // users: %279, %277
  debug_value %276 : $Builtin.RawPointer, scope 223 // id: %277
  debug_value %9 : $Builtin.Int1, scope 223       // id: %278
  %279 = struct $UnsafeMutableRawPointer (%276 : $Builtin.RawPointer), scope 223 // user: %280
  %280 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %279 : $UnsafeMutableRawPointer, scope 223 // users: %285, %281
  debug_value %280 : $Optional<UnsafeMutableRawPointer>, scope 223 // id: %281
  debug_value %122 : $Optional<AnyObject>, scope 223 // id: %282
  %283 = integer_literal $Builtin.Int64, 12, scope 223 // user: %284
  %284 = struct $UInt (%283 : $Builtin.Int64), scope 223 // user: %285
  %285 = struct $_StringCore (%280 : $Optional<UnsafeMutableRawPointer>, %284 : $UInt, %122 : $Optional<AnyObject>), scope 223 // user: %286
  %286 = struct $String (%285 : $_StringCore), scope 223 // users: %288, %287
  debug_value %286 : $String, scope 225           // id: %287
  %288 = apply %130(%286) : $@convention(thin) (@owned String) -> @owned String, scope 225 // user: %289
  store %288 to %275 : $*String, loc "swift.swift":28:30, scope 27 // id: %289
  %290 = integer_literal $Builtin.Word, 3, loc "swift.swift":28:53, scope 27 // user: %291
  %291 = index_addr %116 : $*String, %290 : $Builtin.Word, loc "swift.swift":28:53, scope 27 // user: %294
  %292 = class_method %0 : $Company, #Company.employees!getter.1 : (Company) -> () -> [Employee] , $@convention(method) (@guaranteed Company) -> @owned Array<Employee>, loc "swift.swift":28:44, scope 27 // user: %293
  %293 = apply %292(%0) : $@convention(method) (@guaranteed Company) -> @owned Array<Employee>, loc "swift.swift":28:44, scope 27 // user: %294
  br bb5(%293 : $Array<Employee>, %291 : $*String), loc "swift.swift":28:44, scope 27 // id: %294
}

sil_scope 241 { loc "swift.swift":19:7 parent @_TFC4Main7CompanyD : $@convention(method) (@owned Company) -> () }
sil_scope 242 { loc "swift.swift":19:7 parent @_TFC4Main7Companyd : $@convention(method) (@guaranteed Company) -> @owned Builtin.NativeObject }
sil_scope 243 {  parent 241 }
sil_scope 244 { loc "swift.swift":19:7 parent 242 inlined_at 243 }
sil_scope 245 { loc "swift.swift":19:7 parent 242 }
sil_scope 246 { loc "swift.swift":19:7 parent 245 inlined_at 243 }
sil_scope 247 { loc "swift.swift":19:7 parent @_TFC4Main7CompanyD : $@convention(method) (@owned Company) -> () }

// Company.__deallocating_deinit
sil hidden @_TFC4Main7CompanyD : $@convention(method) (@owned Company) -> () {
// %0                                             // users: %14, %8, %3, %2, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":19:7, scope 241 // id: %1
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":19:7, scope 244 // id: %2
  %3 = ref_element_addr %0 : $Company, #Company.name, scope 246 // user: %4
  %4 = struct_element_addr %3 : $*String, #String._core, scope 246 // user: %5
  %5 = struct_element_addr %4 : $*_StringCore, #_StringCore._owner, scope 246 // user: %6
  %6 = load %5 : $*Optional<AnyObject>, scope 246 // user: %7
  release_value %6 : $Optional<AnyObject>, scope 247 // id: %7
  %8 = ref_element_addr %0 : $Company, #Company.employees, scope 246 // user: %9
  %9 = struct_element_addr %8 : $*Array<Employee>, #Array._buffer, scope 246 // user: %10
  %10 = struct_element_addr %9 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 246 // user: %11
  %11 = struct_element_addr %10 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 246 // user: %12
  %12 = load %11 : $*Builtin.BridgeObject, scope 246 // user: %13
  strong_release %12 : $Builtin.BridgeObject, scope 247 // id: %13
  dealloc_ref %0 : $Company, scope 241            // id: %14
  %15 = tuple (), scope 241                       // user: %16
  return %15 : $(), scope 241                     // id: %16
}

sil_scope 248 { loc "swift.swift":19:7 parent @_TFC4Main7Companyd : $@convention(method) (@guaranteed Company) -> @owned Builtin.NativeObject }

// Company.deinit
sil hidden @_TFC4Main7Companyd : $@convention(method) (@guaranteed Company) -> @owned Builtin.NativeObject {
// %0                                             // users: %8, %3, %2, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":19:7, scope 242 // id: %1
  %2 = unchecked_ref_cast %0 : $Company to $Builtin.NativeObject, scope 245 // user: %14
  %3 = ref_element_addr %0 : $Company, #Company.name, scope 245 // user: %4
  %4 = struct_element_addr %3 : $*String, #String._core, scope 245 // user: %5
  %5 = struct_element_addr %4 : $*_StringCore, #_StringCore._owner, scope 245 // user: %6
  %6 = load %5 : $*Optional<AnyObject>, scope 245 // user: %7
  release_value %6 : $Optional<AnyObject>, scope 248 // id: %7
  %8 = ref_element_addr %0 : $Company, #Company.employees, scope 245 // user: %9
  %9 = struct_element_addr %8 : $*Array<Employee>, #Array._buffer, scope 245 // user: %10
  %10 = struct_element_addr %9 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 245 // user: %11
  %11 = struct_element_addr %10 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 245 // user: %12
  %12 = load %11 : $*Builtin.BridgeObject, scope 245 // user: %13
  strong_release %12 : $Builtin.BridgeObject, scope 248 // id: %13
  return %2 : $Builtin.NativeObject, scope 245    // id: %14
}


// Company.name.getter
sil hidden [transparent] [thunk] [always_inline] @_TFC4Main7Companyg4nameSS : $@convention(method) (@guaranteed Company) -> @owned String {
// %0                                             // users: %2, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":20:6, scope 212 // id: %1
  %2 = ref_element_addr %0 : $Company, #Company.name, scope 216 // user: %3
  %3 = load %2 : $*String, scope 216              // users: %4, %5
  retain_value %3 : $String, scope 210            // id: %4
  return %3 : $String, loc "swift.swift":20:6, scope 210 // id: %5
}

sil_scope 249 { loc "swift.swift":20:6 parent @_TFC4Main7Companys4nameSS : $@convention(method) (@owned String, @guaranteed Company) -> () }
sil_scope 250 { loc "swift.swift":20:6 parent 249 }

// Company.name.setter
sil hidden [transparent] @_TFC4Main7Companys4nameSS : $@convention(method) (@owned String, @guaranteed Company) -> () {
// %0                                             // users: %8, %2
// %1                                             // users: %4, %3
bb0(%0 : $String, %1 : $Company):
  debug_value %0 : $String, let, name "value", argno 1, loc "swift.swift":20:6, scope 249 // id: %2
  debug_value %1 : $Company, let, name "self", argno 2, loc "swift.swift":20:6, scope 249 // id: %3
  %4 = ref_element_addr %1 : $Company, #Company.name, scope 250 // users: %5, %8
  %5 = struct_element_addr %4 : $*String, #String._core, scope 250 // user: %6
  %6 = struct_element_addr %5 : $*_StringCore, #_StringCore._owner, scope 250 // user: %7
  %7 = load %6 : $*Optional<AnyObject>, scope 250 // user: %9
  store %0 to %4 : $*String, scope 250            // id: %8
  release_value %7 : $Optional<AnyObject>, scope 249 // id: %9
  %10 = tuple (), loc "swift.swift":20:6, scope 250 // user: %11
  return %10 : $(), loc "swift.swift":20:6, scope 250 // id: %11
}

sil_scope 251 { loc "swift.swift":20:6 parent @_TFC4Main7Companym4nameSS : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @guaranteed Company) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) }

// Company.name.materializeForSet
sil hidden [transparent] @_TFC4Main7Companym4nameSS : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @guaranteed Company) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) {
// %2                                             // user: %3
bb0(%0 : $Builtin.RawPointer, %1 : $*Builtin.UnsafeValueBuffer, %2 : $Company):
  %3 = ref_element_addr %2 : $Company, #Company.name, scope 251 // user: %4
  %4 = address_to_pointer %3 : $*String to $Builtin.RawPointer, scope 251 // user: %6
  %5 = enum $Optional<Builtin.RawPointer>, #Optional.none!enumelt, scope 251 // user: %6
  %6 = tuple (%4 : $Builtin.RawPointer, %5 : $Optional<Builtin.RawPointer>), scope 251 // user: %7
  return %6 : $(Builtin.RawPointer, Optional<Builtin.RawPointer>), scope 251 // id: %7
}


// Company.employees.getter
sil hidden [transparent] [thunk] [always_inline] @_TFC4Main7Companyg9employeesGSaVS_8Employee_ : $@convention(method) (@guaranteed Company) -> @owned Array<Employee> {
// %0                                             // users: %2, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":21:6, scope 229 // id: %1
  %2 = ref_element_addr %0 : $Company, #Company.employees, scope 233 // user: %3
  %3 = load %2 : $*Array<Employee>, scope 233     // users: %4, %5
  retain_value %3 : $Array<Employee>, scope 227   // id: %4
  return %3 : $Array<Employee>, loc "swift.swift":21:6, scope 227 // id: %5
}

sil_scope 252 { loc "swift.swift":21:6 parent @_TFC4Main7Companys9employeesGSaVS_8Employee_ : $@convention(method) (@owned Array<Employee>, @guaranteed Company) -> () }
sil_scope 253 { loc "swift.swift":21:6 parent 252 }

// Company.employees.setter
sil hidden [transparent] @_TFC4Main7Companys9employeesGSaVS_8Employee_ : $@convention(method) (@owned Array<Employee>, @guaranteed Company) -> () {
// %0                                             // users: %9, %2
// %1                                             // users: %4, %3
bb0(%0 : $Array<Employee>, %1 : $Company):
  debug_value %0 : $Array<Employee>, let, name "value", argno 1, loc "swift.swift":21:6, scope 252 // id: %2
  debug_value %1 : $Company, let, name "self", argno 2, loc "swift.swift":21:6, scope 252 // id: %3
  %4 = ref_element_addr %1 : $Company, #Company.employees, scope 253 // users: %5, %9
  %5 = struct_element_addr %4 : $*Array<Employee>, #Array._buffer, scope 253 // user: %6
  %6 = struct_element_addr %5 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 253 // user: %7
  %7 = struct_element_addr %6 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 253 // user: %8
  %8 = load %7 : $*Builtin.BridgeObject, scope 253 // user: %10
  store %0 to %4 : $*Array<Employee>, scope 253   // id: %9
  strong_release %8 : $Builtin.BridgeObject, scope 252 // id: %10
  %11 = tuple (), loc "swift.swift":21:6, scope 253 // user: %12
  return %11 : $(), loc "swift.swift":21:6, scope 253 // id: %12
}

sil_scope 254 { loc "swift.swift":21:6 parent @_TFC4Main7Companym9employeesGSaVS_8Employee_ : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @guaranteed Company) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) }

// Company.employees.materializeForSet
sil hidden [transparent] @_TFC4Main7Companym9employeesGSaVS_8Employee_ : $@convention(method) (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @guaranteed Company) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>) {
// %2                                             // user: %3
bb0(%0 : $Builtin.RawPointer, %1 : $*Builtin.UnsafeValueBuffer, %2 : $Company):
  %3 = ref_element_addr %2 : $Company, #Company.employees, scope 254 // user: %4
  %4 = address_to_pointer %3 : $*Array<Employee> to $Builtin.RawPointer, scope 254 // user: %6
  %5 = enum $Optional<Builtin.RawPointer>, #Optional.none!enumelt, scope 254 // user: %6
  %6 = tuple (%4 : $Builtin.RawPointer, %5 : $Optional<Builtin.RawPointer>), scope 254 // user: %7
  return %6 : $(Builtin.RawPointer, Optional<Builtin.RawPointer>), scope 254 // id: %7
}

sil_scope 255 { loc "swift.swift":27:29 parent @_TTWC4Main7Companys23CustomStringConvertibleS_FS1_g11descriptionSS : $@convention(witness_method) (@in_guaranteed Company) -> @owned String }

// protocol witness for CustomStringConvertible.description.getter in conformance Company
sil [transparent] [thunk] @_TTWC4Main7Companys23CustomStringConvertibleS_FS1_g11descriptionSS : $@convention(witness_method) (@in_guaranteed Company) -> @owned String {
// %0                                             // user: %1
bb0(%0 : $*Company):
  %1 = load %0 : $*Company, loc "swift.swift":27:29, scope 255 // users: %22, %17, %9, %7, %15, %20, %21, %11, %2, %19
  checked_cast_br [exact] %1 : $Company to $Company, bb2, bb3, loc "swift.swift":27:29, scope 255 // id: %2

// %3                                             // user: %4
bb1(%3 : $String):                                // Preds: bb5 bb4 bb2
  return %3 : $String, loc "swift.swift":27:29, scope 255 // id: %4

// %5                                             // user: %8
bb2(%5 : $Company):                               // Preds: bb0
  // function_ref Company.description.getter
  %6 = function_ref @_TFC4Main7Companyg11descriptionSS : $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":27:29, scope 255 // user: %8
  strong_retain %1 : $Company, scope 255          // id: %7
  %8 = apply %6(%5) : $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":27:29, scope 255 // user: %10
  strong_release %1 : $Company, scope 255         // id: %9
  br bb1(%8 : $String), loc "swift.swift":27:29, scope 255 // id: %10

bb3:                                              // Preds: bb0
  checked_cast_br [exact] %1 : $Company to $PaperCompany, bb4, bb5, loc "swift.swift":27:29, scope 255 // id: %11

// %12                                            // user: %14
bb4(%12 : $PaperCompany):                         // Preds: bb3
  // function_ref Company.description.getter
  %13 = function_ref @_TFC4Main7Companyg11descriptionSS : $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":27:29, scope 255 // user: %16
  %14 = upcast %12 : $PaperCompany to $Company, loc "swift.swift":27:29, scope 255 // user: %16
  strong_retain %1 : $Company, scope 255          // id: %15
  %16 = apply %13(%14) : $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":27:29, scope 255 // user: %18
  strong_release %1 : $Company, scope 255         // id: %17
  br bb1(%16 : $String), loc "swift.swift":27:29, scope 255 // id: %18

bb5:                                              // Preds: bb3
  %19 = class_method %1 : $Company, #Company.description!getter.1 : (Company) -> () -> String , $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":27:29, scope 255 // user: %21
  strong_retain %1 : $Company, scope 255          // id: %20
  %21 = apply %19(%1) : $@convention(method) (@guaranteed Company) -> @owned String, loc "swift.swift":27:29, scope 255 // user: %23
  strong_release %1 : $Company, scope 255         // id: %22
  br bb1(%21 : $String), loc "swift.swift":27:29, scope 255 // id: %23
}

sil_scope 256 { loc "swift.swift":39:6 parent @_TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT6stringSS_x : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned String) -> @out τ_0_0 }
sil_scope 257 { loc "swift.swift":45:1 parent 256 }
sil_scope 258 { loc "swift.swift":42:46 parent 257 }
sil_scope 259 {  parent 112 inlined_at 258 }
sil_scope 260 {  parent 259 }
sil_scope 261 {  parent 111 inlined_at 260 }
sil_scope 262 {  parent @_TTSg5SS___TFSag10startIndexSi : $@convention(method) (@guaranteed Array<String>) -> Int }
sil_scope 263 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_g10startIndexwx5Index : $@convention(witness_method) (@in_guaranteed Array<String>) -> Int }
sil_scope 264 {  parent 263 }
sil_scope 265 {  parent 262 inlined_at 264 }
sil_scope 266 {  parent @_TTSg5GSaSS_GSaSS_s13IndexableBases___TFVs16IndexingIteratorCfT9_elementsx_GS_x_ : $@convention(method) (@owned Array<String>, @thin IndexingIterator<Array<String>>.Type) -> @owned IndexingIterator<Array<String>> }
sil_scope 267 {  parent 266 }
sil_scope 268 {  parent 265 inlined_at 267 }
sil_scope 269 {  parent @_TTSg5GSaSS_GSaSS_s10Collections___TFesRxs10Collectionwx8IteratorzGVs16IndexingIteratorx_wx8_ElementzWxS0_7Element_rS_12makeIteratorfT_GS1_x_ : $@convention(method) (@in_guaranteed Array<String>) -> @owned IndexingIterator<Array<String>> }
sil_scope 270 {  parent 269 }
sil_scope 271 {  parent 268 inlined_at 270 }
sil_scope 272 { loc "swift.swift":43:57 parent 257 }
sil_scope 273 {  parent 271 inlined_at 272 }
sil_scope 274 {  parent @_TTSg5SS_GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFVs11AnyIteratorCuRd__s16IteratorProtocolxzwd__7Elementrfqd__GS_x_ : $@convention(method) (@owned IndexingIterator<Array<String>>, @thin AnyIterator<String>.Type) -> @owned AnyIterator<String> }
sil_scope 275 { loc "swift.swift":43:58 parent 257 }
sil_scope 276 {  parent 274 inlined_at 275 }
sil_scope 277 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBoxCfxGS_x_ : $@convention(method) (@owned IndexingIterator<Array<String>>, @thick _IteratorBox<IndexingIterator<Array<String>>>.Type) -> @owned _IteratorBox<IndexingIterator<Array<String>>> }
sil_scope 278 {  parent 274 }
sil_scope 279 {  parent 277 inlined_at 278 }
sil_scope 280 {  parent 279 inlined_at 275 }
sil_scope 281 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBoxcfxGS_x_ : $@convention(method) (@owned IndexingIterator<Array<String>>, @owned _IteratorBox<IndexingIterator<Array<String>>>) -> @owned _IteratorBox<IndexingIterator<Array<String>>> }
sil_scope 282 {  parent 277 }
sil_scope 283 {  parent 281 inlined_at 282 }
sil_scope 284 {  parent 283 inlined_at 278 }
sil_scope 285 {  parent 284 inlined_at 275 }

// load<A where ...> (string : String) -> A
sil hidden @_TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT6stringSS_x : $@convention(thin) <T where T : Loadable, T.Loaded == T> (@owned String) -> @out T {
// %0                                             // user: %29
// %1                                             // users: %30, %15, %2
bb0(%0 : $*T, %1 : $String):
  debug_value %1 : $String, let, name "string", argno 1, loc "swift.swift":39:24, scope 256 // id: %2
  // function_ref String.components(separatedBy : String) -> [String]
  %3 = function_ref @_TFE10FoundationSS10componentsfT11separatedBySS_GSaSS_ : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":42:22, scope 257 // user: %15
  %4 = string_literal utf8 "/", loc "swift.swift":42:46, scope 257 // users: %6, %5
  debug_value %4 : $Builtin.RawPointer, scope 261 // id: %5
  %6 = struct $UnsafeMutableRawPointer (%4 : $Builtin.RawPointer), scope 261 // user: %7
  %7 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %6 : $UnsafeMutableRawPointer, scope 261 // users: %13, %9
  %8 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 261 // users: %13, %10
  debug_value %7 : $Optional<UnsafeMutableRawPointer>, scope 261 // id: %9
  debug_value %8 : $Optional<AnyObject>, scope 261 // id: %10
  %11 = integer_literal $Builtin.Int64, 1, scope 261 // user: %12
  %12 = struct $UInt (%11 : $Builtin.Int64), scope 261 // user: %13
  %13 = struct $_StringCore (%7 : $Optional<UnsafeMutableRawPointer>, %12 : $UInt, %8 : $Optional<AnyObject>), scope 261 // user: %14
  %14 = struct $String (%13 : $_StringCore), scope 261 // user: %15
  %15 = apply %3(%14, %1) : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":42:49, scope 257 // users: %19, %16
  debug_value %15 : $Array<String>, let, name "tokens", loc "swift.swift":42:6, scope 257 // id: %16
  %17 = integer_literal $Builtin.Int64, 0, scope 273 // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64), loc "swift.swift":43:58, scope 257 // user: %19
  %19 = struct $IndexingIterator<Array<String>> (%15 : $Array<String>, %18 : $Int), loc "swift.swift":43:58, scope 257 // users: %24, %22, %20
  debug_value %19 : $IndexingIterator<Array<String>>, scope 276 // id: %20
  %21 = alloc_ref $_IteratorBox<IndexingIterator<Array<String>>>, scope 280 // users: %25, %23
  debug_value %19 : $IndexingIterator<Array<String>>, scope 285 // id: %22
  %23 = ref_element_addr %21 : $_IteratorBox<IndexingIterator<Array<String>>>, #_IteratorBox._base, scope 285 // user: %24
  store %19 to %23 : $*IndexingIterator<Array<String>>, scope 285 // id: %24
  %25 = upcast %21 : $_IteratorBox<IndexingIterator<Array<String>>> to $_AnyIteratorBoxBase<String>, scope 276 // user: %26
  %26 = struct $AnyIterator<String> (%25 : $_AnyIteratorBoxBase<String>), scope 276 // users: %29, %27
  debug_value %26 : $AnyIterator<String>, let, name "iterator", loc "swift.swift":43:6, scope 257 // id: %27
  // function_ref load<A where ...> (iterator : AnyIterator<String>) -> A
  %28 = function_ref @_TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @out τ_0_0, loc "swift.swift":44:9, scope 257 // user: %29
  %29 = apply %28<T>(%0, %26) : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @out τ_0_0, loc "swift.swift":44:32, scope 257
  release_value %1 : $String, scope 256           // id: %30
  %31 = tuple (), loc "swift.swift":45:1, scope 257 // user: %32
  return %31 : $(), loc "swift.swift":44:2, scope 257 // id: %32
}


// String.components(separatedBy : String) -> [String]
sil @_TFE10FoundationSS10componentsfT11separatedBySS_GSaSS_ : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>

sil_scope 286 { loc "swift.swift":47:6 parent @_TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @out τ_0_0 }
sil_scope 287 { loc "swift.swift":51:1 parent 286 }

// load<A where ...> (iterator : AnyIterator<String>) -> A
sil hidden @_TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) <T where T : Loadable, T.Loaded == T> (@owned AnyIterator<String>) -> @out T {
// %0                                             // user: %5
// %1                                             // users: %5, %2
bb0(%0 : $*T, %1 : $AnyIterator<String>):
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 286 // id: %2
  %3 = witness_method $T, #Loadable.load!1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : Loadable> (@owned AnyIterator<String>, @thick τ_0_0.Type) -> @out τ_0_0.Loaded, loc "swift.swift":50:11, scope 287 // user: %5
  %4 = metatype $@thick T.Type, loc "swift.swift":50:9, scope 287 // user: %5
  %5 = apply %3<T, T>(%0, %1, %4) : $@convention(witness_method) <τ_0_0 where τ_0_0 : Loadable> (@owned AnyIterator<String>, @thick τ_0_0.Type) -> @out τ_0_0.Loaded, loc "swift.swift":50:34, scope 287
  %6 = tuple (), loc "swift.swift":51:1, scope 287 // user: %7
  return %6 : $(), loc "swift.swift":50:2, scope 287 // id: %7
}

sil_scope 288 { loc "swift.swift":53:6 parent @_TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT6stringSS_GSax_ : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned String) -> @owned Array<τ_0_0> }
sil_scope 289 { loc "swift.swift":59:1 parent 288 }
sil_scope 290 { loc "swift.swift":56:46 parent 289 }
sil_scope 291 {  parent 112 inlined_at 290 }
sil_scope 292 {  parent 291 }
sil_scope 293 {  parent 111 inlined_at 292 }
sil_scope 294 { loc "swift.swift":57:57 parent 289 }
sil_scope 295 {  parent 271 inlined_at 294 }
sil_scope 296 { loc "swift.swift":57:58 parent 289 }
sil_scope 297 {  parent 274 inlined_at 296 }
sil_scope 298 {  parent 279 inlined_at 296 }
sil_scope 299 {  parent 284 inlined_at 296 }

// loadArray<A where ...> (string : String) -> [A]
sil hidden @_TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT6stringSS_GSax_ : $@convention(thin) <T where T : Loadable, T.Loaded == T> (@owned String) -> @owned Array<T> {
// %0                                             // users: %29, %14, %1
bb0(%0 : $String):
  debug_value %0 : $String, let, name "string", argno 1, loc "swift.swift":53:29, scope 288 // id: %1
  // function_ref String.components(separatedBy : String) -> [String]
  %2 = function_ref @_TFE10FoundationSS10componentsfT11separatedBySS_GSaSS_ : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":56:22, scope 289 // user: %14
  %3 = string_literal utf8 "/", loc "swift.swift":56:46, scope 289 // users: %5, %4
  debug_value %3 : $Builtin.RawPointer, scope 293 // id: %4
  %5 = struct $UnsafeMutableRawPointer (%3 : $Builtin.RawPointer), scope 293 // user: %6
  %6 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %5 : $UnsafeMutableRawPointer, scope 293 // users: %12, %8
  %7 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 293 // users: %12, %9
  debug_value %6 : $Optional<UnsafeMutableRawPointer>, scope 293 // id: %8
  debug_value %7 : $Optional<AnyObject>, scope 293 // id: %9
  %10 = integer_literal $Builtin.Int64, 1, scope 293 // user: %11
  %11 = struct $UInt (%10 : $Builtin.Int64), scope 293 // user: %12
  %12 = struct $_StringCore (%6 : $Optional<UnsafeMutableRawPointer>, %11 : $UInt, %7 : $Optional<AnyObject>), scope 293 // user: %13
  %13 = struct $String (%12 : $_StringCore), scope 293 // user: %14
  %14 = apply %2(%13, %0) : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":56:49, scope 289 // users: %18, %15
  debug_value %14 : $Array<String>, let, name "tokens", loc "swift.swift":56:6, scope 289 // id: %15
  %16 = integer_literal $Builtin.Int64, 0, scope 295 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), loc "swift.swift":57:58, scope 289 // user: %18
  %18 = struct $IndexingIterator<Array<String>> (%14 : $Array<String>, %17 : $Int), loc "swift.swift":57:58, scope 289 // users: %19, %21, %23
  debug_value %18 : $IndexingIterator<Array<String>>, scope 297 // id: %19
  %20 = alloc_ref $_IteratorBox<IndexingIterator<Array<String>>>, scope 298 // users: %24, %22
  debug_value %18 : $IndexingIterator<Array<String>>, scope 299 // id: %21
  %22 = ref_element_addr %20 : $_IteratorBox<IndexingIterator<Array<String>>>, #_IteratorBox._base, scope 299 // user: %23
  store %18 to %22 : $*IndexingIterator<Array<String>>, scope 299 // id: %23
  %24 = upcast %20 : $_IteratorBox<IndexingIterator<Array<String>>> to $_AnyIteratorBoxBase<String>, scope 297 // user: %25
  %25 = struct $AnyIterator<String> (%24 : $_AnyIteratorBoxBase<String>), scope 297 // users: %28, %26
  debug_value %25 : $AnyIterator<String>, let, name "iterator", loc "swift.swift":57:6, scope 289 // id: %26
  // function_ref loadArray<A where ...> (iterator : AnyIterator<String>) -> [A]
  %27 = function_ref @_TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @owned Array<τ_0_0>, loc "swift.swift":58:9, scope 289 // user: %28
  %28 = apply %27<T>(%25) : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @owned Array<τ_0_0>, loc "swift.swift":58:37, scope 289 // user: %30
  release_value %0 : $String, scope 288           // id: %29
  return %28 : $Array<T>, loc "swift.swift":58:2, scope 289 // id: %30
}

sil_scope 300 { loc "swift.swift":61:6 parent @_TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @owned Array<τ_0_0> }
sil_scope 301 { loc "swift.swift":65:1 parent 300 }

// loadArray<A where ...> (iterator : AnyIterator<String>) -> [A]
sil hidden @_TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) <T where T : Loadable, T.Loaded == T> (@owned AnyIterator<String>) -> @owned Array<T> {
// %0                                             // users: %4, %1
bb0(%0 : $AnyIterator<String>):
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":61:29, scope 300 // id: %1
  // function_ref static Array<A where ...>.load(iterator : AnyIterator<String>) -> [A]
  %2 = function_ref @_TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(method) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, loc "swift.swift":64:18, scope 301 // user: %4
  %3 = metatype $@thin Array<T>.Type, loc "swift.swift":64:9, scope 301 // user: %4
  %4 = apply %2<T>(%0, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, loc "swift.swift":64:41, scope 301 // user: %5
  return %4 : $Array<T>, loc "swift.swift":64:2, scope 301 // id: %5
}

sil_scope 302 { loc "swift.swift":84:14 parent @_TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(method) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> }
sil_scope 303 { loc "swift.swift":91:2 parent 302 }
sil_scope 304 { loc "swift.swift":47:6 parent @_TTSg5SiSi4Main8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) (@owned AnyIterator<String>) -> Int }
sil_scope 305 { loc "swift.swift":85:44 parent 303 }
sil_scope 306 { loc "swift.swift":47:6 parent 304 inlined_at 305 }
sil_scope 307 { loc "swift.swift":68:14 parent @_TZFE4MainSi4loadfT8iteratorGVs11AnyIteratorSS__Si : $@convention(method) (@owned AnyIterator<String>, @thin Int.Type) -> Int }
sil_scope 308 { loc "swift.swift":68:14 parent @_TTWSi4Main8LoadableS_ZFS0_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick Int.Type) -> @out Int }
sil_scope 309 { loc "swift.swift":68:14 parent 308 }
sil_scope 310 { loc "swift.swift":68:14 parent 307 inlined_at 309 }
sil_scope 311 { loc "swift.swift":51:1 parent 304 }
sil_scope 312 { loc "swift.swift":50:34 parent 311 }
sil_scope 313 { loc "swift.swift":68:14 parent 310 inlined_at 312 }
sil_scope 314 { loc "swift.swift":68:14 parent 313 inlined_at 305 }
sil_scope 315 {  parent @_TTSg5SS___TFVs11AnyIterator4nextfT_GSqx_ : $@convention(method) (@guaranteed AnyIterator<String>) -> @owned Optional<String> }
sil_scope 316 { loc "swift.swift":71:2 parent 307 }
sil_scope 317 { loc "swift.swift":69:33 parent 316 }
sil_scope 318 {  parent 315 inlined_at 317 }
sil_scope 319 {  parent 318 inlined_at 309 }
sil_scope 320 {  parent 319 inlined_at 312 }
sil_scope 321 {  parent 320 inlined_at 305 }
sil_scope 322 { loc "swift.swift":71:2 parent 316 inlined_at 309 }
sil_scope 323 { loc "swift.swift":71:2 parent 322 inlined_at 312 }
sil_scope 324 { loc "swift.swift":71:2 parent 323 inlined_at 305 }
sil_scope 325 {  parent @_TIFSicFTSS5radixSi_GSqSi_A0_ : $@convention(thin) () -> Int }
sil_scope 326 { loc "swift.swift":70:14 parent 316 }
sil_scope 327 {  parent 325 inlined_at 326 }
sil_scope 328 {  parent 327 inlined_at 309 }
sil_scope 329 {  parent 328 inlined_at 312 }
sil_scope 330 {  parent 329 inlined_at 305 }
sil_scope 331 { loc "swift.swift":89:3 parent 303 }
sil_scope 332 {  parent @_TTWSis9EquatablesZFS_oi2eefTxx_Sb : $@convention(witness_method) (@in Int, @in Int, @thick Int.Type) -> Bool }
sil_scope 333 {  parent @_TTSg5GVs14CountableRangeSi_GS_Si_s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<CountableRange<Int>>) -> Optional<Int> }
sil_scope 334 {  parent 333 }
sil_scope 335 {  parent 332 inlined_at 334 }
sil_scope 336 { loc "swift.swift":87:9 parent 331 }
sil_scope 337 {  parent 335 inlined_at 336 }
sil_scope 338 {  parent 333 inlined_at 336 }
sil_scope 339 {  parent @_TTWSis35_ExpressibleByBuiltinIntegerLiteralsFS_CfT22_builtinIntegerLiteralBi2048__x : $@convention(witness_method) (Builtin.Int2048, @thick Int.Type) -> @out Int }
sil_scope 340 {  parent @_TTSg5SiSis10ComparablesSis11_Strideables___TFVs14CountableRange5indexfT5afterx_x : $@convention(method) (Int, @in_guaranteed CountableRange<Int>) -> Int }
sil_scope 341 {  parent 340 }
sil_scope 342 {  parent 339 inlined_at 341 }
sil_scope 343 {  parent @_TTSg5SiSis10ComparablesSis11_Strideables___TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_5indexfT5afterwx5Index_wxS5_ : $@convention(witness_method) (Int, @in_guaranteed CountableRange<Int>) -> Int }
sil_scope 344 {  parent 343 }
sil_scope 345 {  parent 342 inlined_at 344 }
sil_scope 346 {  parent @_TTSg5GVs14CountableRangeSi_GS_Si_s9Indexables___TFEsPs9Indexable9formIndexfT5afterRwx5Index_T_ : $@convention(method) (@inout Int, @in_guaranteed CountableRange<Int>) -> () }
sil_scope 347 {  parent 346 }
sil_scope 348 {  parent 345 inlined_at 347 }
sil_scope 349 {  parent @_TTSg5SiSis10ComparablesSis11_Strideables___TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_9formIndexfT5afterRwx5Index_T_ : $@convention(witness_method) (@inout Int, @in_guaranteed CountableRange<Int>) -> () }
sil_scope 350 {  parent 349 }
sil_scope 351 {  parent 348 inlined_at 350 }
sil_scope 352 {  parent 333 }
sil_scope 353 {  parent 351 inlined_at 352 }
sil_scope 354 {  parent 353 inlined_at 336 }
sil_scope 355 { loc "swift.swift":89:3 parent 331 }
sil_scope 356 {  parent @_TTWSis11_StrideablesFS_8advancedfT2bywx6Stride_x : $@convention(witness_method) (@in Int, @in_guaranteed Int) -> @out Int }
sil_scope 357 {  parent 340 }
sil_scope 358 {  parent 356 inlined_at 357 }
sil_scope 359 {  parent 358 inlined_at 344 }
sil_scope 360 {  parent 359 inlined_at 347 }
sil_scope 361 {  parent 360 inlined_at 350 }
sil_scope 362 {  parent 361 inlined_at 352 }
sil_scope 363 {  parent 362 inlined_at 336 }
sil_scope 364 {  parent @_TTSf4d___TTSg5SS___TFCs19_AnyIteratorBoxBase4nextfT_GSqx_ : $@convention(thin) () -> @owned Optional<String> }
sil_scope 365 {  parent @_TTSg5SS___TFCs19_AnyIteratorBoxBase4nextfT_GSqx_ : $@convention(method) (@guaranteed _AnyIteratorBoxBase<String>) -> @owned Optional<String> }
sil_scope 366 {  parent 365 }
sil_scope 367 {  parent 364 inlined_at 366 }
sil_scope 368 {  parent 321 }
sil_scope 369 {  parent 367 inlined_at 368 }

// static Array<A where ...>.load(iterator : AnyIterator<String>) -> [A]
sil hidden @_TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(method) <Element where Element : Loadable, Element.Loaded == Element> (@owned AnyIterator<String>, @thin Array<Element>.Type) -> @owned Array<Element> {
// %0                                             // users: %52, %60, %8, %6, %5, %4, %61, %3
bb0(%0 : $AnyIterator<String>, %1 : $@thin Array<Element>.Type):
  %2 = alloc_stack $Array<Element>, var, name "ret", loc "swift.swift":86:7, scope 303 // users: %53, %35, %62, %51
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":84:19, scope 302 // id: %3
  %4 = struct_extract %0 : $AnyIterator<String>, #AnyIterator._box, loc "swift.swift":85:36, scope 303 // users: %80, %9, %79
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 306 // id: %5
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":68:19, scope 314 // id: %6
  %7 = alloc_stack $Optional<String>, scope 321   // users: %80, %82, %81
  debug_value %0 : $AnyIterator<String>, scope 321 // id: %8
  checked_cast_br [exact] %4 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb11, bb12, scope 321 // id: %9

bb1:                                              // Preds: bb12
  %10 = integer_literal $Builtin.Int1, -1, loc "swift.swift":69:34, scope 324 // user: %11
  cond_fail %10 : $Builtin.Int1, loc "swift.swift":69:34, scope 324 // id: %11
  unreachable, loc "swift.swift":69:34, scope 324 // id: %12

bb2:                                              // Preds: bb12
  %13 = unchecked_enum_data %81 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 324 // users: %20, %14
  debug_value %13 : $String, let, name "x", loc "swift.swift":69:7, scope 324 // id: %14
  // function_ref Int.init(String, radix : Int) -> Int?
  %15 = function_ref @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:10, scope 324 // user: %20
  %16 = metatype $@thin Int.Type, loc "swift.swift":70:10, scope 324 // user: %20
  %17 = integer_literal $Builtin.Int64, 10, scope 330 // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64), scope 330 // user: %20
  retain_value %81 : $Optional<String>, scope 302 // id: %19
  %20 = apply %15(%13, %18, %16) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 324 // users: %21, %26
  switch_enum %20 : $Optional<Int>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb4, loc "swift.swift":70:16, scope 324 // id: %21

bb3:                                              // Preds: bb2
  %22 = integer_literal $Builtin.Int1, -1, loc "swift.swift":70:16, scope 324 // user: %23
  cond_fail %22 : $Builtin.Int1, loc "swift.swift":70:16, scope 324 // id: %23
  unreachable, loc "swift.swift":70:16, scope 324 // id: %24

bb4:                                              // Preds: bb2
  release_value %81 : $Optional<String>, scope 302 // id: %25
  %26 = unchecked_enum_data %20 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 324 // users: %37, %27
  debug_value %26 : $Int, let, name "n", loc "swift.swift":85:7, scope 303 // id: %27
  // function_ref Array.init(arrayLiteral : [A]...) -> [A]
  %28 = function_ref @_TFSaCft12arrayLiteralGSax__GSax_ : $@convention(method) <τ_0_0> (@owned Array<τ_0_0>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, loc "swift.swift":86:24, scope 303 // user: %34
  %29 = metatype $@thin Array<Element>.Type, loc "swift.swift":86:24, scope 303 // user: %34
  %30 = integer_literal $Builtin.Word, 0, scope 303 // user: %32
  // function_ref _allocateUninitializedArray<A> (Builtin.Word) -> ([A], Builtin.RawPointer)
  %31 = function_ref @_TFs27_allocateUninitializedArrayurFBwTGSax_Bp_ : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer), scope 303 // user: %32
  %32 = apply %31<Element>(%30) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer), scope 303 // user: %33
  %33 = tuple_extract %32 : $(Array<Element>, Builtin.RawPointer), 0, scope 303 // user: %34
  %34 = apply %28<Element>(%33, %29) : $@convention(method) <τ_0_0> (@owned Array<τ_0_0>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, loc "swift.swift":86:24, scope 303 // user: %35
  store %34 to %2 : $*Array<Element>, loc "swift.swift":86:24, scope 303 // id: %35
  %36 = integer_literal $Builtin.Int64, 0, loc "swift.swift":87:12, scope 331 // users: %48, %50, %42, %38
  %37 = struct_extract %26 : $Int, #Int._value, loc "swift.swift":87:16, scope 331 // users: %48, %42, %38, %64
  %38 = builtin "cmp_sle_Int64"(%36 : $Builtin.Int64, %37 : $Builtin.Int64) : $Builtin.Int1, loc "swift.swift":87:13, scope 331 // user: %40
  %39 = integer_literal $Builtin.Int1, -1, loc "swift.swift":87:13, scope 331 // users: %56, %40
  %40 = builtin "xor_Int1"(%38 : $Builtin.Int1, %39 : $Builtin.Int1) : $Builtin.Int1, loc "swift.swift":87:13, scope 331 // user: %41
  cond_fail %40 : $Builtin.Int1, loc "swift.swift":87:13, scope 331 // id: %41
  %42 = builtin "cmp_eq_Int64"(%36 : $Builtin.Int64, %37 : $Builtin.Int64) : $Builtin.Int1, scope 337 // user: %43
  cond_br %42, bb5, bb6, scope 338                // id: %43

bb5:                                              // Preds: bb4
  br bb7, scope 302                               // id: %44

bb6:                                              // Preds: bb4
  %45 = integer_literal $Builtin.Int64, 1, scope 354 // user: %56
  // function_ref Array.append(A) -> ()
  %46 = function_ref @_TFSa6appendfxT_ : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> (), loc "swift.swift":88:8, scope 355 // user: %62
  // function_ref load<A where ...> (iterator : AnyIterator<String>) -> A
  %47 = function_ref @_TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @out τ_0_0, loc "swift.swift":88:20, scope 355 // user: %61
  %48 = builtin "cmp_sge_Int64"(%36 : $Builtin.Int64, %37 : $Builtin.Int64) : $Builtin.Int1, scope 363 // user: %49
  cond_fail %48 : $Builtin.Int1, scope 363        // id: %49
  br bb8(%36 : $Builtin.Int64), scope 302         // id: %50

bb7:                                              // Preds: bb9 bb5
  %51 = load %2 : $*Array<Element>, loc "swift.swift":90:10, scope 303 // user: %54
  release_value %0 : $AnyIterator<String>, scope 302 // id: %52
  dealloc_stack %2 : $*Array<Element>, loc "swift.swift":86:7, scope 303 // id: %53
  return %51 : $Array<Element>, loc "swift.swift":90:3, scope 303 // id: %54

// %55                                            // user: %56
bb8(%55 : $Builtin.Int64):                        // Preds: bb10 bb6
  %56 = builtin "sadd_with_overflow_Int64"(%55 : $Builtin.Int64, %45 : $Builtin.Int64, %39 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 363 // user: %57
  %57 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 0, scope 363 // users: %67, %64, %58
  debug_value %57 : $Builtin.Int64, scope 363     // id: %58
  %59 = alloc_stack $Element, loc "swift.swift":88:43, scope 355 // users: %63, %62, %61
  retain_value %0 : $AnyIterator<String>, scope 302 // id: %60
  %61 = apply %47<Element>(%59, %0) : $@convention(thin) <τ_0_0 where τ_0_0 : Loadable, τ_0_0.Loaded == τ_0_0> (@owned AnyIterator<String>) -> @out τ_0_0, loc "swift.swift":88:43, scope 355
  %62 = apply %46<Element>(%59, %2) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> (), loc "swift.swift":88:44, scope 355
  dealloc_stack %59 : $*Element, loc "swift.swift":88:44, scope 355 // id: %63
  %64 = builtin "cmp_eq_Int64"(%57 : $Builtin.Int64, %37 : $Builtin.Int64) : $Builtin.Int1, scope 337 // user: %65
  cond_br %64, bb9, bb10, scope 338               // id: %65

bb9:                                              // Preds: bb8
  br bb7, scope 302                               // id: %66

bb10:                                             // Preds: bb8
  br bb8(%57 : $Builtin.Int64), scope 302         // id: %67

bb11(%68 : $_AnyIteratorBoxBase<String>):         // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %69 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 369 // user: %77
  %70 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 369 // user: %72
  %71 = integer_literal $Builtin.Word, 181, scope 369 // user: %74
  %72 = builtin "ptrtoint_Word"(%70 : $Builtin.RawPointer) : $Builtin.Word, scope 369 // user: %74
  %73 = integer_literal $Builtin.Int8, 2, scope 369 // user: %74
  %74 = struct $StaticString (%72 : $Builtin.Word, %71 : $Builtin.Word, %73 : $Builtin.Int8), scope 369 // user: %77
  %75 = integer_literal $Builtin.Int64, 119, scope 369 // user: %76
  %76 = struct $UInt (%75 : $Builtin.Int64), scope 369 // user: %77
  %77 = apply %69(%74, %76) : $@convention(thin) (StaticString, UInt) -> Never, scope 369
  unreachable, scope 369                          // id: %78

bb12:                                             // Preds: bb0
  %79 = class_method %4 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 321 // user: %80
  %80 = apply %79<String>(%7, %4) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 321
  %81 = load %7 : $*Optional<String>, scope 321   // users: %25, %19, %83, %13
  dealloc_stack %7 : $*Optional<String>, scope 321 // id: %82
  switch_enum %81 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":69:34, scope 324 // id: %83
}

sil_scope 370 {  parent 318 }
sil_scope 371 {  parent 367 inlined_at 370 }

// static Int.load(iterator : AnyIterator<String>) -> Int
sil hidden @_TZFE4MainSi4loadfT8iteratorGVs11AnyIteratorSS__Si : $@convention(method) (@owned AnyIterator<String>, @thin Int.Type) -> Int {
// %0                                             // users: %23, %5, %4, %2
bb0(%0 : $AnyIterator<String>, %1 : $@thin Int.Type):
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":68:19, scope 307 // id: %2
  %3 = alloc_stack $Optional<String>, scope 318   // users: %38, %40, %39
  debug_value %0 : $AnyIterator<String>, scope 318 // id: %4
  %5 = struct_extract %0 : $AnyIterator<String>, #AnyIterator._box, scope 318 // users: %38, %6, %37
  checked_cast_br [exact] %5 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb5, bb6, scope 318 // id: %6

bb1:                                              // Preds: bb6
  %7 = integer_literal $Builtin.Int1, -1, loc "swift.swift":69:34, scope 316 // user: %8
  cond_fail %7 : $Builtin.Int1, loc "swift.swift":69:34, scope 316 // id: %8
  unreachable, loc "swift.swift":69:34, scope 316 // id: %9

bb2:                                              // Preds: bb6
  %10 = unchecked_enum_data %39 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 316 // users: %17, %11
  debug_value %10 : $String, let, name "x", loc "swift.swift":69:7, scope 316 // id: %11
  // function_ref Int.init(String, radix : Int) -> Int?
  %12 = function_ref @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:10, scope 316 // user: %17
  %13 = metatype $@thin Int.Type, loc "swift.swift":70:10, scope 316 // user: %17
  %14 = integer_literal $Builtin.Int64, 10, scope 327 // user: %15
  %15 = struct $Int (%14 : $Builtin.Int64), scope 327 // user: %17
  retain_value %39 : $Optional<String>, scope 307 // id: %16
  %17 = apply %12(%10, %15, %13) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 316 // users: %18, %24
  switch_enum %17 : $Optional<Int>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb4, loc "swift.swift":70:16, scope 316 // id: %18

bb3:                                              // Preds: bb2
  %19 = integer_literal $Builtin.Int1, -1, loc "swift.swift":70:16, scope 316 // user: %20
  cond_fail %19 : $Builtin.Int1, loc "swift.swift":70:16, scope 316 // id: %20
  unreachable, loc "swift.swift":70:16, scope 316 // id: %21

bb4:                                              // Preds: bb2
  release_value %39 : $Optional<String>, scope 307 // id: %22
  release_value %0 : $AnyIterator<String>, scope 307 // id: %23
  %24 = unchecked_enum_data %17 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 316 // user: %25
  return %24 : $Int, loc "swift.swift":70:3, scope 316 // id: %25

bb5(%26 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %27 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 371 // user: %35
  %28 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 371 // user: %30
  %29 = integer_literal $Builtin.Word, 181, scope 371 // user: %32
  %30 = builtin "ptrtoint_Word"(%28 : $Builtin.RawPointer) : $Builtin.Word, scope 371 // user: %32
  %31 = integer_literal $Builtin.Int8, 2, scope 371 // user: %32
  %32 = struct $StaticString (%30 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8), scope 371 // user: %35
  %33 = integer_literal $Builtin.Int64, 119, scope 371 // user: %34
  %34 = struct $UInt (%33 : $Builtin.Int64), scope 371 // user: %35
  %35 = apply %27(%32, %34) : $@convention(thin) (StaticString, UInt) -> Never, scope 371
  unreachable, scope 371                          // id: %36

bb6:                                              // Preds: bb0
  %37 = class_method %5 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 318 // user: %38
  %38 = apply %37<String>(%3, %5) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 318
  %39 = load %3 : $*Optional<String>, scope 318   // users: %22, %16, %41, %10
  dealloc_stack %3 : $*Optional<String>, scope 318 // id: %40
  switch_enum %39 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":69:34, scope 316 // id: %41
}

sil_scope 372 {  parent @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int> }
sil_scope 373 {  parent @_TTSfq4n_n_g__TTSgq5VSS9UTF16ViewS_s10Collections___TFEsPs10Collection9dropFirstfSiwx11SubSequence : $@convention(method) (Int, @in_guaranteed String.UTF16View) -> String.UTF16View }
sil_scope 374 {  parent 372 }
sil_scope 375 {  parent 373 inlined_at 374 }
sil_scope 376 {  parent 372 }
sil_scope 377 {  parent 373 inlined_at 376 }

// Int.init(String, radix : Int) -> Int?
sil public_external [fragile] @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int> {
// %0                                             // users: %258, %180, %225, %238, %243, %248, %253, %256, %22, %6, %5, %3
// %1                                             // users: %117, %113, %14, %4
bb0(%0 : $String, %1 : $Int, %2 : $@thin Int.Type):
  debug_value %0 : $String, scope 372             // id: %3
  debug_value %1 : $Int, scope 372                // id: %4
  debug_value %0 : $String, scope 372             // id: %5
  %6 = struct_extract %0 : $String, #String._core, scope 372 // users: %92, %58, %19, %10, %9, %7
  debug_value %6 : $_StringCore, scope 372        // id: %7
  %8 = integer_literal $Builtin.Int64, 0, scope 372 // users: %41, %75, %228, %135, %135, %114, %72, %17, %15
  debug_value %6 : $_StringCore, scope 372        // id: %9
  %10 = struct_extract %6 : $_StringCore, #_StringCore._countAndFlags, scope 372 // user: %12
  %11 = integer_literal $Builtin.Int64, 4611686018427387903, scope 372 // user: %13
  %12 = struct_extract %10 : $UInt, #UInt._value, scope 372 // user: %13
  %13 = builtin "and_Int64"(%12 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int64, scope 372 // users: %47, %67, %52, %50, %43, %41, %40, %81, %100, %86, %84, %77, %75, %74, %18, %15
  debug_value %1 : $Int, scope 372                // id: %14
  %15 = builtin "cmp_eq_Int64"(%8 : $Builtin.Int64, %13 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %16
  cond_br %15, bb52, bb1, scope 372               // id: %16

bb1:                                              // Preds: bb0
  %17 = struct $Int (%8 : $Builtin.Int64), scope 372 // users: %20, %19
  %18 = struct $Int (%13 : $Builtin.Int64), scope 372 // user: %19
  %19 = struct $String.UTF16View (%17 : $Int, %18 : $Int, %6 : $_StringCore), scope 372 // users: %38, %36, %35, %23
  %20 = struct $String.UTF16View.Index (%17 : $Int), scope 372 // user: %23
  // function_ref String.UTF16View.subscript.getter
  %21 = function_ref @_TFVSS9UTF16Viewg9subscriptFVS_5IndexVs6UInt16 : $@convention(method) (String.UTF16View.Index, @guaranteed String.UTF16View) -> UInt16, scope 372 // users: %141, %23
  retain_value %0 : $String, scope 372            // id: %22
  %23 = apply %21(%20, %19) : $@convention(method) (String.UTF16View.Index, @guaranteed String.UTF16View) -> UInt16, scope 372 // users: %29, %26, %24
  debug_value %23 : $UInt16, scope 372            // id: %24
  %25 = integer_literal $Builtin.Int16, 45, scope 372 // user: %27
  %26 = struct_extract %23 : $UInt16, #UInt16._value, scope 372 // users: %31, %27
  %27 = builtin "cmp_eq_Int16"(%25 : $Builtin.Int16, %26 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %28
  cond_br %27, bb12, bb2, scope 372               // id: %28

bb2:                                              // Preds: bb1
  debug_value %23 : $UInt16, scope 372            // id: %29
  %30 = integer_literal $Builtin.Int16, 43, scope 372 // user: %31
  %31 = builtin "cmp_eq_Int16"(%30 : $Builtin.Int16, %26 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %32
  cond_br %31, bb4, bb3, scope 372                // id: %32

bb3:                                              // Preds: bb2
  %33 = integer_literal $Builtin.Int1, 0, scope 372 // user: %34
  %34 = struct $Bool (%33 : $Builtin.Int1), scope 372 // users: %37, %35
  %35 = tuple (%19 : $String.UTF16View, %34 : $Bool), scope 372 // user: %38
  debug_value %19 : $String.UTF16View, scope 372  // id: %36
  debug_value %34 : $Bool, scope 372              // id: %37
  br bb11(%35 : $(String.UTF16View, Bool), %19 : $String.UTF16View), scope 372 // id: %38

bb4:                                              // Preds: bb2
  %39 = integer_literal $Builtin.Int64, 1, scope 372 // users: %43, %65, %67, %66
  debug_value %13 : $Builtin.Int64, scope 375     // id: %40
  %41 = builtin "cmp_sgt_Int64"(%13 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int1, scope 375 // user: %42
  cond_br %41, bb5, bb10, scope 375               // id: %42

bb5:                                              // Preds: bb4
  %43 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %39 : $Builtin.Int64) : $Builtin.Int1, scope 375 // user: %44
  br bb6(%43 : $Builtin.Int1), scope 375          // id: %44

// %45                                            // user: %46
bb6(%45 : $Builtin.Int1):                         // Preds: bb10 bb5
  cond_br %45, bb7, bb9, scope 375                // id: %46

bb7:                                              // Preds: bb6
  br bb8(%13 : $Builtin.Int64), scope 375         // id: %47

// %48                                            // users: %56, %52, %50
bb8(%48 : $Builtin.Int64):                        // Preds: bb9 bb7
  %49 = integer_literal $Builtin.Int1, -1, scope 375 // user: %52
  %50 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %48 : $Builtin.Int64) : $Builtin.Int1, scope 375 // user: %51
  cond_fail %50 : $Builtin.Int1, scope 375        // id: %51
  %52 = builtin "ssub_with_overflow_Int64"(%13 : $Builtin.Int64, %48 : $Builtin.Int64, %49 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 375 // users: %54, %53
  %53 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 0, scope 375 // user: %57
  %54 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 1, scope 375 // user: %55
  cond_fail %54 : $Builtin.Int1, scope 375        // id: %55
  %56 = struct $Int (%48 : $Builtin.Int64), scope 375 // user: %58
  %57 = struct $Int (%53 : $Builtin.Int64), scope 375 // user: %58
  %58 = struct $String.UTF16View (%56 : $Int, %57 : $Int, %6 : $_StringCore), scope 375 // users: %64, %62, %61
  %59 = integer_literal $Builtin.Int1, 0, scope 372 // user: %60
  %60 = struct $Bool (%59 : $Builtin.Int1), scope 372 // users: %63, %61
  %61 = tuple (%58 : $String.UTF16View, %60 : $Bool), scope 372 // user: %64
  debug_value %58 : $String.UTF16View, scope 372  // id: %62
  debug_value %60 : $Bool, scope 372              // id: %63
  br bb11(%61 : $(String.UTF16View, Bool), %58 : $String.UTF16View), scope 372 // id: %64

bb9:                                              // Preds: bb6
  debug_value %39 : $Builtin.Int64, scope 375     // id: %65
  br bb8(%39 : $Builtin.Int64), scope 375         // id: %66

bb10:                                             // Preds: bb4
  %67 = builtin "cmp_sgt_Int64"(%13 : $Builtin.Int64, %39 : $Builtin.Int64) : $Builtin.Int1, scope 375 // user: %68
  br bb6(%67 : $Builtin.Int1), scope 375          // id: %68

// %69                                            // user: %72
// %70                                            // user: %72
bb11(%69 : $(String.UTF16View, Bool), %70 : $String.UTF16View): // Preds: bb8 bb3
  %71 = integer_literal $Builtin.Int1, 0, scope 372 // user: %72
  br bb19(%8 : $Builtin.Int64, %69 : $(String.UTF16View, Bool), %70 : $String.UTF16View, %71 : $Builtin.Int1), scope 372 // id: %72

bb12:                                             // Preds: bb1
  %73 = integer_literal $Builtin.Int64, 1, scope 372 // users: %77, %98, %100, %99, %97
  debug_value %13 : $Builtin.Int64, scope 377     // id: %74
  %75 = builtin "cmp_sgt_Int64"(%13 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int1, scope 377 // user: %76
  cond_br %75, bb13, bb18, scope 377              // id: %76

bb13:                                             // Preds: bb12
  %77 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %73 : $Builtin.Int64) : $Builtin.Int1, scope 377 // user: %78
  br bb14(%77 : $Builtin.Int1), scope 377         // id: %78

// %79                                            // user: %80
bb14(%79 : $Builtin.Int1):                        // Preds: bb18 bb13
  cond_br %79, bb15, bb17, scope 377              // id: %80

bb15:                                             // Preds: bb14
  br bb16(%13 : $Builtin.Int64), scope 377        // id: %81

// %82                                            // users: %90, %86, %84
bb16(%82 : $Builtin.Int64):                       // Preds: bb17 bb15
  %83 = integer_literal $Builtin.Int1, -1, scope 377 // users: %93, %97, %86
  %84 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %82 : $Builtin.Int64) : $Builtin.Int1, scope 377 // user: %85
  cond_fail %84 : $Builtin.Int1, scope 377        // id: %85
  %86 = builtin "ssub_with_overflow_Int64"(%13 : $Builtin.Int64, %82 : $Builtin.Int64, %83 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 377 // users: %88, %87
  %87 = tuple_extract %86 : $(Builtin.Int64, Builtin.Int1), 0, scope 377 // user: %91
  %88 = tuple_extract %86 : $(Builtin.Int64, Builtin.Int1), 1, scope 377 // user: %89
  cond_fail %88 : $Builtin.Int1, scope 377        // id: %89
  %90 = struct $Int (%82 : $Builtin.Int64), scope 377 // user: %92
  %91 = struct $Int (%87 : $Builtin.Int64), scope 377 // user: %92
  %92 = struct $String.UTF16View (%90 : $Int, %91 : $Int, %6 : $_StringCore), scope 377 // users: %97, %95, %94
  %93 = struct $Bool (%83 : $Builtin.Int1), scope 372 // users: %96, %94
  %94 = tuple (%92 : $String.UTF16View, %93 : $Bool), scope 372 // user: %97
  debug_value %92 : $String.UTF16View, scope 372  // id: %95
  debug_value %93 : $Bool, scope 372              // id: %96
  br bb19(%73 : $Builtin.Int64, %94 : $(String.UTF16View, Bool), %92 : $String.UTF16View, %83 : $Builtin.Int1), scope 372 // id: %97

bb17:                                             // Preds: bb14
  debug_value %73 : $Builtin.Int64, scope 377     // id: %98
  br bb16(%73 : $Builtin.Int64), scope 377        // id: %99

bb18:                                             // Preds: bb12
  %100 = builtin "cmp_sgt_Int64"(%13 : $Builtin.Int64, %73 : $Builtin.Int64) : $Builtin.Int1, scope 377 // user: %101
  br bb14(%100 : $Builtin.Int1), scope 377        // id: %101

// %102                                           // user: %108
// %103                                           // users: %179, %224, %237, %242, %247, %252, %133
// %104                                           // users: %255, %142, %171, %172, %176, %177, %250, %245, %240, %235, %222, %223, %236, %241, %246, %251, %140, %134, %141, %111
// %105                                           // user: %226
bb19(%102 : $Builtin.Int64, %103 : $(String.UTF16View, Bool), %104 : $String.UTF16View, %105 : $Builtin.Int1): // Preds: bb16 bb11
  %106 = integer_literal $Builtin.Int64, 9223372036854775807, scope 372 // user: %108
  %107 = integer_literal $Builtin.Int1, -1, scope 372 // users: %200, %195, %191, %186, %182, %122, %119, %108
  %108 = builtin "uadd_with_overflow_Int64"(%106 : $Builtin.Int64, %102 : $Builtin.Int64, %107 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // users: %125, %109
  %109 = tuple_extract %108 : $(Builtin.Int64, Builtin.Int1), 1, scope 372 // user: %110
  cond_fail %109 : $Builtin.Int1, scope 372       // id: %110
  %111 = struct_extract %104 : $String.UTF16View, #String.UTF16View._length, scope 372 // user: %112
  %112 = struct_extract %111 : $Int, #Int._value, scope 372 // users: %219, %114
  debug_value %1 : $Int, scope 372                // id: %113
  %114 = builtin "cmp_eq_Int64"(%8 : $Builtin.Int64, %112 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %115
  cond_br %114, bb51, bb20, scope 372             // id: %115

bb20:                                             // Preds: bb19
  %116 = integer_literal $Builtin.Int64, 1, scope 372 // users: %217, %118
  %117 = struct_extract %1 : $Int, #Int._value, scope 372 // users: %205, %207, %121, %118
  %118 = builtin "cmp_sgt_Int64"(%117 : $Builtin.Int64, %116 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %119
  %119 = builtin "xor_Int1"(%118 : $Builtin.Int1, %107 : $Builtin.Int1) : $Builtin.Int1, scope 372 // user: %123
  %120 = integer_literal $Builtin.Int64, 36, scope 372 // user: %121
  %121 = builtin "cmp_sle_Int64"(%117 : $Builtin.Int64, %120 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %122
  %122 = builtin "xor_Int1"(%121 : $Builtin.Int1, %107 : $Builtin.Int1) : $Builtin.Int1, scope 372 // user: %123
  %123 = builtin "or_Int1"(%119 : $Builtin.Int1, %122 : $Builtin.Int1) : $Builtin.Int1, scope 372 // user: %124
  cond_fail %123 : $Builtin.Int1, scope 372       // id: %124
  %125 = tuple_extract %108 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // user: %215
  %126 = integer_literal $Builtin.Int16, 48, scope 372 // users: %200, %149
  %127 = integer_literal $Builtin.Int16, 57, scope 372 // user: %152
  %128 = integer_literal $Builtin.Int16, 97, scope 372 // users: %191, %159
  %129 = integer_literal $Builtin.Int16, 122, scope 372 // user: %162
  %130 = integer_literal $Builtin.Int16, 65, scope 372 // users: %182, %169
  %131 = integer_literal $Builtin.Int16, 90, scope 372 // user: %174
  %132 = integer_literal $Builtin.Int1, 0, scope 372 // users: %228, %217, %211, %207
  retain_value %103 : $(String.UTF16View, Bool), scope 372 // id: %133
  retain_value %104 : $String.UTF16View, scope 372 // id: %134
  br bb21(%8 : $Builtin.Int64, %8 : $Builtin.Int64), scope 372 // id: %135

// %136                                           // user: %207
// %137                                           // users: %217, %138
bb21(%136 : $Builtin.Int64, %137 : $Builtin.Int64): // Preds: bb42 bb20
  %138 = struct $Int (%137 : $Builtin.Int64), scope 372 // user: %139
  %139 = struct $String.UTF16View.Index (%138 : $Int), scope 372 // user: %141
  retain_value %104 : $String.UTF16View, scope 372 // id: %140
  %141 = apply %21(%139, %104) : $@convention(method) (String.UTF16View.Index, @guaranteed String.UTF16View) -> UInt16, scope 372 // users: %168, %167, %166, %165, %158, %157, %156, %155, %148, %147, %146, %145, %144, %143
  release_value %104 : $String.UTF16View, scope 372 // id: %142
  debug_value %141 : $UInt16, scope 372           // id: %143
  debug_value %141 : $UInt16, scope 372           // id: %144
  debug_value %141 : $UInt16, scope 372           // id: %145
  debug_value %141 : $UInt16, scope 372           // id: %146
  %147 = struct_extract %141 : $UInt16, #UInt16._value, scope 372 // users: %200, %191, %182, %174, %169, %162, %159, %152, %149
  debug_value %141 : $UInt16, scope 372           // id: %148
  %149 = builtin "cmp_uge_Int16"(%147 : $Builtin.Int16, %126 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %150
  cond_br %149, bb23, bb22, scope 372             // id: %150

bb22:                                             // Preds: bb21
  br bb25, scope 372                              // id: %151

bb23:                                             // Preds: bb21
  %152 = builtin "cmp_ule_Int16"(%147 : $Builtin.Int16, %127 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %153
  cond_br %152, bb36, bb24, scope 372             // id: %153

bb24:                                             // Preds: bb23
  br bb25, scope 372                              // id: %154

bb25:                                             // Preds: bb24 bb22
  debug_value %141 : $UInt16, scope 372           // id: %155
  debug_value %141 : $UInt16, scope 372           // id: %156
  debug_value %141 : $UInt16, scope 372           // id: %157
  debug_value %141 : $UInt16, scope 372           // id: %158
  %159 = builtin "cmp_uge_Int16"(%147 : $Builtin.Int16, %128 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %160
  cond_br %159, bb27, bb26, scope 372             // id: %160

bb26:                                             // Preds: bb25
  br bb29, scope 372                              // id: %161

bb27:                                             // Preds: bb25
  %162 = builtin "cmp_ule_Int16"(%147 : $Builtin.Int16, %129 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %163
  cond_br %162, bb35, bb28, scope 372             // id: %163

bb28:                                             // Preds: bb27
  br bb29, scope 372                              // id: %164

bb29:                                             // Preds: bb28 bb26
  debug_value %141 : $UInt16, scope 372           // id: %165
  debug_value %141 : $UInt16, scope 372           // id: %166
  debug_value %141 : $UInt16, scope 372           // id: %167
  debug_value %141 : $UInt16, scope 372           // id: %168
  %169 = builtin "cmp_uge_Int16"(%147 : $Builtin.Int16, %130 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %170
  cond_br %169, bb31, bb30, scope 372             // id: %170

bb30:                                             // Preds: bb29
  release_value %104 : $String.UTF16View, scope 372 // id: %171
  release_value %104 : $String.UTF16View, scope 372 // id: %172
  br bb33, scope 372                              // id: %173

bb31:                                             // Preds: bb29
  %174 = builtin "cmp_ule_Int16"(%147 : $Builtin.Int16, %131 : $Builtin.Int16) : $Builtin.Int1, scope 372 // user: %175
  cond_br %174, bb34, bb32, scope 372             // id: %175

bb32:                                             // Preds: bb31
  release_value %104 : $String.UTF16View, scope 372 // id: %176
  release_value %104 : $String.UTF16View, scope 372 // id: %177
  br bb33, scope 372                              // id: %178

bb33:                                             // Preds: bb32 bb30
  release_value %103 : $(String.UTF16View, Bool), scope 372 // id: %179
  release_value %0 : $String, scope 372           // id: %180
  br bb53, scope 372                              // id: %181

bb34:                                             // Preds: bb31
  %182 = builtin "usub_with_overflow_Int16"(%147 : $Builtin.Int16, %130 : $Builtin.Int16, %107 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 372 // user: %183
  %183 = tuple_extract %182 : $(Builtin.Int16, Builtin.Int1), 0, scope 372 // user: %184
  %184 = builtin "zext_Int16_Int64"(%183 : $Builtin.Int16) : $Builtin.Int64, scope 372 // user: %186
  %185 = integer_literal $Builtin.Int64, 10, scope 372 // user: %186
  %186 = builtin "uadd_with_overflow_Int64"(%184 : $Builtin.Int64, %185 : $Builtin.Int64, %107 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // users: %188, %187
  %187 = tuple_extract %186 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // user: %190
  %188 = tuple_extract %186 : $(Builtin.Int64, Builtin.Int1), 1, scope 372 // user: %189
  cond_fail %188 : $Builtin.Int1, scope 372       // id: %189
  br bb37(%187 : $Builtin.Int64), scope 372       // id: %190

bb35:                                             // Preds: bb27
  %191 = builtin "usub_with_overflow_Int16"(%147 : $Builtin.Int16, %128 : $Builtin.Int16, %107 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 372 // user: %192
  %192 = tuple_extract %191 : $(Builtin.Int16, Builtin.Int1), 0, scope 372 // user: %193
  %193 = builtin "zext_Int16_Int64"(%192 : $Builtin.Int16) : $Builtin.Int64, scope 372 // user: %195
  %194 = integer_literal $Builtin.Int64, 10, scope 372 // user: %195
  %195 = builtin "uadd_with_overflow_Int64"(%193 : $Builtin.Int64, %194 : $Builtin.Int64, %107 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // users: %197, %196
  %196 = tuple_extract %195 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // user: %199
  %197 = tuple_extract %195 : $(Builtin.Int64, Builtin.Int1), 1, scope 372 // user: %198
  cond_fail %197 : $Builtin.Int1, scope 372       // id: %198
  br bb37(%196 : $Builtin.Int64), scope 372       // id: %199

bb36:                                             // Preds: bb23
  %200 = builtin "usub_with_overflow_Int16"(%147 : $Builtin.Int16, %126 : $Builtin.Int16, %107 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 372 // user: %201
  %201 = tuple_extract %200 : $(Builtin.Int16, Builtin.Int1), 0, scope 372 // user: %202
  %202 = builtin "zext_Int16_Int64"(%201 : $Builtin.Int16) : $Builtin.Int64, scope 372 // user: %203
  br bb37(%202 : $Builtin.Int64), scope 372       // id: %203

// %204                                           // users: %211, %205
bb37(%204 : $Builtin.Int64):                      // Preds: bb36 bb35 bb34
  %205 = builtin "cmp_uge_Int64"(%204 : $Builtin.Int64, %117 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %206
  cond_br %205, bb50, bb38, scope 372             // id: %206

bb38:                                             // Preds: bb37
  %207 = builtin "umul_with_overflow_Int64"(%136 : $Builtin.Int64, %117 : $Builtin.Int64, %132 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // users: %210, %208
  %208 = tuple_extract %207 : $(Builtin.Int64, Builtin.Int1), 1, scope 372 // user: %209
  cond_br %208, bb49, bb39, scope 372             // id: %209

bb39:                                             // Preds: bb38
  %210 = tuple_extract %207 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // user: %211
  %211 = builtin "uadd_with_overflow_Int64"(%210 : $Builtin.Int64, %204 : $Builtin.Int64, %132 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // users: %214, %212
  %212 = tuple_extract %211 : $(Builtin.Int64, Builtin.Int1), 1, scope 372 // user: %213
  cond_br %212, bb48, bb40, scope 372             // id: %213

bb40:                                             // Preds: bb39
  %214 = tuple_extract %211 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // users: %228, %227, %221, %215
  %215 = builtin "cmp_ugt_Int64"(%214 : $Builtin.Int64, %125 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %216
  cond_br %215, bb47, bb41, scope 372             // id: %216

bb41:                                             // Preds: bb40
  %217 = builtin "sadd_with_overflow_Int64"(%137 : $Builtin.Int64, %116 : $Builtin.Int64, %132 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // user: %218
  %218 = tuple_extract %217 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // users: %221, %219
  %219 = builtin "cmp_eq_Int64"(%218 : $Builtin.Int64, %112 : $Builtin.Int64) : $Builtin.Int1, scope 372 // user: %220
  cond_br %219, bb43, bb42, scope 372             // id: %220

bb42:                                             // Preds: bb41
  br bb21(%214 : $Builtin.Int64, %218 : $Builtin.Int64), scope 372 // id: %221

bb43:                                             // Preds: bb41
  release_value %104 : $String.UTF16View, scope 372 // id: %222
  release_value %104 : $String.UTF16View, scope 372 // id: %223
  release_value %103 : $(String.UTF16View, Bool), scope 372 // id: %224
  release_value %0 : $String, scope 372           // id: %225
  cond_br %105, bb45, bb44, scope 372             // id: %226

bb44:                                             // Preds: bb43
  br bb46(%214 : $Builtin.Int64), scope 372       // id: %227

bb45:                                             // Preds: bb43
  %228 = builtin "usub_with_overflow_Int64"(%8 : $Builtin.Int64, %214 : $Builtin.Int64, %132 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 372 // user: %229
  %229 = tuple_extract %228 : $(Builtin.Int64, Builtin.Int1), 0, scope 372 // user: %230
  br bb46(%229 : $Builtin.Int64), scope 372       // id: %230

// %231                                           // user: %232
bb46(%231 : $Builtin.Int64):                      // Preds: bb45 bb44
  %232 = struct $Int (%231 : $Builtin.Int64), scope 372 // user: %233
  %233 = enum $Optional<Int>, #Optional.some!enumelt.1, %232 : $Int, scope 372 // user: %234
  br bb54(%233 : $Optional<Int>), scope 372       // id: %234

bb47:                                             // Preds: bb40
  release_value %104 : $String.UTF16View, scope 372 // id: %235
  release_value %104 : $String.UTF16View, scope 372 // id: %236
  release_value %103 : $(String.UTF16View, Bool), scope 372 // id: %237
  release_value %0 : $String, scope 372           // id: %238
  br bb53, scope 372                              // id: %239

bb48:                                             // Preds: bb39
  release_value %104 : $String.UTF16View, scope 372 // id: %240
  release_value %104 : $String.UTF16View, scope 372 // id: %241
  release_value %103 : $(String.UTF16View, Bool), scope 372 // id: %242
  release_value %0 : $String, scope 372           // id: %243
  br bb53, scope 372                              // id: %244

bb49:                                             // Preds: bb38
  release_value %104 : $String.UTF16View, scope 372 // id: %245
  release_value %104 : $String.UTF16View, scope 372 // id: %246
  release_value %103 : $(String.UTF16View, Bool), scope 372 // id: %247
  release_value %0 : $String, scope 372           // id: %248
  br bb53, scope 372                              // id: %249

bb50:                                             // Preds: bb37
  release_value %104 : $String.UTF16View, scope 372 // id: %250
  release_value %104 : $String.UTF16View, scope 372 // id: %251
  release_value %103 : $(String.UTF16View, Bool), scope 372 // id: %252
  release_value %0 : $String, scope 372           // id: %253
  br bb53, scope 372                              // id: %254

bb51:                                             // Preds: bb19
  release_value %104 : $String.UTF16View, scope 372 // id: %255
  release_value %0 : $String, scope 372           // id: %256
  br bb53, scope 372                              // id: %257

bb52:                                             // Preds: bb0
  release_value %0 : $String, scope 372           // id: %258
  br bb53, scope 372                              // id: %259

bb53:                                             // Preds: bb48 bb49 bb50 bb51 bb52 bb47 bb33
  %260 = enum $Optional<Int>, #Optional.none!enumelt, scope 372 // user: %261
  br bb54(%260 : $Optional<Int>), scope 372       // id: %261

// %262                                           // user: %263
bb54(%262 : $Optional<Int>):                      // Preds: bb53 bb46
  return %262 : $Optional<Int>, scope 372         // id: %263
}

sil_scope 378 {  parent 319 }
sil_scope 379 {  parent 367 inlined_at 378 }

// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance Int
sil hidden [transparent] [thunk] @_TTWSi4Main8LoadableS_ZFS0_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick Int.Type) -> @out Int {
// %0                                             // user: %26
// %1                                             // users: %24, %6, %5, %3
bb0(%0 : $*Int, %1 : $AnyIterator<String>, %2 : $@thick Int.Type):
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":68:19, scope 310 // id: %3
  %4 = alloc_stack $Optional<String>, scope 319   // users: %41, %43, %42
  debug_value %1 : $AnyIterator<String>, scope 319 // id: %5
  %6 = struct_extract %1 : $AnyIterator<String>, #AnyIterator._box, scope 319 // users: %41, %7, %40
  checked_cast_br [exact] %6 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb5, bb6, scope 319 // id: %7

bb1:                                              // Preds: bb6
  %8 = integer_literal $Builtin.Int1, -1, loc "swift.swift":69:34, scope 322 // user: %9
  cond_fail %8 : $Builtin.Int1, loc "swift.swift":69:34, scope 322 // id: %9
  unreachable, loc "swift.swift":69:34, scope 322 // id: %10

bb2:                                              // Preds: bb6
  %11 = unchecked_enum_data %42 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 322 // users: %18, %12
  debug_value %11 : $String, let, name "x", loc "swift.swift":69:7, scope 322 // id: %12
  // function_ref Int.init(String, radix : Int) -> Int?
  %13 = function_ref @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:10, scope 322 // user: %18
  %14 = metatype $@thin Int.Type, loc "swift.swift":70:10, scope 322 // user: %18
  %15 = integer_literal $Builtin.Int64, 10, scope 328 // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64), scope 328 // user: %18
  retain_value %42 : $Optional<String>, scope 308 // id: %17
  %18 = apply %13(%11, %16, %14) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 322 // users: %19, %25
  switch_enum %18 : $Optional<Int>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb4, loc "swift.swift":70:16, scope 322 // id: %19

bb3:                                              // Preds: bb2
  %20 = integer_literal $Builtin.Int1, -1, loc "swift.swift":70:16, scope 322 // user: %21
  cond_fail %20 : $Builtin.Int1, loc "swift.swift":70:16, scope 322 // id: %21
  unreachable, loc "swift.swift":70:16, scope 322 // id: %22

bb4:                                              // Preds: bb2
  release_value %42 : $Optional<String>, scope 308 // id: %23
  release_value %1 : $AnyIterator<String>, scope 308 // id: %24
  %25 = unchecked_enum_data %18 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 322 // user: %26
  store %25 to %0 : $*Int, loc "swift.swift":68:14, scope 308 // id: %26
  %27 = tuple (), loc "swift.swift":68:14, scope 308 // user: %28
  return %27 : $(), loc "swift.swift":68:14, scope 308 // id: %28

bb5(%29 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %30 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 379 // user: %38
  %31 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 379 // user: %33
  %32 = integer_literal $Builtin.Word, 181, scope 379 // user: %35
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word, scope 379 // user: %35
  %34 = integer_literal $Builtin.Int8, 2, scope 379 // user: %35
  %35 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %34 : $Builtin.Int8), scope 379 // user: %38
  %36 = integer_literal $Builtin.Int64, 119, scope 379 // user: %37
  %37 = struct $UInt (%36 : $Builtin.Int64), scope 379 // user: %38
  %38 = apply %30(%35, %37) : $@convention(thin) (StaticString, UInt) -> Never, scope 379
  unreachable, scope 379                          // id: %39

bb6:                                              // Preds: bb0
  %40 = class_method %6 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 319 // user: %41
  %41 = apply %40<String>(%4, %6) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 319
  %42 = load %4 : $*Optional<String>, scope 319   // users: %23, %17, %44, %11
  dealloc_stack %4 : $*Optional<String>, scope 319 // id: %43
  switch_enum %42 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":69:34, scope 322 // id: %44
}

sil_scope 380 { loc "swift.swift":75:14 parent @_TZFE4MainSS4loadfT8iteratorGVs11AnyIteratorSS__SS : $@convention(method) (@owned AnyIterator<String>, @thin String.Type) -> @owned String }
sil_scope 381 { loc "swift.swift":78:2 parent 380 }
sil_scope 382 { loc "swift.swift":76:33 parent 381 }
sil_scope 383 {  parent 315 inlined_at 382 }
sil_scope 384 {  parent 383 }
sil_scope 385 {  parent 367 inlined_at 384 }

// static String.load(iterator : AnyIterator<String>) -> String
sil hidden @_TZFE4MainSS4loadfT8iteratorGVs11AnyIteratorSS__SS : $@convention(method) (@owned AnyIterator<String>, @thin String.Type) -> @owned String {
// %0                                             // users: %10, %5, %4, %2
bb0(%0 : $AnyIterator<String>, %1 : $@thin String.Type):
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":75:19, scope 380 // id: %2
  %3 = alloc_stack $Optional<String>, scope 383   // users: %26, %28, %27
  debug_value %0 : $AnyIterator<String>, scope 383 // id: %4
  %5 = struct_extract %0 : $AnyIterator<String>, #AnyIterator._box, scope 383 // users: %26, %6, %25
  checked_cast_br [exact] %5 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb3, bb4, scope 383 // id: %6

bb1:                                              // Preds: bb4
  %7 = integer_literal $Builtin.Int1, -1, loc "swift.swift":76:34, scope 381 // user: %8
  cond_fail %7 : $Builtin.Int1, loc "swift.swift":76:34, scope 381 // id: %8
  unreachable, loc "swift.swift":76:34, scope 381 // id: %9

bb2:                                              // Preds: bb4
  release_value %0 : $AnyIterator<String>, scope 380 // id: %10
  %11 = unchecked_enum_data %27 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 381 // users: %13, %12
  debug_value %11 : $String, let, name "x", loc "swift.swift":76:7, scope 381 // id: %12
  return %11 : $String, loc "swift.swift":77:3, scope 381 // id: %13

bb3(%14 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %15 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 385 // user: %23
  %16 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 385 // user: %18
  %17 = integer_literal $Builtin.Word, 181, scope 385 // user: %20
  %18 = builtin "ptrtoint_Word"(%16 : $Builtin.RawPointer) : $Builtin.Word, scope 385 // user: %20
  %19 = integer_literal $Builtin.Int8, 2, scope 385 // user: %20
  %20 = struct $StaticString (%18 : $Builtin.Word, %17 : $Builtin.Word, %19 : $Builtin.Int8), scope 385 // user: %23
  %21 = integer_literal $Builtin.Int64, 119, scope 385 // user: %22
  %22 = struct $UInt (%21 : $Builtin.Int64), scope 385 // user: %23
  %23 = apply %15(%20, %22) : $@convention(thin) (StaticString, UInt) -> Never, scope 385
  unreachable, scope 385                          // id: %24

bb4:                                              // Preds: bb0
  %25 = class_method %5 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 383 // user: %26
  %26 = apply %25<String>(%3, %5) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 383
  %27 = load %3 : $*Optional<String>, scope 383   // users: %29, %11
  dealloc_stack %3 : $*Optional<String>, scope 383 // id: %28
  switch_enum %27 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":76:34, scope 381 // id: %29
}

sil_scope 386 { loc "swift.swift":75:14 parent @_TTWSS4Main8LoadableS_ZFS0_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick String.Type) -> @out String }
sil_scope 387 { loc "swift.swift":75:14 parent 386 }
sil_scope 388 { loc "swift.swift":75:14 parent 380 inlined_at 387 }
sil_scope 389 {  parent 383 inlined_at 387 }
sil_scope 390 { loc "swift.swift":78:2 parent 381 inlined_at 387 }
sil_scope 391 {  parent 389 }
sil_scope 392 {  parent 367 inlined_at 391 }

// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance String
sil hidden [transparent] [thunk] @_TTWSS4Main8LoadableS_ZFS0_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick String.Type) -> @out String {
// %0                                             // user: %14
// %1                                             // users: %11, %6, %5, %3
bb0(%0 : $*String, %1 : $AnyIterator<String>, %2 : $@thick String.Type):
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":75:19, scope 388 // id: %3
  %4 = alloc_stack $Optional<String>, scope 389   // users: %29, %31, %30
  debug_value %1 : $AnyIterator<String>, scope 389 // id: %5
  %6 = struct_extract %1 : $AnyIterator<String>, #AnyIterator._box, scope 389 // users: %29, %7, %28
  checked_cast_br [exact] %6 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb3, bb4, scope 389 // id: %7

bb1:                                              // Preds: bb4
  %8 = integer_literal $Builtin.Int1, -1, loc "swift.swift":76:34, scope 390 // user: %9
  cond_fail %8 : $Builtin.Int1, loc "swift.swift":76:34, scope 390 // id: %9
  unreachable, loc "swift.swift":76:34, scope 390 // id: %10

bb2:                                              // Preds: bb4
  release_value %1 : $AnyIterator<String>, scope 386 // id: %11
  %12 = unchecked_enum_data %30 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 390 // users: %14, %13
  debug_value %12 : $String, let, name "x", loc "swift.swift":76:7, scope 390 // id: %13
  store %12 to %0 : $*String, loc "swift.swift":75:14, scope 386 // id: %14
  %15 = tuple (), loc "swift.swift":75:14, scope 386 // user: %16
  return %15 : $(), loc "swift.swift":75:14, scope 386 // id: %16

bb3(%17 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %18 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 392 // user: %26
  %19 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 392 // user: %21
  %20 = integer_literal $Builtin.Word, 181, scope 392 // user: %23
  %21 = builtin "ptrtoint_Word"(%19 : $Builtin.RawPointer) : $Builtin.Word, scope 392 // user: %23
  %22 = integer_literal $Builtin.Int8, 2, scope 392 // user: %23
  %23 = struct $StaticString (%21 : $Builtin.Word, %20 : $Builtin.Word, %22 : $Builtin.Int8), scope 392 // user: %26
  %24 = integer_literal $Builtin.Int64, 119, scope 392 // user: %25
  %25 = struct $UInt (%24 : $Builtin.Int64), scope 392 // user: %26
  %26 = apply %18(%23, %25) : $@convention(thin) (StaticString, UInt) -> Never, scope 392
  unreachable, scope 392                          // id: %27

bb4:                                              // Preds: bb0
  %28 = class_method %6 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 389 // user: %29
  %29 = apply %28<String>(%4, %6) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 389
  %30 = load %4 : $*Optional<String>, scope 389   // users: %32, %12
  dealloc_stack %4 : $*Optional<String>, scope 389 // id: %31
  switch_enum %30 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":76:34, scope 390 // id: %32
}

sil_scope 393 {  parent @_TFSaCft12arrayLiteralGSax__GSax_ : $@convention(method) <τ_0_0> (@owned Array<τ_0_0>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> }

// Array.init(arrayLiteral : [A]...) -> [A]
sil public_external [fragile] @_TFSaCft12arrayLiteralGSax__GSax_ : $@convention(method) <Element> (@owned Array<Element>, @thin Array<Element>.Type) -> @owned Array<Element> {
// %0                                             // users: %3, %2
bb0(%0 : $Array<Element>, %1 : $@thin Array<Element>.Type):
  debug_value %0 : $Array<Element>, scope 393     // id: %2
  return %0 : $Array<Element>, scope 393          // id: %3
}

sil_scope 394 {  parent @_TFSa6appendfxT_ : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () }

// Array.append(A) -> ()
sil public_external [fragile] @_TFSa6appendfxT_ : $@convention(method) <Element> (@in Element, @inout Array<Element>) -> () {
// %0                                             // users: %13, %3
// %1                                             // users: %13, %11, %7, %5, %2
bb0(%0 : $*Element, %1 : $*Array<Element>):
  debug_value_addr %1 : $*Array<Element>, scope 394 // id: %2
  debug_value_addr %0 : $*Element, scope 394      // id: %3
  // function_ref Array._makeUniqueAndReserveCapacityIfNotUnique() -> ()
  %4 = function_ref @_TFSa40_makeUniqueAndReserveCapacityIfNotUniquefT_T_ : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> (), scope 394 // user: %5
  %5 = apply %4<Element>(%1) : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> (), scope 394
  // function_ref Array._getCount() -> Int
  %6 = function_ref @_TFSa9_getCountfT_Si : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 394 // user: %8
  %7 = load %1 : $*Array<Element>, scope 394      // user: %8
  %8 = apply %6<Element>(%7) : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int, scope 394 // users: %13, %11, %9
  debug_value %8 : $Int, scope 394                // id: %9
  // function_ref Array._reserveCapacityAssumingUniqueBuffer(oldCount : Int) -> ()
  %10 = function_ref @_TFSa36_reserveCapacityAssumingUniqueBufferfT8oldCountSi_T_ : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> (), scope 394 // user: %11
  %11 = apply %10<Element>(%8, %1) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> (), scope 394
  // function_ref Array._appendElementAssumeUniqueAndCapacity(Int, newElement : A) -> ()
  %12 = function_ref @_TFSa37_appendElementAssumeUniqueAndCapacityfTSi10newElementx_T_ : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout Array<τ_0_0>) -> (), scope 394 // user: %13
  %13 = apply %12<Element>(%8, %0, %1) : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout Array<τ_0_0>) -> (), scope 394
  %14 = tuple (), scope 394                       // user: %15
  return %14 : $(), scope 394                     // id: %15
}

sil_scope 395 { loc "swift.swift":95:14 parent @_TZFV4Main8Employee4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(method) (@owned AnyIterator<String>, @thin Employee.Type) -> @owned Employee }

// static Employee.load(iterator : AnyIterator<String>) -> Employee
sil hidden [thunk] [always_inline] @_TZFV4Main8Employee4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(method) (@owned AnyIterator<String>, @thin Employee.Type) -> @owned Employee {
// %0                                             // users: %4, %3
bb0(%0 : $AnyIterator<String>, %1 : $@thin Employee.Type):
  // function_ref specialized static Employee.load(iterator : AnyIterator<String>) -> Employee
  %2 = function_ref @_TTSf4g_d___TZFV4Main8Employee4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Employee, loc "swift.swift":95:14, scope 395 // user: %3
  %3 = apply %2(%0) : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Employee, loc "swift.swift":95:14, scope 395 // user: %5
  release_value %0 : $AnyIterator<String>, scope 395 // id: %4
  return %3 : $Employee, loc "swift.swift":95:14, scope 395 // id: %5
}

sil_scope 396 { loc "swift.swift":95:14 parent @_TTWV4Main8EmployeeS_8LoadableS_ZFS1_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick Employee.Type) -> @out Employee }
sil_scope 397 { loc "swift.swift":95:14 parent 396 }
sil_scope 398 { loc "swift.swift":95:14 parent 395 inlined_at 397 }

// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance Employee
sil hidden [transparent] [thunk] @_TTWV4Main8EmployeeS_8LoadableS_ZFS1_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick Employee.Type) -> @out Employee {
// %0                                             // user: %6
// %1                                             // users: %5, %4
bb0(%0 : $*Employee, %1 : $AnyIterator<String>, %2 : $@thick Employee.Type):
  // function_ref specialized static Employee.load(iterator : AnyIterator<String>) -> Employee
  %3 = function_ref @_TTSf4g_d___TZFV4Main8Employee4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Employee, loc "swift.swift":95:14, scope 398 // user: %4
  %4 = apply %3(%1) : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Employee, loc "swift.swift":95:14, scope 398 // user: %6
  release_value %1 : $AnyIterator<String>, scope 396 // id: %5
  store %4 to %0 : $*Employee, loc "swift.swift":95:14, scope 396 // id: %6
  %7 = tuple (), loc "swift.swift":95:14, scope 396 // user: %8
  return %7 : $(), loc "swift.swift":95:14, scope 396 // id: %8
}

sil_scope 399 { loc "swift.swift":104:14 parent @_TZFC4Main7Company4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(method) (@owned AnyIterator<String>, @thick Company.Type) -> @owned Company }
sil_scope 400 { loc "swift.swift":108:2 parent 399 }
sil_scope 401 { loc "swift.swift":47:6 parent @_TTSg5SSSS4Main8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) (@owned AnyIterator<String>) -> @owned String }
sil_scope 402 { loc "swift.swift":106:38 parent 400 }
sil_scope 403 { loc "swift.swift":47:6 parent 401 inlined_at 402 }
sil_scope 404 { loc "swift.swift":51:1 parent 401 }
sil_scope 405 { loc "swift.swift":50:34 parent 404 }
sil_scope 406 { loc "swift.swift":75:14 parent 388 inlined_at 405 }
sil_scope 407 { loc "swift.swift":75:14 parent 406 inlined_at 402 }
sil_scope 408 {  parent 389 inlined_at 405 }
sil_scope 409 {  parent 408 inlined_at 402 }
sil_scope 410 { loc "swift.swift":78:2 parent 390 inlined_at 405 }
sil_scope 411 { loc "swift.swift":78:2 parent 410 inlined_at 402 }
sil_scope 412 { loc "swift.swift":61:6 parent @_TTSg5V4Main8EmployeeS0_S_8LoadableS____TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) (@owned AnyIterator<String>) -> @owned Array<Employee> }
sil_scope 413 { loc "swift.swift":107:48 parent 400 }
sil_scope 414 { loc "swift.swift":61:6 parent 412 inlined_at 413 }
sil_scope 415 { loc "swift.swift":84:14 parent @_TTSg5V4Main8EmployeeS0_S_8LoadableS____TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(method) (@owned AnyIterator<String>, @thin Array<Employee>.Type) -> @owned Array<Employee> }
sil_scope 416 { loc "swift.swift":65:1 parent 412 }
sil_scope 417 { loc "swift.swift":65:1 parent 416 inlined_at 413 }
sil_scope 418 { loc "swift.swift":64:41 parent 417 }
sil_scope 419 { loc "swift.swift":84:14 parent 415 inlined_at 418 }
sil_scope 420 { loc "swift.swift":107:49 parent 400 }
sil_scope 421 { loc "swift.swift":22:2 parent 21 inlined_at 420 }
sil_scope 422 { loc "swift.swift":22:2 parent 23 inlined_at 420 }
sil_scope 423 { loc "swift.swift":25:2 parent 24 inlined_at 420 }
sil_scope 424 {  parent 409 }
sil_scope 425 {  parent 367 inlined_at 424 }

// static Company.load(iterator : AnyIterator<String>) -> Company
sil hidden @_TZFC4Main7Company4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(method) (@owned AnyIterator<String>, @thick Company.Type) -> @owned Company {
// %0                                             // users: %18, %27, %16, %17, %14, %7, %5, %4, %3, %2
bb0(%0 : $AnyIterator<String>, %1 : $@thick Company.Type):
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":104:19, scope 399 // id: %2
  %3 = struct_extract %0 : $AnyIterator<String>, #AnyIterator._box, loc "swift.swift":106:30, scope 400 // users: %41, %8, %40
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 403 // id: %4
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":75:19, scope 407 // id: %5
  %6 = alloc_stack $Optional<String>, scope 409   // users: %41, %43, %42
  debug_value %0 : $AnyIterator<String>, scope 409 // id: %7
  checked_cast_br [exact] %3 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb3, bb4, scope 409 // id: %8

bb1:                                              // Preds: bb4
  %9 = integer_literal $Builtin.Int1, -1, loc "swift.swift":76:34, scope 411 // user: %10
  cond_fail %9 : $Builtin.Int1, loc "swift.swift":76:34, scope 411 // id: %10
  unreachable, loc "swift.swift":76:34, scope 411 // id: %11

bb2:                                              // Preds: bb4
  %12 = unchecked_enum_data %42 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 411 // users: %20, %24, %13
  debug_value %12 : $String, let, name "x", loc "swift.swift":76:7, scope 411 // id: %13
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":61:29, scope 414 // id: %14
  // function_ref specialized specialized static Array<A where ...>.load(iterator : AnyIterator<String>) -> [A]
  %15 = function_ref @_TTSf4g_d___TTSg5V4Main8EmployeeS0_S_8LoadableS____TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Array<Employee>, loc "swift.swift":84:14, scope 419 // user: %17
  retain_value %0 : $AnyIterator<String>, scope 399 // id: %16
  %17 = apply %15(%0) : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Array<Employee>, loc "swift.swift":84:14, scope 419 // users: %21, %26
  release_value %0 : $AnyIterator<String>, scope 399 // id: %18
  %19 = alloc_ref $Company, scope 421             // users: %28, %25, %23, %22
  debug_value %12 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 422 // id: %20
  debug_value %17 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 422 // id: %21
  debug_value %19 : $Company, let, name "self", loc "swift.swift":22:2, scope 422 // id: %22
  %23 = ref_element_addr %19 : $Company, #Company.name, loc "swift.swift":23:13, scope 423 // user: %24
  store %12 to %23 : $*String, loc "swift.swift":23:13, scope 423 // id: %24
  %25 = ref_element_addr %19 : $Company, #Company.employees, loc "swift.swift":24:18, scope 423 // user: %26
  store %17 to %25 : $*Array<Employee>, loc "swift.swift":24:18, scope 423 // id: %26
  release_value %0 : $AnyIterator<String>, scope 399 // id: %27
  return %19 : $Company, loc "swift.swift":105:3, scope 400 // id: %28

bb3(%29 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %30 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 425 // user: %38
  %31 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 425 // user: %33
  %32 = integer_literal $Builtin.Word, 181, scope 425 // user: %35
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word, scope 425 // user: %35
  %34 = integer_literal $Builtin.Int8, 2, scope 425 // user: %35
  %35 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %34 : $Builtin.Int8), scope 425 // user: %38
  %36 = integer_literal $Builtin.Int64, 119, scope 425 // user: %37
  %37 = struct $UInt (%36 : $Builtin.Int64), scope 425 // user: %38
  %38 = apply %30(%35, %37) : $@convention(thin) (StaticString, UInt) -> Never, scope 425
  unreachable, scope 425                          // id: %39

bb4:                                              // Preds: bb0
  %40 = class_method %3 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 409 // user: %41
  %41 = apply %40<String>(%6, %3) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 409
  %42 = load %6 : $*Optional<String>, scope 409   // users: %44, %12
  dealloc_stack %6 : $*Optional<String>, scope 409 // id: %43
  switch_enum %42 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":76:34, scope 411 // id: %44
}

sil_scope 426 { loc "swift.swift":104:14 parent @_TTWC4Main7CompanyS_8LoadableS_ZFS1_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick Company.Type) -> @out Company }
sil_scope 427 { loc "swift.swift":104:14 parent 426 }
sil_scope 428 { loc "swift.swift":104:14 parent 399 inlined_at 427 }
sil_scope 429 { loc "swift.swift":108:2 parent 400 inlined_at 427 }
sil_scope 430 { loc "swift.swift":47:6 parent 403 inlined_at 427 }
sil_scope 431 { loc "swift.swift":75:14 parent 407 inlined_at 427 }
sil_scope 432 {  parent 409 inlined_at 427 }
sil_scope 433 { loc "swift.swift":78:2 parent 411 inlined_at 427 }
sil_scope 434 { loc "swift.swift":61:6 parent 414 inlined_at 427 }
sil_scope 435 { loc "swift.swift":65:1 parent 417 inlined_at 427 }
sil_scope 436 { loc "swift.swift":64:41 parent 435 }
sil_scope 437 { loc "swift.swift":84:14 parent 415 inlined_at 436 }
sil_scope 438 { loc "swift.swift":22:2 parent 421 inlined_at 427 }
sil_scope 439 { loc "swift.swift":22:2 parent 422 inlined_at 427 }
sil_scope 440 { loc "swift.swift":25:2 parent 423 inlined_at 427 }
sil_scope 441 {  parent 432 }
sil_scope 442 {  parent 367 inlined_at 441 }

// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance Company
sil hidden [transparent] [thunk] @_TTWC4Main7CompanyS_8LoadableS_ZFS1_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded : $@convention(witness_method) (@owned AnyIterator<String>, @thick Company.Type) -> @out Company {
// %0                                             // user: %29
// %1                                             // users: %19, %28, %17, %18, %15, %8, %6, %5, %4, %3
bb0(%0 : $*Company, %1 : $AnyIterator<String>, %2 : $@thick Company.Type):
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":104:19, scope 428 // id: %3
  %4 = struct_extract %1 : $AnyIterator<String>, #AnyIterator._box, loc "swift.swift":106:30, scope 429 // users: %44, %9, %43
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 430 // id: %5
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":75:19, scope 431 // id: %6
  %7 = alloc_stack $Optional<String>, scope 432   // users: %44, %46, %45
  debug_value %1 : $AnyIterator<String>, scope 432 // id: %8
  checked_cast_br [exact] %4 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb3, bb4, scope 432 // id: %9

bb1:                                              // Preds: bb4
  %10 = integer_literal $Builtin.Int1, -1, loc "swift.swift":76:34, scope 433 // user: %11
  cond_fail %10 : $Builtin.Int1, loc "swift.swift":76:34, scope 433 // id: %11
  unreachable, loc "swift.swift":76:34, scope 433 // id: %12

bb2:                                              // Preds: bb4
  %13 = unchecked_enum_data %45 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 433 // users: %25, %21, %14
  debug_value %13 : $String, let, name "x", loc "swift.swift":76:7, scope 433 // id: %14
  debug_value %1 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":61:29, scope 434 // id: %15
  // function_ref specialized specialized static Array<A where ...>.load(iterator : AnyIterator<String>) -> [A]
  %16 = function_ref @_TTSf4g_d___TTSg5V4Main8EmployeeS0_S_8LoadableS____TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Array<Employee>, loc "swift.swift":84:14, scope 437 // user: %18
  retain_value %1 : $AnyIterator<String>, scope 426 // id: %17
  %18 = apply %16(%1) : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Array<Employee>, loc "swift.swift":84:14, scope 437 // users: %22, %27
  release_value %1 : $AnyIterator<String>, scope 426 // id: %19
  %20 = alloc_ref $Company, scope 438             // users: %29, %26, %24, %23
  debug_value %13 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 439 // id: %21
  debug_value %18 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 439 // id: %22
  debug_value %20 : $Company, let, name "self", loc "swift.swift":22:2, scope 439 // id: %23
  %24 = ref_element_addr %20 : $Company, #Company.name, loc "swift.swift":23:13, scope 440 // user: %25
  store %13 to %24 : $*String, loc "swift.swift":23:13, scope 440 // id: %25
  %26 = ref_element_addr %20 : $Company, #Company.employees, loc "swift.swift":24:18, scope 440 // user: %27
  store %18 to %26 : $*Array<Employee>, loc "swift.swift":24:18, scope 440 // id: %27
  release_value %1 : $AnyIterator<String>, scope 426 // id: %28
  store %20 to %0 : $*Company, loc "swift.swift":104:14, scope 426 // id: %29
  %30 = tuple (), loc "swift.swift":104:14, scope 426 // user: %31
  return %30 : $(), loc "swift.swift":104:14, scope 426 // id: %31

bb3(%32 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %33 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 442 // user: %41
  %34 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 442 // user: %36
  %35 = integer_literal $Builtin.Word, 181, scope 442 // user: %38
  %36 = builtin "ptrtoint_Word"(%34 : $Builtin.RawPointer) : $Builtin.Word, scope 442 // user: %38
  %37 = integer_literal $Builtin.Int8, 2, scope 442 // user: %38
  %38 = struct $StaticString (%36 : $Builtin.Word, %35 : $Builtin.Word, %37 : $Builtin.Int8), scope 442 // user: %41
  %39 = integer_literal $Builtin.Int64, 119, scope 442 // user: %40
  %40 = struct $UInt (%39 : $Builtin.Int64), scope 442 // user: %41
  %41 = apply %33(%38, %40) : $@convention(thin) (StaticString, UInt) -> Never, scope 442
  unreachable, scope 442                          // id: %42

bb4:                                              // Preds: bb0
  %43 = class_method %4 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 432 // user: %44
  %44 = apply %43<String>(%7, %4) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 432
  %45 = load %7 : $*Optional<String>, scope 432   // users: %47, %13
  dealloc_stack %7 : $*Optional<String>, scope 432 // id: %46
  switch_enum %45 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":76:34, scope 433 // id: %47
}

sil_scope 443 { loc "swift.swift":111:7 parent @_TFC4Main12PaperCompanyD : $@convention(method) (@owned PaperCompany) -> () }
sil_scope 444 { loc "swift.swift":111:7 parent @_TFC4Main12PaperCompanyd : $@convention(method) (@guaranteed PaperCompany) -> @owned Builtin.NativeObject }
sil_scope 445 {  parent 443 }
sil_scope 446 { loc "swift.swift":111:7 parent 444 inlined_at 445 }
sil_scope 447 { loc "swift.swift":111:7 parent 444 }
sil_scope 448 { loc "swift.swift":111:7 parent 447 inlined_at 445 }
sil_scope 449 {  parent 447 }
sil_scope 450 { loc "swift.swift":19:7 parent 242 inlined_at 449 }
sil_scope 451 { loc "swift.swift":19:7 parent 450 inlined_at 445 }
sil_scope 452 { loc "swift.swift":19:7 parent 245 inlined_at 449 }
sil_scope 453 { loc "swift.swift":19:7 parent 452 inlined_at 445 }
sil_scope 454 { loc "swift.swift":111:7 parent @_TFC4Main12PaperCompanyD : $@convention(method) (@owned PaperCompany) -> () }

// PaperCompany.__deallocating_deinit
sil hidden @_TFC4Main12PaperCompanyD : $@convention(method) (@owned PaperCompany) -> () {
// %0                                             // users: %16, %3, %2, %1
bb0(%0 : $PaperCompany):
  debug_value %0 : $PaperCompany, let, name "self", argno 1, loc "swift.swift":111:7, scope 443 // id: %1
  debug_value %0 : $PaperCompany, let, name "self", argno 1, loc "swift.swift":111:7, scope 446 // id: %2
  %3 = upcast %0 : $PaperCompany to $Company, scope 448 // users: %10, %5, %4
  debug_value %3 : $Company, let, name "self", argno 1, loc "swift.swift":19:7, scope 451 // id: %4
  %5 = ref_element_addr %3 : $Company, #Company.name, scope 453 // user: %6
  %6 = struct_element_addr %5 : $*String, #String._core, scope 453 // user: %7
  %7 = struct_element_addr %6 : $*_StringCore, #_StringCore._owner, scope 453 // user: %8
  %8 = load %7 : $*Optional<AnyObject>, scope 453 // user: %9
  release_value %8 : $Optional<AnyObject>, scope 454 // id: %9
  %10 = ref_element_addr %3 : $Company, #Company.employees, scope 453 // user: %11
  %11 = struct_element_addr %10 : $*Array<Employee>, #Array._buffer, scope 453 // user: %12
  %12 = struct_element_addr %11 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 453 // user: %13
  %13 = struct_element_addr %12 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 453 // user: %14
  %14 = load %13 : $*Builtin.BridgeObject, scope 453 // user: %15
  strong_release %14 : $Builtin.BridgeObject, scope 454 // id: %15
  dealloc_ref %0 : $PaperCompany, scope 443       // id: %16
  %17 = tuple (), scope 443                       // user: %18
  return %17 : $(), scope 443                     // id: %18
}

sil_scope 455 { loc "swift.swift":111:7 parent @_TFC4Main12PaperCompanyd : $@convention(method) (@guaranteed PaperCompany) -> @owned Builtin.NativeObject }

// PaperCompany.deinit
sil hidden @_TFC4Main12PaperCompanyd : $@convention(method) (@guaranteed PaperCompany) -> @owned Builtin.NativeObject {
// %0                                             // users: %4, %2, %1
bb0(%0 : $PaperCompany):
  debug_value %0 : $PaperCompany, let, name "self", argno 1, loc "swift.swift":111:7, scope 444 // id: %1
  %2 = upcast %0 : $PaperCompany to $Company, scope 447 // users: %10, %5, %3
  debug_value %2 : $Company, let, name "self", argno 1, loc "swift.swift":19:7, scope 450 // id: %3
  %4 = unchecked_ref_cast %0 : $PaperCompany to $Builtin.NativeObject, scope 455 // user: %16
  %5 = ref_element_addr %2 : $Company, #Company.name, scope 452 // user: %6
  %6 = struct_element_addr %5 : $*String, #String._core, scope 452 // user: %7
  %7 = struct_element_addr %6 : $*_StringCore, #_StringCore._owner, scope 452 // user: %8
  %8 = load %7 : $*Optional<AnyObject>, scope 452 // user: %9
  release_value %8 : $Optional<AnyObject>, scope 455 // id: %9
  %10 = ref_element_addr %2 : $Company, #Company.employees, scope 452 // user: %11
  %11 = struct_element_addr %10 : $*Array<Employee>, #Array._buffer, scope 452 // user: %12
  %12 = struct_element_addr %11 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 452 // user: %13
  %13 = struct_element_addr %12 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 452 // user: %14
  %14 = load %13 : $*Builtin.BridgeObject, scope 452 // user: %15
  strong_release %14 : $Builtin.BridgeObject, scope 455 // id: %15
  return %4 : $Builtin.NativeObject, scope 447    // id: %16
}

sil_scope 456 { loc "swift.swift":111:30 parent @_TFC4Main12PaperCompanycfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @owned PaperCompany) -> @owned PaperCompany }
sil_scope 457 {  parent 456 }
sil_scope 458 {  parent 457 }
sil_scope 459 { loc "swift.swift":22:2 parent 19 inlined_at 458 }
sil_scope 460 { loc "swift.swift":25:2 parent 20 inlined_at 458 }

// PaperCompany.init(name : String, employees : [Employee]) -> PaperCompany
sil hidden @_TFC4Main12PaperCompanycfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @owned PaperCompany) -> @owned PaperCompany {
// %0                                             // users: %10, %6, %3
// %1                                             // users: %12, %7, %4
// %2                                             // users: %13, %5
bb0(%0 : $String, %1 : $Array<Employee>, %2 : $PaperCompany):
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 456 // id: %3
  debug_value %1 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 456 // id: %4
  %5 = upcast %2 : $PaperCompany to $Company, scope 457 // users: %11, %9, %8
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 459 // id: %6
  debug_value %1 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 459 // id: %7
  debug_value %5 : $Company, let, name "self", loc "swift.swift":22:2, scope 459 // id: %8
  %9 = ref_element_addr %5 : $Company, #Company.name, loc "swift.swift":23:13, scope 460 // user: %10
  store %0 to %9 : $*String, loc "swift.swift":23:13, scope 460 // id: %10
  %11 = ref_element_addr %5 : $Company, #Company.employees, loc "swift.swift":24:18, scope 460 // user: %12
  store %1 to %11 : $*Array<Employee>, loc "swift.swift":24:18, scope 460 // id: %12
  return %2 : $PaperCompany, loc "swift.swift":111:30, scope 457 // id: %13
}

sil_scope 461 { loc "swift.swift":111:30 parent @_TFC4Main12PaperCompanyCfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @thick PaperCompany.Type) -> @owned PaperCompany }
sil_scope 462 {  parent 461 }
sil_scope 463 { loc "swift.swift":111:30 parent 456 inlined_at 462 }
sil_scope 464 {  parent 457 inlined_at 462 }
sil_scope 465 { loc "swift.swift":22:2 parent 459 inlined_at 462 }
sil_scope 466 { loc "swift.swift":25:2 parent 460 inlined_at 462 }

// PaperCompany.__allocating_init(name : String, employees : [Employee]) -> PaperCompany
sil hidden @_TFC4Main12PaperCompanyCfT4nameSS9employeesGSaVS_8Employee__S0_ : $@convention(method) (@owned String, @owned Array<Employee>, @thick PaperCompany.Type) -> @owned PaperCompany {
// %0                                             // users: %11, %7, %4
// %1                                             // users: %13, %8, %5
bb0(%0 : $String, %1 : $Array<Employee>, %2 : $@thick PaperCompany.Type):
  %3 = alloc_ref $PaperCompany, scope 461         // users: %14, %6
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 463 // id: %4
  debug_value %1 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 463 // id: %5
  %6 = upcast %3 : $PaperCompany to $Company, scope 464 // users: %12, %10, %9
  debug_value %0 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 465 // id: %7
  debug_value %1 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 465 // id: %8
  debug_value %6 : $Company, let, name "self", loc "swift.swift":22:2, scope 465 // id: %9
  %10 = ref_element_addr %6 : $Company, #Company.name, loc "swift.swift":23:13, scope 466 // user: %11
  store %0 to %10 : $*String, loc "swift.swift":23:13, scope 466 // id: %11
  %12 = ref_element_addr %6 : $Company, #Company.employees, loc "swift.swift":24:18, scope 466 // user: %13
  store %1 to %12 : $*Array<Employee>, loc "swift.swift":24:18, scope 466 // id: %13
  return %3 : $PaperCompany, scope 461            // id: %14
}

sil_scope 467 { loc "swift.swift":114:6 parent @_TF4Main4mainFT_T_ : $@convention(thin) () -> () }
sil_scope 468 { loc "swift.swift":125:1 parent 467 }
sil_scope 469 { loc "swift.swift":115:28 parent 468 }
sil_scope 470 {  parent 112 inlined_at 469 }
sil_scope 471 {  parent 470 }
sil_scope 472 {  parent 111 inlined_at 471 }
sil_scope 473 { loc "swift.swift":39:6 parent @_TTSg5SiSi4Main8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT6stringSS_x : $@convention(thin) (@owned String) -> Int }
sil_scope 474 { loc "swift.swift":115:32 parent 468 }
sil_scope 475 { loc "swift.swift":39:6 parent 473 inlined_at 474 }
sil_scope 476 { loc "swift.swift":45:1 parent 473 }
sil_scope 477 { loc "swift.swift":45:1 parent 476 inlined_at 474 }
sil_scope 478 { loc "swift.swift":42:46 parent 476 }
sil_scope 479 {  parent 112 inlined_at 478 }
sil_scope 480 {  parent 479 }
sil_scope 481 {  parent 111 inlined_at 480 }
sil_scope 482 {  parent 481 inlined_at 474 }
sil_scope 483 { loc "swift.swift":43:57 parent 476 }
sil_scope 484 {  parent 271 inlined_at 483 }
sil_scope 485 {  parent 484 inlined_at 474 }
sil_scope 486 { loc "swift.swift":43:58 parent 476 }
sil_scope 487 {  parent 274 inlined_at 486 }
sil_scope 488 {  parent 487 inlined_at 474 }
sil_scope 489 {  parent 279 inlined_at 486 }
sil_scope 490 {  parent 489 inlined_at 474 }
sil_scope 491 {  parent 284 inlined_at 486 }
sil_scope 492 {  parent 491 inlined_at 474 }
sil_scope 493 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBox4nextfT_GSqwx7Element_ : $@convention(method) (@guaranteed _IteratorBox<IndexingIterator<Array<String>>>) -> @owned Optional<String> }
sil_scope 494 { loc "swift.swift":44:32 parent 476 }
sil_scope 495 {  parent 320 inlined_at 494 }
sil_scope 496 {  parent 495 }
sil_scope 497 {  parent 493 inlined_at 496 }
sil_scope 498 {  parent 497 inlined_at 474 }
sil_scope 499 {  parent @_TTSg5GSaSS_GSaSS_s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<Array<String>>) -> @owned Optional<String> }
sil_scope 500 {  parent @_TTSg5GSaSS_GSaSS_s13IndexableBases___TTWuRxs13IndexableBaserGVs16IndexingIteratorx_s16IteratorProtocolsFS1_4nextfT_GSqwx7Element_ : $@convention(witness_method) (@inout IndexingIterator<Array<String>>) -> @owned Optional<String> }
sil_scope 501 {  parent 493 }
sil_scope 502 {  parent 500 inlined_at 501 }
sil_scope 503 {  parent 502 inlined_at 496 }
sil_scope 504 {  parent 503 inlined_at 474 }
sil_scope 505 {  parent 504 }
sil_scope 506 {  parent 499 inlined_at 505 }
sil_scope 507 {  parent @_TTSg5SS___TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 508 {  parent @_TTSg5SS___TFVs12_ArrayBufferg5countSi : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 509 {  parent 508 }
sil_scope 510 {  parent 507 inlined_at 509 }
sil_scope 511 {  parent @_TTSg5SS___TFSa9_getCountfT_Si : $@convention(method) (@guaranteed Array<String>) -> Int }
sil_scope 512 {  parent 511 }
sil_scope 513 {  parent 510 inlined_at 512 }
sil_scope 514 {  parent @_TTSg5SS___TFSag8endIndexSi : $@convention(method) (@guaranteed Array<String>) -> Int }
sil_scope 515 {  parent 514 }
sil_scope 516 {  parent 513 inlined_at 515 }
sil_scope 517 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_g8endIndexwx5Index : $@convention(witness_method) (@in_guaranteed Array<String>) -> Int }
sil_scope 518 {  parent 517 }
sil_scope 519 {  parent 516 inlined_at 518 }
sil_scope 520 {  parent 499 }
sil_scope 521 {  parent 519 inlined_at 520 }
sil_scope 522 {  parent 521 inlined_at 505 }
sil_scope 523 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerlo6headerx : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> (UnsafePointer<_ArrayBody>, @owned Builtin.NativeObject) }
sil_scope 524 {  parent 523 }
sil_scope 525 {  parent 62 inlined_at 524 }
sil_scope 526 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferg5countSi : $@convention(method) (@guaranteed _ContiguousArrayBuffer<String>) -> Int }
sil_scope 527 {  parent 508 }
sil_scope 528 {  parent 526 inlined_at 527 }
sil_scope 529 {  parent 528 }
sil_scope 530 {  parent 525 inlined_at 529 }
sil_scope 531 {  parent 530 inlined_at 512 }
sil_scope 532 {  parent 531 inlined_at 515 }
sil_scope 533 {  parent 532 inlined_at 518 }
sil_scope 534 {  parent 533 inlined_at 520 }
sil_scope 535 {  parent 534 inlined_at 505 }
sil_scope 536 {  parent 70 inlined_at 524 }
sil_scope 537 {  parent 536 inlined_at 529 }
sil_scope 538 {  parent 537 inlined_at 512 }
sil_scope 539 {  parent 538 inlined_at 515 }
sil_scope 540 {  parent 539 inlined_at 518 }
sil_scope 541 {  parent 540 inlined_at 520 }
sil_scope 542 {  parent 541 inlined_at 505 }
sil_scope 543 {  parent 76 inlined_at 524 }
sil_scope 544 {  parent 543 inlined_at 529 }
sil_scope 545 {  parent 544 inlined_at 512 }
sil_scope 546 {  parent 545 inlined_at 515 }
sil_scope 547 {  parent 546 inlined_at 518 }
sil_scope 548 {  parent 547 inlined_at 520 }
sil_scope 549 {  parent 548 inlined_at 505 }
sil_scope 550 {  parent 528 inlined_at 512 }
sil_scope 551 {  parent 550 inlined_at 515 }
sil_scope 552 {  parent 551 inlined_at 518 }
sil_scope 553 {  parent 552 inlined_at 520 }
sil_scope 554 {  parent 553 inlined_at 505 }
sil_scope 555 {  parent 499 }
sil_scope 556 {  parent 332 inlined_at 555 }
sil_scope 557 {  parent 556 inlined_at 505 }
sil_scope 558 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBuffer20_checkValidSubscriptfSiT_ : $@convention(method) (Int, @guaranteed _ContiguousArrayBuffer<String>) -> () }
sil_scope 559 {  parent @_TTSg5SS___TFVs12_ArrayBuffer37_checkInoutAndNativeTypeCheckedBoundsfTSi20wasNativeTypeCheckedSb_T_ : $@convention(method) (Int, Bool, @guaranteed _ArrayBuffer<String>) -> () }
sil_scope 560 {  parent 559 }
sil_scope 561 {  parent 558 inlined_at 560 }
sil_scope 562 {  parent @_TTSg5SS___TFSa15_checkSubscriptfTSi20wasNativeTypeCheckedSb_Vs16_DependenceToken : $@convention(method) (Int, Bool, @guaranteed Array<String>) -> _DependenceToken }
sil_scope 563 {  parent 562 }
sil_scope 564 {  parent 561 inlined_at 563 }
sil_scope 565 {  parent @_TTSg5SS___TFSag9subscriptFSix : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String }
sil_scope 566 {  parent 565 }
sil_scope 567 {  parent 564 inlined_at 566 }
sil_scope 568 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_g9subscriptFwx5Indexwx8_Element : $@convention(witness_method) (Int, @in_guaranteed Array<String>) -> @owned String }
sil_scope 569 {  parent 499 }
sil_scope 570 {  parent 568 inlined_at 569 }
sil_scope 571 {  parent 570 }
sil_scope 572 {  parent 567 inlined_at 571 }
sil_scope 573 {  parent 572 inlined_at 505 }
sil_scope 574 {  parent 558 }
sil_scope 575 {  parent 525 inlined_at 574 }
sil_scope 576 {  parent 575 inlined_at 560 }
sil_scope 577 {  parent 576 inlined_at 563 }
sil_scope 578 {  parent 577 inlined_at 566 }
sil_scope 579 {  parent 578 inlined_at 571 }
sil_scope 580 {  parent 579 inlined_at 505 }
sil_scope 581 {  parent 543 inlined_at 574 }
sil_scope 582 {  parent 581 inlined_at 560 }
sil_scope 583 {  parent 582 inlined_at 563 }
sil_scope 584 {  parent 583 inlined_at 566 }
sil_scope 585 {  parent 584 inlined_at 571 }
sil_scope 586 {  parent 585 inlined_at 505 }
sil_scope 587 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBuffer10getElementfSix : $@convention(method) (Int, @guaranteed _ContiguousArrayBuffer<String>) -> @owned String }
sil_scope 588 {  parent 587 }
sil_scope 589 {  parent 98 inlined_at 588 }
sil_scope 590 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferg9subscriptFSix : $@convention(method) (Int, @guaranteed _ContiguousArrayBuffer<String>) -> @owned String }
sil_scope 591 {  parent 590 }
sil_scope 592 {  parent 589 inlined_at 591 }
sil_scope 593 {  parent @_TTSg5SS___TFVs12_ArrayBuffer10getElementfTSi20wasNativeTypeCheckedSb_x : $@convention(method) (Int, Bool, @guaranteed _ArrayBuffer<String>) -> @owned String }
sil_scope 594 {  parent 593 }
sil_scope 595 {  parent 592 inlined_at 594 }
sil_scope 596 {  parent @_TTSg5SS___TFSa11_getElementfTSi20wasNativeTypeCheckedSb22matchingSubscriptCheckVs16_DependenceToken_x : $@convention(method) (Int, Bool, _DependenceToken, @guaranteed Array<String>) -> @owned String }
sil_scope 597 {  parent 596 }
sil_scope 598 {  parent 595 inlined_at 597 }
sil_scope 599 {  parent 565 }
sil_scope 600 {  parent 598 inlined_at 599 }
sil_scope 601 {  parent 600 inlined_at 571 }
sil_scope 602 {  parent 601 inlined_at 505 }
sil_scope 603 {  parent 104 inlined_at 588 }
sil_scope 604 {  parent 603 inlined_at 591 }
sil_scope 605 {  parent 604 inlined_at 594 }
sil_scope 606 {  parent 605 inlined_at 597 }
sil_scope 607 {  parent 606 inlined_at 599 }
sil_scope 608 {  parent 607 inlined_at 571 }
sil_scope 609 {  parent 608 inlined_at 505 }
sil_scope 610 {  parent 108 inlined_at 588 }
sil_scope 611 {  parent 610 inlined_at 591 }
sil_scope 612 {  parent 611 inlined_at 594 }
sil_scope 613 {  parent 612 inlined_at 597 }
sil_scope 614 {  parent 613 inlined_at 599 }
sil_scope 615 {  parent 614 inlined_at 571 }
sil_scope 616 {  parent 615 inlined_at 505 }
sil_scope 617 {  parent 587 inlined_at 591 }
sil_scope 618 {  parent 617 inlined_at 594 }
sil_scope 619 {  parent 618 inlined_at 597 }
sil_scope 620 {  parent 619 inlined_at 599 }
sil_scope 621 {  parent 620 inlined_at 571 }
sil_scope 622 {  parent 621 inlined_at 505 }
sil_scope 623 {  parent 596 inlined_at 599 }
sil_scope 624 {  parent 623 inlined_at 571 }
sil_scope 625 {  parent 624 inlined_at 505 }
sil_scope 626 {  parent @_TTSg5SS___TFSa9formIndexfT5afterRSi_T_ : $@convention(method) (@inout Int, @guaranteed Array<String>) -> () }
sil_scope 627 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_9formIndexfT5afterRwx5Index_T_ : $@convention(witness_method) (@inout Int, @in_guaranteed Array<String>) -> () }
sil_scope 628 {  parent 627 }
sil_scope 629 {  parent 626 inlined_at 628 }
sil_scope 630 {  parent 499 }
sil_scope 631 {  parent 629 inlined_at 630 }
sil_scope 632 {  parent 631 inlined_at 505 }
sil_scope 633 { loc "swift.swift":71:2 parent 323 inlined_at 494 }
sil_scope 634 { loc "swift.swift":71:2 parent 633 inlined_at 474 }
sil_scope 635 {  parent 329 inlined_at 494 }
sil_scope 636 {  parent 635 inlined_at 474 }
sil_scope 637 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBoxD : $@convention(method) (@owned _IteratorBox<IndexingIterator<Array<String>>>) -> () }
sil_scope 638 {  parent 467 }
sil_scope 639 {  parent 637 inlined_at 638 }
sil_scope 640 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBoxd : $@convention(method) (@guaranteed _IteratorBox<IndexingIterator<Array<String>>>) -> @owned Builtin.NativeObject }
sil_scope 641 {  parent 637 }
sil_scope 642 {  parent 640 inlined_at 641 }
sil_scope 643 {  parent 642 inlined_at 638 }
sil_scope 644 {  parent @_TTSg5P____TFs27_allocateUninitializedArrayurFBwTGSax_Bp_ : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) }
sil_scope 645 { loc "swift.swift":116:8 parent 468 }
sil_scope 646 {  parent 644 inlined_at 645 }
sil_scope 647 {  parent @_TTSg5Vs10_ArrayBody_P____TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<_ArrayBody, Any>.Type) -> @owned ManagedBufferPointer<_ArrayBody, Any> }
sil_scope 648 {  parent 644 }
sil_scope 649 {  parent 647 inlined_at 648 }
sil_scope 650 {  parent 649 inlined_at 645 }
sil_scope 651 {  parent @_TTSg5Vs10_ArrayBody_P____TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, Any>.Type) -> Int }
sil_scope 652 {  parent 647 }
sil_scope 653 {  parent 651 inlined_at 652 }
sil_scope 654 {  parent 653 inlined_at 648 }
sil_scope 655 {  parent 654 inlined_at 645 }
sil_scope 656 {  parent @_TTSg5Vs10_ArrayBody_P____TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, Any>.Type) -> Int }
sil_scope 657 {  parent 651 }
sil_scope 658 {  parent 656 inlined_at 657 }
sil_scope 659 {  parent 658 inlined_at 652 }
sil_scope 660 {  parent 659 inlined_at 648 }
sil_scope 661 {  parent 660 inlined_at 645 }
sil_scope 662 {  parent @_TTSg5Vs10_ArrayBody_P____TZFVs20ManagedBufferPointerg14_alignmentMaskSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, Any>.Type) -> Int }
sil_scope 663 {  parent 647 }
sil_scope 664 {  parent 662 inlined_at 663 }
sil_scope 665 {  parent 664 inlined_at 648 }
sil_scope 666 {  parent 665 inlined_at 645 }
sil_scope 667 {  parent @_TTSg5P____TZFSa13_adoptStoragefTPs9AnyObject_5countSi_TGSax_GSpx__ : $@convention(method) (@owned AnyObject, Int, @thin Array<Any>.Type) -> (@owned Array<Any>, UnsafeMutablePointer<Any>) }
sil_scope 668 {  parent 646 }
sil_scope 669 {  parent 667 inlined_at 668 }
sil_scope 670 {  parent @_TTSg5P____TFVs22_ContiguousArrayBufferCfT5countSi7storageGCs23_ContiguousArrayStoragex__GS_x_ : $@convention(method) (Int, @owned _ContiguousArrayStorage<Any>, @thin _ContiguousArrayBuffer<Any>.Type) -> @owned _ContiguousArrayBuffer<Any> }
sil_scope 671 {  parent 667 }
sil_scope 672 {  parent 670 inlined_at 671 }
sil_scope 673 {  parent 672 inlined_at 668 }
sil_scope 674 {  parent @_TTSg5P____TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) (Int, Int, @guaranteed _ContiguousArrayBuffer<Any>) -> () }
sil_scope 675 {  parent 670 }
sil_scope 676 {  parent 674 inlined_at 675 }
sil_scope 677 {  parent 676 inlined_at 671 }
sil_scope 678 {  parent 677 inlined_at 668 }
sil_scope 679 {  parent @_TTSg5Vs10_ArrayBody_P____TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Any>) -> UnsafeMutablePointer<_ArrayBody> }
sil_scope 680 {  parent 674 }
sil_scope 681 {  parent 679 inlined_at 680 }
sil_scope 682 {  parent 681 inlined_at 675 }
sil_scope 683 {  parent 682 inlined_at 671 }
sil_scope 684 {  parent 683 inlined_at 668 }
sil_scope 685 {  parent @_TTSg5Vs10_ArrayBody_P____TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Any>) -> UnsafeMutableRawPointer }
sil_scope 686 {  parent 679 }
sil_scope 687 {  parent 685 inlined_at 686 }
sil_scope 688 {  parent 687 inlined_at 680 }
sil_scope 689 {  parent 688 inlined_at 675 }
sil_scope 690 {  parent 689 inlined_at 671 }
sil_scope 691 {  parent 690 inlined_at 668 }
sil_scope 692 {  parent 679 }
sil_scope 693 {  parent 656 inlined_at 692 }
sil_scope 694 {  parent 693 inlined_at 680 }
sil_scope 695 {  parent 694 inlined_at 675 }
sil_scope 696 {  parent 695 inlined_at 671 }
sil_scope 697 {  parent 696 inlined_at 668 }
sil_scope 698 {  parent 674 }
sil_scope 699 {  parent 81 inlined_at 698 }
sil_scope 700 {  parent 699 inlined_at 675 }
sil_scope 701 {  parent 700 inlined_at 671 }
sil_scope 702 {  parent 701 inlined_at 668 }
sil_scope 703 {  parent @_TTSg5P____TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) (@owned _ContiguousArrayBuffer<Any>, Int, @thin _ArrayBuffer<Any>.Type) -> @owned _ArrayBuffer<Any> }
sil_scope 704 {  parent 667 }
sil_scope 705 {  parent 703 inlined_at 704 }
sil_scope 706 {  parent 705 inlined_at 668 }
sil_scope 707 {  parent @_TTSg5P____TFSaCfT7_bufferGVs12_ArrayBufferx__GSax_ : $@convention(method) (@owned _ArrayBuffer<Any>, @thin Array<Any>.Type) -> @owned Array<Any> }
sil_scope 708 {  parent 667 }
sil_scope 709 {  parent 707 inlined_at 708 }
sil_scope 710 {  parent 709 inlined_at 668 }
sil_scope 711 {  parent @_TTSg5Vs10_ArrayBody_P____TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Any>) -> UnsafeMutablePointer<Any> }
sil_scope 712 {  parent @_TTSg5P____TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) (@guaranteed _ContiguousArrayBuffer<Any>) -> UnsafeMutablePointer<Any> }
sil_scope 713 {  parent 712 }
sil_scope 714 {  parent 711 inlined_at 713 }
sil_scope 715 {  parent 667 }
sil_scope 716 {  parent 714 inlined_at 715 }
sil_scope 717 {  parent 716 inlined_at 668 }
sil_scope 718 {  parent 711 }
sil_scope 719 {  parent 651 inlined_at 718 }
sil_scope 720 {  parent 719 inlined_at 713 }
sil_scope 721 {  parent 720 inlined_at 715 }
sil_scope 722 {  parent 721 inlined_at 668 }
sil_scope 723 {  parent 658 inlined_at 718 }
sil_scope 724 {  parent 723 inlined_at 713 }
sil_scope 725 {  parent 724 inlined_at 715 }
sil_scope 726 {  parent 725 inlined_at 668 }
sil_scope 727 { loc "swift.swift":117:31 parent 468 }
sil_scope 728 {  parent 112 inlined_at 727 }
sil_scope 729 {  parent 728 }
sil_scope 730 {  parent 111 inlined_at 729 }
sil_scope 731 { loc "swift.swift":39:6 parent @_TTSg5SSSS4Main8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT6stringSS_x : $@convention(thin) (@owned String) -> @owned String }
sil_scope 732 { loc "swift.swift":117:36 parent 468 }
sil_scope 733 { loc "swift.swift":39:6 parent 731 inlined_at 732 }
sil_scope 734 { loc "swift.swift":45:1 parent 731 }
sil_scope 735 { loc "swift.swift":45:1 parent 734 inlined_at 732 }
sil_scope 736 { loc "swift.swift":42:46 parent 735 }
sil_scope 737 {  parent 112 inlined_at 736 }
sil_scope 738 {  parent 737 }
sil_scope 739 {  parent 111 inlined_at 738 }
sil_scope 740 { loc "swift.swift":43:58 parent 734 }
sil_scope 741 {  parent 274 inlined_at 740 }
sil_scope 742 {  parent 741 inlined_at 732 }
sil_scope 743 {  parent 279 inlined_at 740 }
sil_scope 744 {  parent 743 inlined_at 732 }
sil_scope 745 {  parent 284 inlined_at 740 }
sil_scope 746 {  parent 745 inlined_at 732 }
sil_scope 747 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBox4nextfT_GSqwx7Element_ : $@convention(method) (@guaranteed _IteratorBox<IndexingIterator<Array<String>>>) -> @owned Optional<String> }
sil_scope 748 { loc "swift.swift":44:32 parent 734 }
sil_scope 749 {  parent 408 inlined_at 748 }
sil_scope 750 {  parent 749 inlined_at 732 }
sil_scope 751 {  parent 750 }
sil_scope 752 {  parent 747 inlined_at 751 }
sil_scope 753 {  parent @_TTSg5GSaSS_GSaSS_s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<Array<String>>) -> @owned Optional<String> }
sil_scope 754 {  parent @_TTSg5GSaSS_GSaSS_s13IndexableBases___TTWuRxs13IndexableBaserGVs16IndexingIteratorx_s16IteratorProtocolsFS1_4nextfT_GSqwx7Element_ : $@convention(witness_method) (@inout IndexingIterator<Array<String>>) -> @owned Optional<String> }
sil_scope 755 {  parent 754 }
sil_scope 756 {  parent 753 inlined_at 755 }
sil_scope 757 {  parent 747 }
sil_scope 758 {  parent 756 inlined_at 757 }
sil_scope 759 {  parent 758 inlined_at 751 }
sil_scope 760 {  parent @_TTSg5SS___TFSag8endIndexSi : $@convention(method) (@guaranteed Array<String>) -> Int }
sil_scope 761 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_g8endIndexwx5Index : $@convention(witness_method) (@in_guaranteed Array<String>) -> Int }
sil_scope 762 {  parent 761 }
sil_scope 763 {  parent 760 inlined_at 762 }
sil_scope 764 {  parent 753 }
sil_scope 765 {  parent 763 inlined_at 764 }
sil_scope 766 {  parent 765 inlined_at 755 }
sil_scope 767 {  parent 766 inlined_at 757 }
sil_scope 768 {  parent 767 inlined_at 751 }
sil_scope 769 {  parent 768 }
sil_scope 770 {  parent 511 inlined_at 769 }
sil_scope 771 {  parent 508 inlined_at 512 }
sil_scope 772 {  parent 771 inlined_at 769 }
sil_scope 773 {  parent 513 inlined_at 769 }
sil_scope 774 {  parent 531 inlined_at 769 }
sil_scope 775 {  parent 538 inlined_at 769 }
sil_scope 776 {  parent 545 inlined_at 769 }
sil_scope 777 {  parent 550 inlined_at 769 }
sil_scope 778 {  parent 753 }
sil_scope 779 {  parent 332 inlined_at 778 }
sil_scope 780 {  parent 779 inlined_at 755 }
sil_scope 781 {  parent 780 inlined_at 757 }
sil_scope 782 {  parent 781 inlined_at 751 }
sil_scope 783 {  parent @_TTSg5SS___TFSag9subscriptFSix : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String }
sil_scope 784 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_g9subscriptFwx5Indexwx8_Element : $@convention(witness_method) (Int, @in_guaranteed Array<String>) -> @owned String }
sil_scope 785 {  parent 784 }
sil_scope 786 {  parent 783 inlined_at 785 }
sil_scope 787 {  parent 753 }
sil_scope 788 {  parent 786 inlined_at 787 }
sil_scope 789 {  parent 788 inlined_at 755 }
sil_scope 790 {  parent 789 inlined_at 757 }
sil_scope 791 {  parent 790 inlined_at 751 }
sil_scope 792 {  parent 791 }
sil_scope 793 {  parent 562 inlined_at 792 }
sil_scope 794 {  parent 559 inlined_at 563 }
sil_scope 795 {  parent 794 inlined_at 792 }
sil_scope 796 {  parent 559 }
sil_scope 797 {  parent 507 inlined_at 796 }
sil_scope 798 {  parent 797 inlined_at 563 }
sil_scope 799 {  parent 798 inlined_at 792 }
sil_scope 800 {  parent 564 inlined_at 792 }
sil_scope 801 {  parent 577 inlined_at 792 }
sil_scope 802 {  parent 583 inlined_at 792 }
sil_scope 803 {  parent 791 }
sil_scope 804 {  parent 596 inlined_at 803 }
sil_scope 805 {  parent 593 inlined_at 597 }
sil_scope 806 {  parent 805 inlined_at 803 }
sil_scope 807 {  parent @_TTSg5SS___TFVs12_ArrayBufferg18_nativeTypeCheckedGVs22_ContiguousArrayBufferx_ : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 808 {  parent 593 }
sil_scope 809 {  parent 807 inlined_at 808 }
sil_scope 810 {  parent 809 inlined_at 597 }
sil_scope 811 {  parent 810 inlined_at 803 }
sil_scope 812 {  parent 590 inlined_at 594 }
sil_scope 813 {  parent 812 inlined_at 597 }
sil_scope 814 {  parent 813 inlined_at 803 }
sil_scope 815 {  parent 619 inlined_at 803 }
sil_scope 816 {  parent 598 inlined_at 803 }
sil_scope 817 {  parent 606 inlined_at 803 }
sil_scope 818 {  parent 613 inlined_at 803 }
sil_scope 819 {  parent @_TTSg5SS___TFSa9formIndexfT5afterRSi_T_ : $@convention(method) (@inout Int, @guaranteed Array<String>) -> () }
sil_scope 820 {  parent @_TTSg5SS___TTWurGSax_s13IndexableBasesFS_9formIndexfT5afterRwx5Index_T_ : $@convention(witness_method) (@inout Int, @in_guaranteed Array<String>) -> () }
sil_scope 821 {  parent 820 }
sil_scope 822 {  parent 819 inlined_at 821 }
sil_scope 823 {  parent 753 }
sil_scope 824 {  parent 822 inlined_at 823 }
sil_scope 825 {  parent 824 inlined_at 755 }
sil_scope 826 {  parent 825 inlined_at 757 }
sil_scope 827 {  parent 826 inlined_at 751 }
sil_scope 828 {  parent 467 }
sil_scope 829 {  parent 637 inlined_at 828 }
sil_scope 830 {  parent 642 inlined_at 828 }
sil_scope 831 { loc "swift.swift":78:2 parent 410 inlined_at 748 }
sil_scope 832 { loc "swift.swift":78:2 parent 831 inlined_at 732 }
sil_scope 833 { loc "swift.swift":118:8 parent 468 }
sil_scope 834 {  parent 644 inlined_at 833 }
sil_scope 835 {  parent 649 inlined_at 833 }
sil_scope 836 {  parent 654 inlined_at 833 }
sil_scope 837 {  parent 660 inlined_at 833 }
sil_scope 838 {  parent 665 inlined_at 833 }
sil_scope 839 {  parent 834 }
sil_scope 840 {  parent 667 inlined_at 839 }
sil_scope 841 {  parent 672 inlined_at 839 }
sil_scope 842 {  parent 677 inlined_at 839 }
sil_scope 843 {  parent 683 inlined_at 839 }
sil_scope 844 {  parent 690 inlined_at 839 }
sil_scope 845 {  parent 696 inlined_at 839 }
sil_scope 846 {  parent 701 inlined_at 839 }
sil_scope 847 {  parent 705 inlined_at 839 }
sil_scope 848 {  parent 709 inlined_at 839 }
sil_scope 849 {  parent 716 inlined_at 839 }
sil_scope 850 {  parent 721 inlined_at 839 }
sil_scope 851 {  parent 725 inlined_at 839 }
sil_scope 852 { loc "swift.swift":120:38 parent 468 }
sil_scope 853 {  parent 112 inlined_at 852 }
sil_scope 854 {  parent 853 }
sil_scope 855 {  parent 111 inlined_at 854 }
sil_scope 856 { loc "swift.swift":53:6 parent @_TTSg5SSSS4Main8LoadableS____TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT6stringSS_GSax_ : $@convention(thin) (@owned String) -> @owned Array<String> }
sil_scope 857 { loc "swift.swift":120:61 parent 468 }
sil_scope 858 { loc "swift.swift":53:6 parent 856 inlined_at 857 }
sil_scope 859 { loc "swift.swift":59:1 parent 856 }
sil_scope 860 { loc "swift.swift":59:1 parent 859 inlined_at 857 }
sil_scope 861 { loc "swift.swift":56:46 parent 860 }
sil_scope 862 {  parent 112 inlined_at 861 }
sil_scope 863 {  parent 862 }
sil_scope 864 {  parent 111 inlined_at 863 }
sil_scope 865 { loc "swift.swift":57:58 parent 859 }
sil_scope 866 {  parent 274 inlined_at 865 }
sil_scope 867 {  parent 866 inlined_at 857 }
sil_scope 868 {  parent 279 inlined_at 865 }
sil_scope 869 {  parent 868 inlined_at 857 }
sil_scope 870 {  parent 284 inlined_at 865 }
sil_scope 871 {  parent 870 inlined_at 857 }
sil_scope 872 { loc "swift.swift":84:14 parent @_TTSg5SSSS4Main8LoadableS____TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(method) (@owned AnyIterator<String>, @thin Array<String>.Type) -> @owned Array<String> }
sil_scope 873 { loc "swift.swift":91:2 parent 872 }
sil_scope 874 { loc "swift.swift":61:6 parent @_TTSg5SSSS4Main8LoadableS____TF4Main9loadArrayuRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) (@owned AnyIterator<String>) -> @owned Array<String> }
sil_scope 875 { loc "swift.swift":65:1 parent 874 }
sil_scope 876 { loc "swift.swift":58:37 parent 859 }
sil_scope 877 { loc "swift.swift":65:1 parent 875 inlined_at 876 }
sil_scope 878 { loc "swift.swift":65:1 parent 877 inlined_at 857 }
sil_scope 879 { loc "swift.swift":64:41 parent 878 }
sil_scope 880 { loc "swift.swift":91:2 parent 873 inlined_at 879 }
sil_scope 881 {  parent @_TTSg5GVs16IndexingIteratorGSaSS__GS_GSaSS__s16IteratorProtocols___TFCs12_IteratorBox4nextfT_GSqwx7Element_ : $@convention(method) (@guaranteed _IteratorBox<IndexingIterator<Array<String>>>) -> @owned Optional<String> }
sil_scope 882 { loc "swift.swift":85:44 parent 873 }
sil_scope 883 {  parent 320 inlined_at 882 }
sil_scope 884 {  parent 883 inlined_at 879 }
sil_scope 885 {  parent 884 }
sil_scope 886 {  parent 881 inlined_at 885 }
sil_scope 887 {  parent @_TTSg5GSaSS_GSaSS_s13IndexableBases___TTWuRxs13IndexableBaserGVs16IndexingIteratorx_s16IteratorProtocolsFS1_4nextfT_GSqwx7Element_ : $@convention(witness_method) (@inout IndexingIterator<Array<String>>) -> @owned Optional<String> }
sil_scope 888 {  parent 881 }
sil_scope 889 {  parent 887 inlined_at 888 }
sil_scope 890 {  parent 889 }
sil_scope 891 {  parent 499 inlined_at 890 }
sil_scope 892 {  parent 891 inlined_at 885 }
sil_scope 893 {  parent 521 inlined_at 890 }
sil_scope 894 {  parent 893 inlined_at 885 }
sil_scope 895 {  parent 534 inlined_at 890 }
sil_scope 896 {  parent 895 inlined_at 885 }
sil_scope 897 {  parent 541 inlined_at 890 }
sil_scope 898 {  parent 897 inlined_at 885 }
sil_scope 899 {  parent 548 inlined_at 890 }
sil_scope 900 {  parent 899 inlined_at 885 }
sil_scope 901 {  parent 553 inlined_at 890 }
sil_scope 902 {  parent 901 inlined_at 885 }
sil_scope 903 {  parent 556 inlined_at 890 }
sil_scope 904 {  parent 903 inlined_at 885 }
sil_scope 905 {  parent 579 inlined_at 890 }
sil_scope 906 {  parent 905 inlined_at 885 }
sil_scope 907 {  parent 585 inlined_at 890 }
sil_scope 908 {  parent 907 inlined_at 885 }
sil_scope 909 {  parent 572 inlined_at 890 }
sil_scope 910 {  parent 909 inlined_at 885 }
sil_scope 911 {  parent 601 inlined_at 890 }
sil_scope 912 {  parent 911 inlined_at 885 }
sil_scope 913 {  parent 608 inlined_at 890 }
sil_scope 914 {  parent 913 inlined_at 885 }
sil_scope 915 {  parent 615 inlined_at 890 }
sil_scope 916 {  parent 915 inlined_at 885 }
sil_scope 917 {  parent 621 inlined_at 890 }
sil_scope 918 {  parent 917 inlined_at 885 }
sil_scope 919 {  parent 624 inlined_at 890 }
sil_scope 920 {  parent 919 inlined_at 885 }
sil_scope 921 {  parent 631 inlined_at 890 }
sil_scope 922 {  parent 921 inlined_at 885 }
sil_scope 923 { loc "swift.swift":71:2 parent 323 inlined_at 882 }
sil_scope 924 { loc "swift.swift":71:2 parent 923 inlined_at 879 }
sil_scope 925 {  parent @_TTSg5SS___TFVs12_ArrayBufferCfT_GS_x_ : $@convention(method) (@thin _ArrayBuffer<String>.Type) -> @owned _ArrayBuffer<String> }
sil_scope 926 {  parent @_TTSg5SS___TFSaCfT19_uninitializedCountSi_GSax_ : $@convention(method) (Int, @thin Array<String>.Type) -> @owned Array<String> }
sil_scope 927 {  parent 926 }
sil_scope 928 {  parent 925 inlined_at 927 }
sil_scope 929 {  parent @_TTSg5SS___TZFSa22_allocateUninitializedfSiTGSax_GSpx__ : $@convention(method) (Int, @thin Array<String>.Type) -> (@owned Array<String>, UnsafeMutablePointer<String>) }
sil_scope 930 {  parent 929 }
sil_scope 931 {  parent 928 inlined_at 930 }
sil_scope 932 {  parent 873 }
sil_scope 933 {  parent 26 inlined_at 932 }
sil_scope 934 {  parent 933 }
sil_scope 935 {  parent 931 inlined_at 934 }
sil_scope 936 {  parent 935 inlined_at 879 }
sil_scope 937 {  parent 926 inlined_at 930 }
sil_scope 938 {  parent 937 inlined_at 934 }
sil_scope 939 {  parent 938 inlined_at 879 }
sil_scope 940 {  parent 929 inlined_at 934 }
sil_scope 941 {  parent 940 inlined_at 879 }
sil_scope 942 {  parent @_TTSg5SS___TFVs12_ArrayBufferg19firstElementAddressGSpx_ : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> UnsafeMutablePointer<String> }
sil_scope 943 {  parent 929 }
sil_scope 944 {  parent 942 inlined_at 943 }
sil_scope 945 {  parent 944 inlined_at 934 }
sil_scope 946 {  parent 945 inlined_at 879 }
sil_scope 947 {  parent 942 }
sil_scope 948 {  parent 507 inlined_at 947 }
sil_scope 949 {  parent 948 inlined_at 943 }
sil_scope 950 {  parent 949 inlined_at 934 }
sil_scope 951 {  parent 950 inlined_at 879 }
sil_scope 952 {  parent 942 }
sil_scope 953 {  parent 98 inlined_at 952 }
sil_scope 954 {  parent 953 inlined_at 943 }
sil_scope 955 {  parent 954 inlined_at 934 }
sil_scope 956 {  parent 955 inlined_at 879 }
sil_scope 957 {  parent 104 inlined_at 952 }
sil_scope 958 {  parent 957 inlined_at 943 }
sil_scope 959 {  parent 958 inlined_at 934 }
sil_scope 960 {  parent 959 inlined_at 879 }
sil_scope 961 {  parent 108 inlined_at 952 }
sil_scope 962 {  parent 961 inlined_at 943 }
sil_scope 963 {  parent 962 inlined_at 934 }
sil_scope 964 {  parent 963 inlined_at 879 }
sil_scope 965 {  parent 933 inlined_at 879 }
sil_scope 966 {  parent @_TTSg5SS___TFSaCft12arrayLiteralGSax__GSax_ : $@convention(method) (@owned Array<String>, @thin Array<String>.Type) -> @owned Array<String> }
sil_scope 967 { loc "swift.swift":86:24 parent 873 }
sil_scope 968 {  parent 966 inlined_at 967 }
sil_scope 969 {  parent 968 inlined_at 879 }
sil_scope 970 { loc "swift.swift":89:3 parent 873 }
sil_scope 971 { loc "swift.swift":89:3 parent 970 inlined_at 879 }
sil_scope 972 { loc "swift.swift":87:9 parent 970 }
sil_scope 973 {  parent 335 inlined_at 972 }
sil_scope 974 {  parent 973 inlined_at 879 }
sil_scope 975 {  parent 333 inlined_at 972 }
sil_scope 976 {  parent 975 inlined_at 879 }
sil_scope 977 { loc "swift.swift":84:14 parent 872 inlined_at 879 }
sil_scope 978 { loc "swift.swift":121:8 parent 468 }
sil_scope 979 {  parent 644 inlined_at 978 }
sil_scope 980 {  parent 649 inlined_at 978 }
sil_scope 981 {  parent 654 inlined_at 978 }
sil_scope 982 {  parent 660 inlined_at 978 }
sil_scope 983 {  parent 665 inlined_at 978 }
sil_scope 984 {  parent 362 inlined_at 972 }
sil_scope 985 {  parent 984 inlined_at 879 }
sil_scope 986 { loc "swift.swift":89:3 parent 970 }
sil_scope 987 { loc "swift.swift":88:43 parent 986 }
sil_scope 988 {  parent 408 inlined_at 987 }
sil_scope 989 {  parent 988 inlined_at 879 }
sil_scope 990 {  parent 989 }
sil_scope 991 {  parent 881 inlined_at 990 }
sil_scope 992 {  parent 891 inlined_at 990 }
sil_scope 993 {  parent 895 inlined_at 990 }
sil_scope 994 {  parent 899 inlined_at 990 }
sil_scope 995 {  parent 905 inlined_at 990 }
sil_scope 996 {  parent 907 inlined_at 990 }
sil_scope 997 {  parent 911 inlined_at 990 }
sil_scope 998 {  parent 913 inlined_at 990 }
sil_scope 999 {  parent 915 inlined_at 990 }
sil_scope 1000 {  parent 921 inlined_at 990 }
sil_scope 1001 {  parent @_TTSg5SS___TFSa6appendfxT_ : $@convention(method) (@owned String, @inout Array<String>) -> () }
sil_scope 1002 { loc "swift.swift":88:44 parent 986 }
sil_scope 1003 {  parent 1001 inlined_at 1002 }
sil_scope 1004 {  parent 1003 inlined_at 879 }
sil_scope 1005 {  parent @_TTSg5SS___TFSa40_makeUniqueAndReserveCapacityIfNotUniquefT_T_ : $@convention(method) (@inout Array<String>) -> () }
sil_scope 1006 {  parent 1003 }
sil_scope 1007 {  parent 1005 inlined_at 1006 }
sil_scope 1008 {  parent 1007 inlined_at 879 }
sil_scope 1009 {  parent @_TTSg5SS___TFVs12_ArrayBuffer30isMutableAndUniquelyReferencedfT_Sb : $@convention(method) (@inout _ArrayBuffer<String>) -> Bool }
sil_scope 1010 {  parent 1005 }
sil_scope 1011 {  parent 1009 inlined_at 1010 }
sil_scope 1012 {  parent 1011 inlined_at 1006 }
sil_scope 1013 {  parent 1012 inlined_at 879 }
sil_scope 1014 {  parent @_TTSg5SS___TFVs12_ArrayBuffer20isUniquelyReferencedfT_Sb : $@convention(method) (@inout _ArrayBuffer<String>) -> Bool }
sil_scope 1015 {  parent 1009 }
sil_scope 1016 {  parent 1014 inlined_at 1015 }
sil_scope 1017 {  parent 1016 inlined_at 1010 }
sil_scope 1018 {  parent 1017 inlined_at 1006 }
sil_scope 1019 {  parent 1018 inlined_at 879 }
sil_scope 1020 {  parent 1003 }
sil_scope 1021 {  parent 531 inlined_at 1020 }
sil_scope 1022 {  parent 1021 inlined_at 879 }
sil_scope 1023 {  parent 545 inlined_at 1020 }
sil_scope 1024 {  parent 1023 inlined_at 879 }
sil_scope 1025 {  parent @_TTSg5SS___TFSa36_reserveCapacityAssumingUniqueBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<String>) -> () }
sil_scope 1026 {  parent 1003 }
sil_scope 1027 {  parent 1025 inlined_at 1026 }
sil_scope 1028 {  parent 1027 inlined_at 879 }
sil_scope 1029 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferg8capacitySi : $@convention(method) (@guaranteed _ContiguousArrayBuffer<String>) -> Int }
sil_scope 1030 {  parent 1029 }
sil_scope 1031 {  parent 525 inlined_at 1030 }
sil_scope 1032 {  parent @_TTSg5SS___TFVs12_ArrayBufferg8capacitySi : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1033 {  parent 1032 }
sil_scope 1034 {  parent 1031 inlined_at 1033 }
sil_scope 1035 {  parent 1025 }
sil_scope 1036 {  parent 1034 inlined_at 1035 }
sil_scope 1037 {  parent 1036 inlined_at 1026 }
sil_scope 1038 {  parent 1037 inlined_at 879 }
sil_scope 1039 {  parent 543 inlined_at 1030 }
sil_scope 1040 {  parent 1039 inlined_at 1033 }
sil_scope 1041 {  parent 1040 inlined_at 1035 }
sil_scope 1042 {  parent 1041 inlined_at 1026 }
sil_scope 1043 {  parent 1042 inlined_at 879 }
sil_scope 1044 {  parent @_TTSg5SS___TFSa37_appendElementAssumeUniqueAndCapacityfTSi10newElementx_T_ : $@convention(method) (Int, @owned String, @inout Array<String>) -> () }
sil_scope 1045 {  parent 1003 }
sil_scope 1046 {  parent 1044 inlined_at 1045 }
sil_scope 1047 {  parent 1046 inlined_at 879 }
sil_scope 1048 {  parent @_TTSg5SS___TFVs12_ArrayBuffers5countSi : $@convention(method) (Int, @inout _ArrayBuffer<String>) -> () }
sil_scope 1049 {  parent 1044 }
sil_scope 1050 {  parent 1048 inlined_at 1049 }
sil_scope 1051 {  parent 1050 inlined_at 1045 }
sil_scope 1052 {  parent 1051 inlined_at 879 }
sil_scope 1053 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBuffers5countSi : $@convention(method) (Int, @guaranteed _ContiguousArrayBuffer<String>) -> () }
sil_scope 1054 {  parent 1053 }
sil_scope 1055 {  parent 62 inlined_at 1054 }
sil_scope 1056 {  parent 1048 }
sil_scope 1057 {  parent 1055 inlined_at 1056 }
sil_scope 1058 {  parent 1057 inlined_at 1049 }
sil_scope 1059 {  parent 1058 inlined_at 1045 }
sil_scope 1060 {  parent 1059 inlined_at 879 }
sil_scope 1061 {  parent 76 inlined_at 1054 }
sil_scope 1062 {  parent 1061 inlined_at 1056 }
sil_scope 1063 {  parent 1062 inlined_at 1049 }
sil_scope 1064 {  parent 1063 inlined_at 1045 }
sil_scope 1065 {  parent 1064 inlined_at 879 }
sil_scope 1066 {  parent 1044 }
sil_scope 1067 {  parent 953 inlined_at 1066 }
sil_scope 1068 {  parent 1067 inlined_at 1045 }
sil_scope 1069 {  parent 1068 inlined_at 879 }
sil_scope 1070 {  parent 957 inlined_at 1066 }
sil_scope 1071 {  parent 1070 inlined_at 1045 }
sil_scope 1072 {  parent 1071 inlined_at 879 }
sil_scope 1073 {  parent 961 inlined_at 1066 }
sil_scope 1074 {  parent 1073 inlined_at 1045 }
sil_scope 1075 {  parent 1074 inlined_at 879 }
sil_scope 1076 {  parent 893 inlined_at 990 }
sil_scope 1077 {  parent 897 inlined_at 990 }
sil_scope 1078 {  parent 901 inlined_at 990 }
sil_scope 1079 {  parent 903 inlined_at 990 }
sil_scope 1080 {  parent 909 inlined_at 990 }
sil_scope 1081 {  parent 917 inlined_at 990 }
sil_scope 1082 {  parent 919 inlined_at 990 }
sil_scope 1083 { loc "swift.swift":78:2 parent 410 inlined_at 987 }
sil_scope 1084 { loc "swift.swift":78:2 parent 1083 inlined_at 879 }
sil_scope 1085 {  parent 513 inlined_at 1020 }
sil_scope 1086 {  parent 1085 inlined_at 879 }
sil_scope 1087 {  parent 538 inlined_at 1020 }
sil_scope 1088 {  parent 1087 inlined_at 879 }
sil_scope 1089 {  parent 550 inlined_at 1020 }
sil_scope 1090 {  parent 1089 inlined_at 879 }
sil_scope 1091 {  parent 1029 inlined_at 1033 }
sil_scope 1092 {  parent 1091 inlined_at 1035 }
sil_scope 1093 {  parent 1092 inlined_at 1026 }
sil_scope 1094 {  parent 1093 inlined_at 879 }
sil_scope 1095 {  parent 1053 inlined_at 1056 }
sil_scope 1096 {  parent 1095 inlined_at 1049 }
sil_scope 1097 {  parent 1096 inlined_at 1045 }
sil_scope 1098 {  parent 1097 inlined_at 879 }
sil_scope 1099 {  parent 70 inlined_at 1054 }
sil_scope 1100 {  parent 1099 inlined_at 1056 }
sil_scope 1101 {  parent 1100 inlined_at 1049 }
sil_scope 1102 {  parent 1101 inlined_at 1045 }
sil_scope 1103 {  parent 1102 inlined_at 879 }
sil_scope 1104 {  parent 95 }
sil_scope 1105 {  parent 68 inlined_at 1104 }
sil_scope 1106 {  parent 1105 inlined_at 97 }
sil_scope 1107 {  parent 1106 inlined_at 952 }
sil_scope 1108 {  parent 1107 inlined_at 1066 }
sil_scope 1109 {  parent 1108 inlined_at 1045 }
sil_scope 1110 {  parent 1109 inlined_at 879 }
sil_scope 1111 {  parent @_TTSg5SS___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (@owned String, Int, UnsafeMutablePointer<String>) -> () }
sil_scope 1112 {  parent 1044 }
sil_scope 1113 {  parent 1111 inlined_at 1112 }
sil_scope 1114 {  parent 1113 inlined_at 1045 }
sil_scope 1115 {  parent 1114 inlined_at 879 }
sil_scope 1116 {  parent 1005 }
sil_scope 1117 {  parent 510 inlined_at 1116 }
sil_scope 1118 {  parent 1117 inlined_at 1006 }
sil_scope 1119 {  parent 1118 inlined_at 879 }
sil_scope 1120 {  parent 530 inlined_at 1116 }
sil_scope 1121 {  parent 1120 inlined_at 1006 }
sil_scope 1122 {  parent 1121 inlined_at 879 }
sil_scope 1123 {  parent 537 inlined_at 1116 }
sil_scope 1124 {  parent 1123 inlined_at 1006 }
sil_scope 1125 {  parent 1124 inlined_at 879 }
sil_scope 1126 {  parent 544 inlined_at 1116 }
sil_scope 1127 {  parent 1126 inlined_at 1006 }
sil_scope 1128 {  parent 1127 inlined_at 879 }
sil_scope 1129 {  parent 528 inlined_at 1116 }
sil_scope 1130 {  parent 1129 inlined_at 1006 }
sil_scope 1131 {  parent 1130 inlined_at 879 }
sil_scope 1132 {  parent 979 }
sil_scope 1133 {  parent 667 inlined_at 1132 }
sil_scope 1134 {  parent 672 inlined_at 1132 }
sil_scope 1135 {  parent 677 inlined_at 1132 }
sil_scope 1136 {  parent 683 inlined_at 1132 }
sil_scope 1137 {  parent 690 inlined_at 1132 }
sil_scope 1138 {  parent 696 inlined_at 1132 }
sil_scope 1139 {  parent 701 inlined_at 1132 }
sil_scope 1140 {  parent 705 inlined_at 1132 }
sil_scope 1141 {  parent 709 inlined_at 1132 }
sil_scope 1142 {  parent 716 inlined_at 1132 }
sil_scope 1143 {  parent 721 inlined_at 1132 }
sil_scope 1144 {  parent 725 inlined_at 1132 }
sil_scope 1145 { loc "swift.swift":123:32 parent 468 }
sil_scope 1146 {  parent 112 inlined_at 1145 }
sil_scope 1147 {  parent 1146 }
sil_scope 1148 {  parent 111 inlined_at 1147 }
sil_scope 1149 { loc "swift.swift":39:6 parent @_TTSg5C4Main7CompanyS0_S_8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT6stringSS_x : $@convention(thin) (@owned String) -> @owned Company }
sil_scope 1150 { loc "swift.swift":123:65 parent 468 }
sil_scope 1151 { loc "swift.swift":39:6 parent 1149 inlined_at 1150 }
sil_scope 1152 { loc "swift.swift":45:1 parent 1149 }
sil_scope 1153 { loc "swift.swift":42:46 parent 1152 }
sil_scope 1154 {  parent 112 inlined_at 1153 }
sil_scope 1155 {  parent 1154 }
sil_scope 1156 {  parent 111 inlined_at 1155 }
sil_scope 1157 {  parent 1156 inlined_at 1150 }
sil_scope 1158 { loc "swift.swift":45:1 parent 1152 inlined_at 1150 }
sil_scope 1159 { loc "swift.swift":43:58 parent 1152 }
sil_scope 1160 {  parent 274 inlined_at 1159 }
sil_scope 1161 {  parent 1160 inlined_at 1150 }
sil_scope 1162 {  parent 279 inlined_at 1159 }
sil_scope 1163 {  parent 1162 inlined_at 1150 }
sil_scope 1164 {  parent 284 inlined_at 1159 }
sil_scope 1165 {  parent 1164 inlined_at 1150 }
sil_scope 1166 { loc "swift.swift":47:6 parent @_TTSg5C4Main7CompanyS0_S_8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) (@owned AnyIterator<String>) -> @owned Company }
sil_scope 1167 { loc "swift.swift":51:1 parent 1166 }
sil_scope 1168 { loc "swift.swift":50:34 parent 1167 }
sil_scope 1169 {  parent 432 inlined_at 1168 }
sil_scope 1170 { loc "swift.swift":44:32 parent 1152 }
sil_scope 1171 {  parent 1169 inlined_at 1170 }
sil_scope 1172 {  parent 1171 }
sil_scope 1173 {  parent 493 inlined_at 1172 }
sil_scope 1174 {  parent 1173 inlined_at 1150 }
sil_scope 1175 {  parent 502 inlined_at 1172 }
sil_scope 1176 {  parent 1175 inlined_at 1150 }
sil_scope 1177 {  parent 1176 }
sil_scope 1178 {  parent 499 inlined_at 1177 }
sil_scope 1179 {  parent 521 inlined_at 1177 }
sil_scope 1180 {  parent 534 inlined_at 1177 }
sil_scope 1181 {  parent 541 inlined_at 1177 }
sil_scope 1182 {  parent 548 inlined_at 1177 }
sil_scope 1183 {  parent 553 inlined_at 1177 }
sil_scope 1184 {  parent 556 inlined_at 1177 }
sil_scope 1185 {  parent 579 inlined_at 1177 }
sil_scope 1186 {  parent 585 inlined_at 1177 }
sil_scope 1187 {  parent 572 inlined_at 1177 }
sil_scope 1188 {  parent 601 inlined_at 1177 }
sil_scope 1189 {  parent 608 inlined_at 1177 }
sil_scope 1190 {  parent 615 inlined_at 1177 }
sil_scope 1191 {  parent 621 inlined_at 1177 }
sil_scope 1192 {  parent 624 inlined_at 1177 }
sil_scope 1193 {  parent 631 inlined_at 1177 }
sil_scope 1194 { loc "swift.swift":78:2 parent 433 inlined_at 1168 }
sil_scope 1195 { loc "swift.swift":78:2 parent 1194 inlined_at 1170 }
sil_scope 1196 { loc "swift.swift":78:2 parent 1195 inlined_at 1150 }
sil_scope 1197 { loc "swift.swift":84:14 parent @_TTSf4g_d___TTSg5V4Main8EmployeeS0_S_8LoadableS____TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Array<Employee> }
sil_scope 1198 { loc "swift.swift":91:2 parent 1197 }
sil_scope 1199 { loc "swift.swift":65:1 parent 435 inlined_at 1168 }
sil_scope 1200 { loc "swift.swift":65:1 parent 1199 inlined_at 1170 }
sil_scope 1201 { loc "swift.swift":65:1 parent 1200 inlined_at 1150 }
sil_scope 1202 { loc "swift.swift":64:41 parent 1201 }
sil_scope 1203 { loc "swift.swift":84:14 parent 415 inlined_at 1202 }
sil_scope 1204 { loc "swift.swift":84:14 parent 1203 }
sil_scope 1205 { loc "swift.swift":91:2 parent 1198 inlined_at 1204 }
sil_scope 1206 { loc "swift.swift":85:44 parent 1198 }
sil_scope 1207 {  parent 320 inlined_at 1206 }
sil_scope 1208 {  parent 1207 inlined_at 1204 }
sil_scope 1209 { loc "swift.swift":71:2 parent 323 inlined_at 1206 }
sil_scope 1210 { loc "swift.swift":71:2 parent 1209 inlined_at 1204 }
sil_scope 1211 {  parent @_TTSg5V4Main8Employee___TFSaCfT19_uninitializedCountSi_GSax_ : $@convention(method) (Int, @thin Array<Employee>.Type) -> @owned Array<Employee> }
sil_scope 1212 {  parent @_TTSg5V4Main8Employee___TZFSa22_allocateUninitializedfSiTGSax_GSpx__ : $@convention(method) (Int, @thin Array<Employee>.Type) -> (@owned Array<Employee>, UnsafeMutablePointer<Employee>) }
sil_scope 1213 {  parent 1212 }
sil_scope 1214 {  parent 1211 inlined_at 1213 }
sil_scope 1215 {  parent @_TTSg5V4Main8Employee___TFs27_allocateUninitializedArrayurFBwTGSax_Bp_ : $@convention(thin) (Builtin.Word) -> (@owned Array<Employee>, Builtin.RawPointer) }
sil_scope 1216 {  parent 1198 }
sil_scope 1217 {  parent 1215 inlined_at 1216 }
sil_scope 1218 {  parent 1217 }
sil_scope 1219 {  parent 1214 inlined_at 1218 }
sil_scope 1220 {  parent 1219 inlined_at 1204 }
sil_scope 1221 {  parent 1212 inlined_at 1218 }
sil_scope 1222 {  parent 1221 inlined_at 1204 }
sil_scope 1223 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferg19firstElementAddressGSpx_ : $@convention(method) (@guaranteed _ArrayBuffer<Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 1224 {  parent 1212 }
sil_scope 1225 {  parent 1223 inlined_at 1224 }
sil_scope 1226 {  parent 1225 inlined_at 1218 }
sil_scope 1227 {  parent 1226 inlined_at 1204 }
sil_scope 1228 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) (@guaranteed _ArrayBuffer<Employee>) -> @owned _ContiguousArrayBuffer<Employee> }
sil_scope 1229 {  parent 1223 }
sil_scope 1230 {  parent 1228 inlined_at 1229 }
sil_scope 1231 {  parent 1230 inlined_at 1224 }
sil_scope 1232 {  parent 1231 inlined_at 1218 }
sil_scope 1233 {  parent 1232 inlined_at 1204 }
sil_scope 1234 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 1235 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) (@guaranteed _ContiguousArrayBuffer<Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 1236 {  parent 1235 }
sil_scope 1237 {  parent 1234 inlined_at 1236 }
sil_scope 1238 {  parent 1223 }
sil_scope 1239 {  parent 1237 inlined_at 1238 }
sil_scope 1240 {  parent 1239 inlined_at 1224 }
sil_scope 1241 {  parent 1240 inlined_at 1218 }
sil_scope 1242 {  parent 1241 inlined_at 1204 }
sil_scope 1243 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, Employee>.Type) -> Int }
sil_scope 1244 {  parent 1234 }
sil_scope 1245 {  parent 1243 inlined_at 1244 }
sil_scope 1246 {  parent 1245 inlined_at 1236 }
sil_scope 1247 {  parent 1246 inlined_at 1238 }
sil_scope 1248 {  parent 1247 inlined_at 1224 }
sil_scope 1249 {  parent 1248 inlined_at 1218 }
sil_scope 1250 {  parent 1249 inlined_at 1204 }
sil_scope 1251 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, Employee>.Type) -> Int }
sil_scope 1252 {  parent 1243 }
sil_scope 1253 {  parent 1251 inlined_at 1252 }
sil_scope 1254 {  parent 1253 inlined_at 1244 }
sil_scope 1255 {  parent 1254 inlined_at 1236 }
sil_scope 1256 {  parent 1255 inlined_at 1238 }
sil_scope 1257 {  parent 1256 inlined_at 1224 }
sil_scope 1258 {  parent 1257 inlined_at 1218 }
sil_scope 1259 {  parent 1258 inlined_at 1204 }
sil_scope 1260 {  parent 1217 inlined_at 1204 }
sil_scope 1261 {  parent @_TTSg5V4Main8Employee___TFSaCft12arrayLiteralGSax__GSax_ : $@convention(method) (@owned Array<Employee>, @thin Array<Employee>.Type) -> @owned Array<Employee> }
sil_scope 1262 { loc "swift.swift":86:24 parent 1198 }
sil_scope 1263 {  parent 1261 inlined_at 1262 }
sil_scope 1264 {  parent 1263 inlined_at 1204 }
sil_scope 1265 { loc "swift.swift":89:3 parent 1198 }
sil_scope 1266 { loc "swift.swift":89:3 parent 1265 inlined_at 1204 }
sil_scope 1267 { loc "swift.swift":87:9 parent 1265 }
sil_scope 1268 {  parent 335 inlined_at 1267 }
sil_scope 1269 {  parent 1268 inlined_at 1204 }
sil_scope 1270 {  parent 333 inlined_at 1267 }
sil_scope 1271 {  parent 1270 inlined_at 1204 }
sil_scope 1272 { loc "swift.swift":84:14 parent 1197 inlined_at 1204 }
sil_scope 1273 { loc "swift.swift":22:2 parent 438 inlined_at 1168 }
sil_scope 1274 { loc "swift.swift":22:2 parent 1273 inlined_at 1170 }
sil_scope 1275 { loc "swift.swift":22:2 parent 1274 inlined_at 1150 }
sil_scope 1276 { loc "swift.swift":22:2 parent 439 inlined_at 1168 }
sil_scope 1277 { loc "swift.swift":22:2 parent 1276 inlined_at 1170 }
sil_scope 1278 { loc "swift.swift":22:2 parent 1277 inlined_at 1150 }
sil_scope 1279 { loc "swift.swift":25:2 parent 440 inlined_at 1168 }
sil_scope 1280 { loc "swift.swift":25:2 parent 1279 inlined_at 1170 }
sil_scope 1281 { loc "swift.swift":25:2 parent 1280 inlined_at 1150 }
sil_scope 1282 { loc "swift.swift":124:8 parent 468 }
sil_scope 1283 {  parent 644 inlined_at 1282 }
sil_scope 1284 {  parent 649 inlined_at 1282 }
sil_scope 1285 {  parent 654 inlined_at 1282 }
sil_scope 1286 {  parent 660 inlined_at 1282 }
sil_scope 1287 {  parent 665 inlined_at 1282 }
sil_scope 1288 {  parent 362 inlined_at 1267 }
sil_scope 1289 {  parent 1288 inlined_at 1204 }
sil_scope 1290 { loc "swift.swift":100:2 parent 395 }
sil_scope 1291 { loc "swift.swift":97:38 parent 1290 }
sil_scope 1292 {  parent 408 inlined_at 1291 }
sil_scope 1293 { loc "swift.swift":47:6 parent @_TTSg5V4Main8EmployeeS0_S_8LoadableS____TF4Main4loaduRxS_8Loadablexzwx6LoadedrFT8iteratorGVs11AnyIteratorSS__x : $@convention(thin) (@owned AnyIterator<String>) -> @owned Employee }
sil_scope 1294 { loc "swift.swift":51:1 parent 1293 }
sil_scope 1295 { loc "swift.swift":50:34 parent 1294 }
sil_scope 1296 { loc "swift.swift":95:14 parent 396 inlined_at 1295 }
sil_scope 1297 { loc "swift.swift":89:3 parent 1265 }
sil_scope 1298 { loc "swift.swift":88:43 parent 1297 }
sil_scope 1299 { loc "swift.swift":95:14 parent 1296 inlined_at 1298 }
sil_scope 1300 { loc "swift.swift":95:14 parent 1299 }
sil_scope 1301 {  parent 1292 inlined_at 1300 }
sil_scope 1302 {  parent 1301 inlined_at 1204 }
sil_scope 1303 { loc "swift.swift":78:2 parent 410 inlined_at 1291 }
sil_scope 1304 { loc "swift.swift":78:2 parent 1303 inlined_at 1300 }
sil_scope 1305 { loc "swift.swift":78:2 parent 1304 inlined_at 1204 }
sil_scope 1306 { loc "swift.swift":98:37 parent 1290 }
sil_scope 1307 {  parent 320 inlined_at 1306 }
sil_scope 1308 {  parent 1307 inlined_at 1300 }
sil_scope 1309 {  parent 1308 inlined_at 1204 }
sil_scope 1310 { loc "swift.swift":71:2 parent 323 inlined_at 1306 }
sil_scope 1311 { loc "swift.swift":71:2 parent 1310 inlined_at 1300 }
sil_scope 1312 { loc "swift.swift":71:2 parent 1311 inlined_at 1204 }
sil_scope 1313 { loc "swift.swift":99:4 parent 1290 }
sil_scope 1314 { loc "swift.swift":9:2 parent 2 inlined_at 1313 }
sil_scope 1315 { loc "swift.swift":9:2 parent 1314 inlined_at 1300 }
sil_scope 1316 { loc "swift.swift":9:2 parent 1315 inlined_at 1204 }
sil_scope 1317 { loc "swift.swift":89:3 parent 1297 inlined_at 1204 }
sil_scope 1318 {  parent @_TTSg5V4Main8Employee___TFSa6appendfxT_ : $@convention(method) (@owned Employee, @inout Array<Employee>) -> () }
sil_scope 1319 { loc "swift.swift":88:44 parent 1297 }
sil_scope 1320 {  parent 1318 inlined_at 1319 }
sil_scope 1321 {  parent 1320 inlined_at 1204 }
sil_scope 1322 {  parent @_TTSg5V4Main8Employee___TFSa40_makeUniqueAndReserveCapacityIfNotUniquefT_T_ : $@convention(method) (@inout Array<Employee>) -> () }
sil_scope 1323 {  parent 1320 }
sil_scope 1324 {  parent 1322 inlined_at 1323 }
sil_scope 1325 {  parent 1324 inlined_at 1204 }
sil_scope 1326 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBuffer30isMutableAndUniquelyReferencedfT_Sb : $@convention(method) (@inout _ArrayBuffer<Employee>) -> Bool }
sil_scope 1327 {  parent 1322 }
sil_scope 1328 {  parent 1326 inlined_at 1327 }
sil_scope 1329 {  parent 1328 inlined_at 1323 }
sil_scope 1330 {  parent 1329 inlined_at 1204 }
sil_scope 1331 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBuffer20isUniquelyReferencedfT_Sb : $@convention(method) (@inout _ArrayBuffer<Employee>) -> Bool }
sil_scope 1332 {  parent 1326 }
sil_scope 1333 {  parent 1331 inlined_at 1332 }
sil_scope 1334 {  parent 1333 inlined_at 1327 }
sil_scope 1335 {  parent 1334 inlined_at 1323 }
sil_scope 1336 {  parent 1335 inlined_at 1204 }
sil_scope 1337 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferg5countSi : $@convention(method) (@guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 1338 {  parent 1337 }
sil_scope 1339 {  parent 1228 inlined_at 1338 }
sil_scope 1340 {  parent @_TTSg5V4Main8Employee___TFSa9_getCountfT_Si : $@convention(method) (@guaranteed Array<Employee>) -> Int }
sil_scope 1341 {  parent 1340 }
sil_scope 1342 {  parent 1339 inlined_at 1341 }
sil_scope 1343 {  parent 1320 }
sil_scope 1344 {  parent 1342 inlined_at 1343 }
sil_scope 1345 {  parent 1344 inlined_at 1204 }
sil_scope 1346 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Employee>) -> UnsafeMutablePointer<_ArrayBody> }
sil_scope 1347 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerlo6headerx : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Employee>) -> (UnsafePointer<_ArrayBody>, @owned Builtin.NativeObject) }
sil_scope 1348 {  parent 1347 }
sil_scope 1349 {  parent 1346 inlined_at 1348 }
sil_scope 1350 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferg5countSi : $@convention(method) (@guaranteed _ContiguousArrayBuffer<Employee>) -> Int }
sil_scope 1351 {  parent 1337 }
sil_scope 1352 {  parent 1350 inlined_at 1351 }
sil_scope 1353 {  parent 1352 }
sil_scope 1354 {  parent 1349 inlined_at 1353 }
sil_scope 1355 {  parent 1354 inlined_at 1341 }
sil_scope 1356 {  parent 1355 inlined_at 1343 }
sil_scope 1357 {  parent 1356 inlined_at 1204 }
sil_scope 1358 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Employee>) -> UnsafeMutableRawPointer }
sil_scope 1359 {  parent 1346 }
sil_scope 1360 {  parent 1358 inlined_at 1359 }
sil_scope 1361 {  parent 1360 inlined_at 1348 }
sil_scope 1362 {  parent 1361 inlined_at 1353 }
sil_scope 1363 {  parent 1362 inlined_at 1341 }
sil_scope 1364 {  parent 1363 inlined_at 1343 }
sil_scope 1365 {  parent 1364 inlined_at 1204 }
sil_scope 1366 {  parent 1346 }
sil_scope 1367 {  parent 1251 inlined_at 1366 }
sil_scope 1368 {  parent 1367 inlined_at 1348 }
sil_scope 1369 {  parent 1368 inlined_at 1353 }
sil_scope 1370 {  parent 1369 inlined_at 1341 }
sil_scope 1371 {  parent 1370 inlined_at 1343 }
sil_scope 1372 {  parent 1371 inlined_at 1204 }
sil_scope 1373 {  parent 1352 inlined_at 1341 }
sil_scope 1374 {  parent 1373 inlined_at 1343 }
sil_scope 1375 {  parent 1374 inlined_at 1204 }
sil_scope 1376 {  parent @_TTSg5V4Main8Employee___TFSa36_reserveCapacityAssumingUniqueBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> () }
sil_scope 1377 {  parent 1320 }
sil_scope 1378 {  parent 1376 inlined_at 1377 }
sil_scope 1379 {  parent 1378 inlined_at 1204 }
sil_scope 1380 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferg8capacitySi : $@convention(method) (@guaranteed _ContiguousArrayBuffer<Employee>) -> Int }
sil_scope 1381 {  parent 1380 }
sil_scope 1382 {  parent 1349 inlined_at 1381 }
sil_scope 1383 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferg8capacitySi : $@convention(method) (@guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 1384 {  parent 1383 }
sil_scope 1385 {  parent 1382 inlined_at 1384 }
sil_scope 1386 {  parent 1376 }
sil_scope 1387 {  parent 1385 inlined_at 1386 }
sil_scope 1388 {  parent 1387 inlined_at 1377 }
sil_scope 1389 {  parent 1388 inlined_at 1204 }
sil_scope 1390 {  parent 1368 inlined_at 1381 }
sil_scope 1391 {  parent 1390 inlined_at 1384 }
sil_scope 1392 {  parent 1391 inlined_at 1386 }
sil_scope 1393 {  parent 1392 inlined_at 1377 }
sil_scope 1394 {  parent 1393 inlined_at 1204 }
sil_scope 1395 {  parent 1380 inlined_at 1384 }
sil_scope 1396 {  parent 1395 inlined_at 1386 }
sil_scope 1397 {  parent 1396 inlined_at 1377 }
sil_scope 1398 {  parent 1397 inlined_at 1204 }
sil_scope 1399 {  parent @_TTSg5V4Main8Employee___TFSa37_appendElementAssumeUniqueAndCapacityfTSi10newElementx_T_ : $@convention(method) (Int, @owned Employee, @inout Array<Employee>) -> () }
sil_scope 1400 {  parent 1320 }
sil_scope 1401 {  parent 1399 inlined_at 1400 }
sil_scope 1402 {  parent 1401 inlined_at 1204 }
sil_scope 1403 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBuffers5countSi : $@convention(method) (Int, @inout _ArrayBuffer<Employee>) -> () }
sil_scope 1404 {  parent 1399 }
sil_scope 1405 {  parent 1403 inlined_at 1404 }
sil_scope 1406 {  parent 1405 inlined_at 1400 }
sil_scope 1407 {  parent 1406 inlined_at 1204 }
sil_scope 1408 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBuffers5countSi : $@convention(method) (Int, @guaranteed _ContiguousArrayBuffer<Employee>) -> () }
sil_scope 1409 {  parent 1403 }
sil_scope 1410 {  parent 1408 inlined_at 1409 }
sil_scope 1411 {  parent 1410 inlined_at 1404 }
sil_scope 1412 {  parent 1411 inlined_at 1400 }
sil_scope 1413 {  parent 1412 inlined_at 1204 }
sil_scope 1414 {  parent 1408 }
sil_scope 1415 {  parent 1346 inlined_at 1414 }
sil_scope 1416 {  parent 1415 inlined_at 1409 }
sil_scope 1417 {  parent 1416 inlined_at 1404 }
sil_scope 1418 {  parent 1417 inlined_at 1400 }
sil_scope 1419 {  parent 1418 inlined_at 1204 }
sil_scope 1420 {  parent 1360 inlined_at 1414 }
sil_scope 1421 {  parent 1420 inlined_at 1409 }
sil_scope 1422 {  parent 1421 inlined_at 1404 }
sil_scope 1423 {  parent 1422 inlined_at 1400 }
sil_scope 1424 {  parent 1423 inlined_at 1204 }
sil_scope 1425 {  parent 1367 inlined_at 1414 }
sil_scope 1426 {  parent 1425 inlined_at 1409 }
sil_scope 1427 {  parent 1426 inlined_at 1404 }
sil_scope 1428 {  parent 1427 inlined_at 1400 }
sil_scope 1429 {  parent 1428 inlined_at 1204 }
sil_scope 1430 {  parent 1399 }
sil_scope 1431 {  parent 1239 inlined_at 1430 }
sil_scope 1432 {  parent 1431 inlined_at 1400 }
sil_scope 1433 {  parent 1432 inlined_at 1204 }
sil_scope 1434 {  parent 1234 }
sil_scope 1435 {  parent 1358 inlined_at 1434 }
sil_scope 1436 {  parent 1435 inlined_at 1236 }
sil_scope 1437 {  parent 1436 inlined_at 1238 }
sil_scope 1438 {  parent 1437 inlined_at 1430 }
sil_scope 1439 {  parent 1438 inlined_at 1400 }
sil_scope 1440 {  parent 1439 inlined_at 1204 }
sil_scope 1441 {  parent 1247 inlined_at 1430 }
sil_scope 1442 {  parent 1441 inlined_at 1400 }
sil_scope 1443 {  parent 1442 inlined_at 1204 }
sil_scope 1444 {  parent 1256 inlined_at 1430 }
sil_scope 1445 {  parent 1444 inlined_at 1400 }
sil_scope 1446 {  parent 1445 inlined_at 1204 }
sil_scope 1447 {  parent @_TTSg5V4Main8Employee___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (@owned Employee, Int, UnsafeMutablePointer<Employee>) -> () }
sil_scope 1448 {  parent 1399 }
sil_scope 1449 {  parent 1447 inlined_at 1448 }
sil_scope 1450 {  parent 1449 inlined_at 1400 }
sil_scope 1451 {  parent 1450 inlined_at 1204 }
sil_scope 1452 {  parent 1322 }
sil_scope 1453 {  parent 1339 inlined_at 1452 }
sil_scope 1454 {  parent 1453 inlined_at 1323 }
sil_scope 1455 {  parent 1454 inlined_at 1204 }
sil_scope 1456 {  parent 1354 inlined_at 1452 }
sil_scope 1457 {  parent 1456 inlined_at 1323 }
sil_scope 1458 {  parent 1457 inlined_at 1204 }
sil_scope 1459 {  parent 1362 inlined_at 1452 }
sil_scope 1460 {  parent 1459 inlined_at 1323 }
sil_scope 1461 {  parent 1460 inlined_at 1204 }
sil_scope 1462 {  parent 1369 inlined_at 1452 }
sil_scope 1463 {  parent 1462 inlined_at 1323 }
sil_scope 1464 {  parent 1463 inlined_at 1204 }
sil_scope 1465 {  parent 1352 inlined_at 1452 }
sil_scope 1466 {  parent 1465 inlined_at 1323 }
sil_scope 1467 {  parent 1466 inlined_at 1204 }
sil_scope 1468 {  parent 1283 }
sil_scope 1469 {  parent 667 inlined_at 1468 }
sil_scope 1470 {  parent 672 inlined_at 1468 }
sil_scope 1471 {  parent 677 inlined_at 1468 }
sil_scope 1472 {  parent 683 inlined_at 1468 }
sil_scope 1473 {  parent 690 inlined_at 1468 }
sil_scope 1474 {  parent 696 inlined_at 1468 }
sil_scope 1475 {  parent 701 inlined_at 1468 }
sil_scope 1476 {  parent 705 inlined_at 1468 }
sil_scope 1477 {  parent 709 inlined_at 1468 }
sil_scope 1478 {  parent 716 inlined_at 1468 }
sil_scope 1479 {  parent 721 inlined_at 1468 }
sil_scope 1480 {  parent 725 inlined_at 1468 }

// main() -> ()
sil hidden @_TF4Main4mainFT_T_ : $@convention(thin) () -> () {
bb0:
  %0 = string_literal utf8 "33", loc "swift.swift":115:28, scope 468 // users: %4, %2
  %1 = integer_literal $Builtin.Int1, -1, loc "swift.swift":115:28, scope 468 // users: %571, %573, %592, %829, %847, %879, %888, %898, %905, %925, %945, %812, %805, %772, %443, %52, %79, %83, %92, %99, %738, %495, %554, %602, %619, %471, %301, %17, %141, %727, %409, %398, %254, %243, %3, %167, %183
  debug_value %0 : $Builtin.RawPointer, scope 472 // id: %2
  debug_value %1 : $Builtin.Int1, scope 472       // id: %3
  %4 = struct $UnsafeMutableRawPointer (%0 : $Builtin.RawPointer), scope 472 // user: %5
  %5 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %4 : $UnsafeMutableRawPointer, scope 472 // users: %11, %7
  %6 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 472 // users: %740, %731, %734, %411, %402, %405, %256, %247, %250, %21, %24, %11, %8
  debug_value %5 : $Optional<UnsafeMutableRawPointer>, scope 472 // id: %7
  debug_value %6 : $Optional<AnyObject>, scope 472 // id: %8
  %9 = integer_literal $Builtin.Int64, 2, scope 472 // user: %10
  %10 = struct $UInt (%9 : $Builtin.Int64), scope 472 // users: %217, %11
  %11 = struct $_StringCore (%5 : $Optional<UnsafeMutableRawPointer>, %10 : $UInt, %6 : $Optional<AnyObject>), scope 472 // user: %12
  %12 = struct $String (%11 : $_StringCore), scope 472 // users: %26, %13
  debug_value %12 : $String, let, name "string", argno 1, loc "swift.swift":39:24, scope 475 // id: %13
  // function_ref String.components(separatedBy : String) -> [String]
  %14 = function_ref @_TFE10FoundationSS10componentsfT11separatedBySS_GSaSS_ : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":42:22, scope 477 // users: %741, %257, %412, %26
  %15 = string_literal utf8 "/", loc "swift.swift":42:46, scope 477 // users: %737, %253, %408, %18, %16
  debug_value %15 : $Builtin.RawPointer, scope 482 // id: %16
  debug_value %1 : $Builtin.Int1, scope 482       // id: %17
  %18 = struct $UnsafeMutableRawPointer (%15 : $Builtin.RawPointer), scope 482 // user: %19
  %19 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %18 : $UnsafeMutableRawPointer, scope 482 // users: %739, %410, %255, %24, %20
  debug_value %19 : $Optional<UnsafeMutableRawPointer>, scope 482 // id: %20
  debug_value %6 : $Optional<AnyObject>, scope 482 // id: %21
  %22 = integer_literal $Builtin.Int64, 1, scope 482 // users: %130, %592, %833, %835, %879, %945, %954, %57, %59, %103, %105, %554, %619, %626, %201, %173, %171, %360, %689, %1025, %23
  %23 = struct $UInt (%22 : $Builtin.Int64), scope 482 // user: %24
  %24 = struct $_StringCore (%19 : $Optional<UnsafeMutableRawPointer>, %23 : $UInt, %6 : $Optional<AnyObject>), scope 482 // user: %25
  %25 = struct $String (%24 : $_StringCore), scope 482 // users: %741, %412, %257, %26
  %26 = apply %14(%25, %12) : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":42:49, scope 477 // users: %39, %30, %27
  debug_value %26 : $Array<String>, let, name "tokens", loc "swift.swift":42:6, scope 477 // id: %27
  %28 = integer_literal $Builtin.Int64, 0, scope 485 // users: %771, %768, %442, %439, %116, %82, %78, %77, %570, %846, %849, %874, %877, %78, %494, %497, %518, %552, %288, %300, %29
  %29 = struct $Int (%28 : $Builtin.Int64), loc "swift.swift":43:58, scope 477 // users: %743, %259, %414, %289, %291, %293, %297, %304, %306, %310, %311, %30
  %30 = struct $IndexingIterator<Array<String>> (%26 : $Array<String>, %29 : $Int), loc "swift.swift":43:58, scope 477 // users: %35, %33, %31
  debug_value %30 : $IndexingIterator<Array<String>>, scope 488 // id: %31
  %32 = alloc_ref [stack] $_IteratorBox<IndexingIterator<Array<String>>>, scope 490 // users: %153, %150, %149, %148, %154, %36, %34
  debug_value %30 : $IndexingIterator<Array<String>>, scope 492 // id: %33
  %34 = ref_element_addr %32 : $_IteratorBox<IndexingIterator<Array<String>>>, #_IteratorBox._base, scope 492 // users: %144, %38, %37, %35
  store %30 to %34 : $*IndexingIterator<Array<String>>, scope 492 // id: %35
  debug_value %32 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 498 // id: %36
  debug_value_addr %34 : $*IndexingIterator<Array<String>>, scope 506 // id: %37
  %38 = struct_element_addr %34 : $*IndexingIterator<Array<String>>, #IndexingIterator._position, scope 506 // users: %131, %129
  %39 = struct_extract %26 : $Array<String>, #Array._buffer, scope 467 // user: %40
  %40 = struct_extract %39 : $_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 467 // user: %41
  %41 = struct_extract %40 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 467 // users: %42, %44
  %42 = unchecked_ref_cast %41 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 522 // user: %71
  %43 = builtin "onFastPath"() : $(), scope 535
  %44 = ref_to_raw_pointer %41 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 542 // users: %114, %69
  %45 = builtin "onFastPath"() : $(), scope 549
  %46 = metatype $@thick HeapObject.Type, scope 549 // users: %193, %47
  %47 = builtin "sizeof"<HeapObject>(%46 : $@thick HeapObject.Type) : $Builtin.Word, scope 549 // user: %48
  %48 = builtin "zextOrBitCast_Word_Int64"(%47 : $Builtin.Word) : $Builtin.Int64, scope 549 // user: %52
  %49 = metatype $@thick _ArrayBody.Type, scope 549 // users: %90, %50
  %50 = builtin "alignof"<_ArrayBody>(%49 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 549 // user: %51
  %51 = builtin "zextOrBitCast_Word_Int64"(%50 : $Builtin.Word) : $Builtin.Int64, scope 549 // users: %189, %353, %682, %1018, %1067, %59, %52
  %52 = builtin "uadd_with_overflow_Int64"(%48 : $Builtin.Int64, %51 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 549 // users: %54, %53
  %53 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 0, scope 549 // user: %57
  %54 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 1, scope 549 // user: %55
  cond_fail %54 : $Builtin.Int1, scope 549        // id: %55
  %56 = integer_literal $Builtin.Int1, 0, scope 549 // users: %833, %835, %956, %171, %173, %201, %360, %689, %1025, %628, %105, %103, %59, %57
  %57 = builtin "usub_with_overflow_Int64"(%53 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 549 // user: %58
  %58 = tuple_extract %57 : $(Builtin.Int64, Builtin.Int1), 0, scope 549 // user: %63
  %59 = builtin "usub_with_overflow_Int64"(%51 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 549 // user: %60
  %60 = tuple_extract %59 : $(Builtin.Int64, Builtin.Int1), 0, scope 549 // user: %62
  %61 = integer_literal $Builtin.Int64, -1, scope 549 // users: %837, %175, %107, %62
  %62 = builtin "xor_Int64"(%60 : $Builtin.Int64, %61 : $Builtin.Int64) : $Builtin.Int64, scope 549 // user: %63
  %63 = builtin "and_Int64"(%58 : $Builtin.Int64, %62 : $Builtin.Int64) : $Builtin.Int64, scope 549 // user: %64
  %64 = builtin "u_to_s_checked_conversion_Int64"(%63 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 549 // users: %66, %65
  %65 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 0, scope 549 // users: %92, %68
  %66 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 1, scope 549 // user: %67
  cond_fail %66 : $Builtin.Int1, scope 549        // id: %67
  %68 = builtin "truncOrBitCast_Int64_Word"(%65 : $Builtin.Int64) : $Builtin.Word, scope 535 // users: %561, %1005, %933, %973, %760, %431, %214, %280, %373, %702, %1038, %641, %608, %669, %69
  %69 = index_raw_pointer %44 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 535 // user: %70
  %70 = pointer_to_address %69 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 554 // user: %71
  %71 = mark_dependence %70 : $*_ArrayBody on %42 : $Builtin.NativeObject, scope 554 // user: %72
  %72 = struct_element_addr %71 : $*_ArrayBody, #_ArrayBody._storage, scope 554 // user: %73
  %73 = struct_element_addr %72 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 554 // user: %74
  %74 = struct_element_addr %73 : $*Int, #Int._value, scope 554 // user: %75
  %75 = load %74 : $*Builtin.Int64, scope 554     // user: %76
  %76 = builtin "assumeNonNegative_Int64"(%75 : $Builtin.Int64) : $Builtin.Int64, scope 554 // users: %82, %77
  %77 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %76 : $Builtin.Int64) : $Builtin.Int1, scope 557 // user: %85
  %78 = builtin "cmp_sge_Int64"(%28 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 573 // user: %79
  %79 = builtin "xor_Int1"(%78 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 573 // users: %773, %444, %84
  %80 = builtin "onFastPath"() : $(), scope 580
  %81 = builtin "onFastPath"() : $(), scope 586
  %82 = builtin "cmp_slt_Int64"(%28 : $Builtin.Int64, %76 : $Builtin.Int64) : $Builtin.Int1, scope 573 // user: %83
  %83 = builtin "xor_Int1"(%82 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 573 // user: %84
  %84 = builtin "or_Int1"(%79 : $Builtin.Int1, %83 : $Builtin.Int1) : $Builtin.Int1, scope 573 // user: %85
  %85 = builtin "or_Int1"(%77 : $Builtin.Int1, %84 : $Builtin.Int1) : $Builtin.Int1, scope 602 // user: %86
  cond_fail %85 : $Builtin.Int1, scope 602        // id: %86
  %87 = builtin "onFastPath"() : $(), scope 602
  %88 = builtin "onFastPath"() : $(), scope 609
  %89 = builtin "onFastPath"() : $(), scope 616
  %90 = builtin "sizeof"<_ArrayBody>(%49 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 609 // user: %91
  %91 = builtin "zextOrBitCast_Word_Int64"(%90 : $Builtin.Word) : $Builtin.Int64, scope 609 // user: %92
  %92 = builtin "sadd_with_overflow_Int64"(%65 : $Builtin.Int64, %91 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 609 // users: %94, %93
  %93 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 0, scope 609 // users: %829, %167, %99
  %94 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 1, scope 609 // user: %95
  cond_fail %94 : $Builtin.Int1, scope 609        // id: %95
  %96 = metatype $@thick String.Type, scope 609   // user: %97
  %97 = builtin "alignof"<String>(%96 : $@thick String.Type) : $Builtin.Word, scope 609 // user: %98
  %98 = builtin "zextOrBitCast_Word_Int64"(%97 : $Builtin.Word) : $Builtin.Int64, scope 609 // users: %105, %99
  %99 = builtin "uadd_with_overflow_Int64"(%93 : $Builtin.Int64, %98 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 609 // users: %101, %100
  %100 = tuple_extract %99 : $(Builtin.Int64, Builtin.Int1), 0, scope 609 // user: %103
  %101 = tuple_extract %99 : $(Builtin.Int64, Builtin.Int1), 1, scope 609 // user: %102
  cond_fail %101 : $Builtin.Int1, scope 609       // id: %102
  %103 = builtin "usub_with_overflow_Int64"(%100 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 609 // user: %104
  %104 = tuple_extract %103 : $(Builtin.Int64, Builtin.Int1), 0, scope 609 // user: %108
  %105 = builtin "usub_with_overflow_Int64"(%98 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 609 // user: %106
  %106 = tuple_extract %105 : $(Builtin.Int64, Builtin.Int1), 0, scope 609 // user: %107
  %107 = builtin "xor_Int64"(%106 : $Builtin.Int64, %61 : $Builtin.Int64) : $Builtin.Int64, scope 609 // user: %108
  %108 = builtin "and_Int64"(%104 : $Builtin.Int64, %107 : $Builtin.Int64) : $Builtin.Int64, scope 609 // user: %109
  %109 = builtin "u_to_s_checked_conversion_Int64"(%108 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 609 // users: %111, %110
  %110 = tuple_extract %109 : $(Builtin.Int64, Builtin.Int1), 0, scope 609 // user: %113
  %111 = tuple_extract %109 : $(Builtin.Int64, Builtin.Int1), 1, scope 609 // user: %112
  cond_fail %111 : $Builtin.Int1, scope 609       // id: %112
  %113 = builtin "truncOrBitCast_Int64_Word"(%110 : $Builtin.Int64) : $Builtin.Word, scope 602 // users: %577, %779, %450, %315, %650, %114
  %114 = index_raw_pointer %44 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 602 // user: %115
  %115 = pointer_to_address %114 : $Builtin.RawPointer to [strict] $*String, scope 622 // user: %117
  %116 = builtin "truncOrBitCast_Int64_Word"(%28 : $Builtin.Int64) : $Builtin.Word, scope 622 // users: %781, %452, %117
  %117 = index_addr %115 : $*String, %116 : $Builtin.Word, scope 622 // user: %118
  %118 = struct_element_addr %117 : $*String, #String._core, scope 622 // users: %124, %121, %119
  %119 = struct_element_addr %118 : $*_StringCore, #_StringCore._baseAddress, scope 622 // user: %120
  %120 = load %119 : $*Optional<UnsafeMutableRawPointer>, scope 622 // user: %127
  %121 = struct_element_addr %118 : $*_StringCore, #_StringCore._countAndFlags, scope 622 // user: %122
  %122 = struct_element_addr %121 : $*UInt, #UInt._value, scope 622 // user: %123
  %123 = load %122 : $*Builtin.Int64, scope 622   // user: %126
  %124 = struct_element_addr %118 : $*_StringCore, #_StringCore._owner, scope 622 // user: %125
  %125 = load %124 : $*Optional<AnyObject>, scope 622 // users: %143, %138, %137, %127
  %126 = struct $UInt (%123 : $Builtin.Int64), scope 625 // user: %127
  %127 = struct $_StringCore (%120 : $Optional<UnsafeMutableRawPointer>, %126 : $UInt, %125 : $Optional<AnyObject>), scope 625 // user: %128
  %128 = struct $String (%127 : $_StringCore), scope 625 // users: %132, %139
  debug_value_addr %38 : $*Int, scope 632         // id: %129
  %130 = struct $Int (%22 : $Builtin.Int64), scope 632 // users: %794, %465, %157, %161, %347, %344, %508, %505, %869, %866, %329, %207, %208, %209, %210, %215, %216, %217, %366, %367, %368, %369, %374, %375, %695, %696, %697, %698, %703, %704, %1031, %1032, %1033, %1034, %1039, %1040, %131
  store %130 to %38 : $*Int, scope 632            // id: %131
  debug_value %128 : $String, let, name "x", loc "swift.swift":69:7, scope 634 // id: %132
  // function_ref Int.init(String, radix : Int) -> Int?
  %133 = function_ref @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:10, scope 634 // users: %810, %903, %469, %139
  %134 = metatype $@thin Int.Type, loc "swift.swift":70:10, scope 634 // users: %810, %903, %469, %139
  %135 = integer_literal $Builtin.Int64, 10, scope 636 // user: %136
  %136 = struct $Int (%135 : $Builtin.Int64), scope 636 // users: %810, %903, %469, %139
  retain_value %125 : $Optional<AnyObject>, scope 467 // id: %137
  retain_value %125 : $Optional<AnyObject>, scope 467 // id: %138
  %139 = apply %133(%128, %136, %134) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 634 // users: %140, %155
  switch_enum %139 : $Optional<Int>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":70:16, scope 634 // id: %140

bb1:                                              // Preds: bb0
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":70:16, scope 634 // id: %141
  unreachable, loc "swift.swift":70:16, scope 634 // id: %142

bb2:                                              // Preds: bb0
  release_value %125 : $Optional<AnyObject>, scope 467 // id: %143
  %144 = struct_element_addr %34 : $*IndexingIterator<Array<String>>, #IndexingIterator._elements, scope 506 // user: %145
  %145 = struct_element_addr %144 : $*Array<String>, #Array._buffer, scope 506 // user: %146
  %146 = struct_element_addr %145 : $*_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 506 // user: %147
  %147 = struct_element_addr %146 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 506 // user: %151
  set_deallocating %32 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %148
  debug_value %32 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 639 // id: %149
  debug_value %32 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 643 // id: %150
  %151 = load %147 : $*Builtin.BridgeObject, scope 643 // user: %152
  strong_release %151 : $Builtin.BridgeObject, scope 467 // id: %152
  dealloc_ref %32 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 639 // id: %153
  dealloc_ref [stack] %32 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %154
  %155 = unchecked_enum_data %139 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 634 // users: %235, %156
  debug_value %155 : $Int, let, name "i", loc "swift.swift":115:6, scope 468 // id: %156
  debug_value %130 : $Int, scope 646              // id: %157
  %158 = metatype $@thick _ContiguousArrayStorage<Any>.Type, scope 646 // users: %867, %506, %345, %159
  %159 = init_existential_metatype %158 : $@thick _ContiguousArrayStorage<Any>.Type, $@thick AnyObject.Type, scope 646 // users: %204, %160
  debug_value %159 : $@thick AnyObject.Type, scope 650 // id: %160
  debug_value %130 : $Int, scope 650              // id: %161
  %162 = builtin "onFastPath"() : $(), scope 655
  %163 = builtin "onFastPath"() : $(), scope 661
  %164 = metatype $@thick Any.Protocol, scope 655 // users: %181, %165
  %165 = builtin "alignof"<Any>(%164 : $@thick Any.Protocol) : $Builtin.Word, scope 655 // user: %166
  %166 = builtin "zextOrBitCast_Word_Int64"(%165 : $Builtin.Word) : $Builtin.Int64, scope 655 // users: %1019, %683, %354, %191, %189, %173, %167
  %167 = builtin "uadd_with_overflow_Int64"(%93 : $Builtin.Int64, %166 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 655 // users: %169, %168
  %168 = tuple_extract %167 : $(Builtin.Int64, Builtin.Int1), 0, scope 655 // user: %171
  %169 = tuple_extract %167 : $(Builtin.Int64, Builtin.Int1), 1, scope 655 // user: %170
  cond_fail %169 : $Builtin.Int1, scope 655       // id: %170
  %171 = builtin "usub_with_overflow_Int64"(%168 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 655 // user: %172
  %172 = tuple_extract %171 : $(Builtin.Int64, Builtin.Int1), 0, scope 655 // user: %176
  %173 = builtin "usub_with_overflow_Int64"(%166 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 655 // user: %174
  %174 = tuple_extract %173 : $(Builtin.Int64, Builtin.Int1), 0, scope 655 // user: %175
  %175 = builtin "xor_Int64"(%174 : $Builtin.Int64, %61 : $Builtin.Int64) : $Builtin.Int64, scope 655 // user: %176
  %176 = builtin "and_Int64"(%172 : $Builtin.Int64, %175 : $Builtin.Int64) : $Builtin.Int64, scope 655 // user: %177
  %177 = builtin "u_to_s_checked_conversion_Int64"(%176 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 655 // users: %179, %178
  %178 = tuple_extract %177 : $(Builtin.Int64, Builtin.Int1), 0, scope 655 // users: %230, %183
  %179 = tuple_extract %177 : $(Builtin.Int64, Builtin.Int1), 1, scope 655 // user: %180
  cond_fail %179 : $Builtin.Int1, scope 655       // id: %180
  %181 = builtin "strideof_nonzero"<Any>(%164 : $@thick Any.Protocol) : $Builtin.Word, scope 650 // user: %182
  %182 = builtin "zextOrBitCast_Word_Int64"(%181 : $Builtin.Word) : $Builtin.Int64, scope 650 // user: %183
  %183 = builtin "sadd_with_overflow_Int64"(%178 : $Builtin.Int64, %182 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 650 // users: %185, %184
  %184 = tuple_extract %183 : $(Builtin.Int64, Builtin.Int1), 0, scope 650 // user: %187
  %185 = tuple_extract %183 : $(Builtin.Int64, Builtin.Int1), 1, scope 650 // user: %186
  cond_fail %185 : $Builtin.Int1, scope 650       // id: %186
  %187 = struct $Int (%184 : $Builtin.Int64), scope 650 // users: %872, %1028, %511, %692, %350, %363, %204, %188
  debug_value %187 : $Int, scope 650              // id: %188
  %189 = builtin "cmp_sge_Int64"(%166 : $Builtin.Int64, %51 : $Builtin.Int64) : $Builtin.Int1, scope 666 // users: %873, %512, %351, %190
  cond_br %189, bb3, bb8, scope 666               // id: %190

bb3:                                              // Preds: bb2
  br bb4(%166 : $Builtin.Int64), scope 666        // id: %191

// %192                                           // users: %197, %195
bb4(%192 : $Builtin.Int64):                       // Preds: bb8 bb3
  %193 = builtin "alignof"<HeapObject>(%46 : $@thick HeapObject.Type) : $Builtin.Word, scope 666 // user: %194
  %194 = builtin "zextOrBitCast_Word_Int64"(%193 : $Builtin.Word) : $Builtin.Int64, scope 666 // users: %1021, %1066, %685, %1017, %356, %681, %352, %195
  %195 = builtin "cmp_sge_Int64"(%192 : $Builtin.Int64, %194 : $Builtin.Int64) : $Builtin.Int1, scope 666 // user: %196
  cond_br %195, bb5, bb7, scope 666               // id: %196

bb5:                                              // Preds: bb4
  br bb6(%192 : $Builtin.Int64), scope 666        // id: %197

// %198                                           // user: %201
bb6(%198 : $Builtin.Int64):                       // Preds: bb7 bb5
  // function_ref print([Any], separator : String, terminator : String) -> ()
  %199 = function_ref @_TFs5printFTGSaP__9separatorSS10terminatorSS_T_ : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> (), loc "swift.swift":116:2, scope 468 // users: %1060, %724, %395, %240
  // function_ref swift_bufferAllocate
  %200 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 650 // users: %1028, %692, %363, %204
  %201 = builtin "ssub_with_overflow_Int64"(%198 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 666 // user: %202
  %202 = tuple_extract %201 : $(Builtin.Int64, Builtin.Int1), 0, scope 666 // user: %203
  %203 = struct $Int (%202 : $Builtin.Int64), scope 666 // user: %204
  %204 = apply %200(%159, %187, %203) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 650 // users: %222, %212, %206, %205
  debug_value %204 : $AnyObject, scope 650        // id: %205
  debug_value %204 : $AnyObject, scope 669        // id: %206
  debug_value %130 : $Int, scope 669              // id: %207
  debug_value %130 : $Int, scope 673              // id: %208
  debug_value %130 : $Int, scope 678              // id: %209
  debug_value %130 : $Int, scope 678              // id: %210
  %211 = builtin "onFastPath"() : $(), scope 684
  %212 = ref_to_raw_pointer %204 : $AnyObject to $Builtin.RawPointer, scope 691 // users: %231, %214
  %213 = builtin "onFastPath"() : $(), scope 697
  %214 = index_raw_pointer %212 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 684 // user: %220
  debug_value %130 : $Int, scope 678              // id: %215
  debug_value %130 : $Int, scope 678              // id: %216
  %217 = struct $_SwiftArrayBodyStorage (%130 : $Int, %10 : $UInt), scope 678 // user: %218
  %218 = struct $_ArrayBody (%217 : $_SwiftArrayBodyStorage), scope 678 // users: %1041, %1043, %705, %707, %376, %378, %221, %219
  debug_value %218 : $_ArrayBody, scope 702       // id: %219
  %220 = pointer_to_address %214 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 702 // user: %221
  store %218 to %220 : $*_ArrayBody, scope 702    // id: %221
  %222 = unchecked_ref_cast %204 : $AnyObject to $Builtin.BridgeObject, scope 673 // user: %223
  %223 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%222 : $Builtin.BridgeObject), scope 706 // user: %224
  %224 = struct $_ArrayBuffer<Any> (%223 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 706 // users: %226, %225
  debug_value %224 : $_ArrayBuffer<Any>, scope 710 // id: %225
  %226 = struct $Array<Any> (%224 : $_ArrayBuffer<Any>), scope 710 // users: %232, %240
  %227 = builtin "onFastPath"() : $(), scope 717
  %228 = builtin "onFastPath"() : $(), scope 722
  %229 = builtin "onFastPath"() : $(), scope 726
  %230 = builtin "truncOrBitCast_Int64_Word"(%178 : $Builtin.Int64) : $Builtin.Word, scope 717 // users: %1052, %716, %387, %231
  %231 = index_raw_pointer %212 : $Builtin.RawPointer, %230 : $Builtin.Word, scope 717 // user: %233
  debug_value %226 : $Array<Any>, scope 646       // id: %232
  %233 = pointer_to_address %231 : $Builtin.RawPointer to [strict] $*Any, loc "swift.swift":116:8, scope 468 // user: %234
  %234 = init_existential_addr %233 : $*Any, $Int, loc "swift.swift":116:8, scope 468 // user: %235
  store %155 to %234 : $*Int, loc "swift.swift":116:8, scope 468 // id: %235
  // function_ref (print([Any], separator : String, terminator : String) -> ()).(default argument 1)
  %236 = function_ref @_TIFs5printFTGSaP__9separatorSS10terminatorSS_T_A0_ : $@convention(thin) () -> @owned String, loc "swift.swift":116:8, scope 468 // users: %1058, %722, %393, %237
  %237 = apply %236() : $@convention(thin) () -> @owned String, loc "swift.swift":116:8, scope 468 // user: %240
  // function_ref (print([Any], separator : String, terminator : String) -> ()).(default argument 2)
  %238 = function_ref @_TIFs5printFTGSaP__9separatorSS10terminatorSS_T_A1_ : $@convention(thin) () -> @owned String, loc "swift.swift":116:8, scope 468 // users: %1059, %723, %394, %239
  %239 = apply %238() : $@convention(thin) () -> @owned String, loc "swift.swift":116:8, scope 468 // user: %240
  %240 = apply %199(%226, %237, %239) : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> (), loc "swift.swift":116:9, scope 468
  %241 = string_literal utf8 "abc", loc "swift.swift":117:31, scope 468 // users: %244, %242
  debug_value %241 : $Builtin.RawPointer, scope 730 // id: %242
  debug_value %1 : $Builtin.Int1, scope 730       // id: %243
  %244 = struct $UnsafeMutableRawPointer (%241 : $Builtin.RawPointer), scope 730 // user: %245
  %245 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %244 : $UnsafeMutableRawPointer, scope 730 // users: %250, %246
  debug_value %245 : $Optional<UnsafeMutableRawPointer>, scope 730 // id: %246
  debug_value %6 : $Optional<AnyObject>, scope 730 // id: %247
  %248 = integer_literal $Builtin.Int64, 3, scope 730 // user: %249
  %249 = struct $UInt (%248 : $Builtin.Int64), scope 730 // user: %250
  %250 = struct $_StringCore (%245 : $Optional<UnsafeMutableRawPointer>, %249 : $UInt, %6 : $Optional<AnyObject>), scope 730 // user: %251
  %251 = struct $String (%250 : $_StringCore), scope 730 // users: %252, %257
  debug_value %251 : $String, let, name "string", argno 1, loc "swift.swift":39:24, scope 733 // id: %252
  debug_value %15 : $Builtin.RawPointer, scope 739 // id: %253
  debug_value %1 : $Builtin.Int1, scope 739       // id: %254
  debug_value %19 : $Optional<UnsafeMutableRawPointer>, scope 739 // id: %255
  debug_value %6 : $Optional<AnyObject>, scope 739 // id: %256
  %257 = apply %14(%25, %251) : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":42:49, scope 735 // users: %305, %292, %270, %269, %268, %290, %259, %258
  debug_value %257 : $Array<String>, let, name "tokens", loc "swift.swift":42:6, scope 735 // id: %258
  %259 = struct $IndexingIterator<Array<String>> (%257 : $Array<String>, %29 : $Int), loc "swift.swift":43:58, scope 735 // users: %264, %262, %260
  debug_value %259 : $IndexingIterator<Array<String>>, scope 742 // id: %260
  %261 = alloc_ref [stack] $_IteratorBox<IndexingIterator<Array<String>>>, scope 744 // users: %340, %332, %331, %330, %341, %265, %263
  debug_value %259 : $IndexingIterator<Array<String>>, scope 746 // id: %262
  %263 = ref_element_addr %261 : $_IteratorBox<IndexingIterator<Array<String>>>, #_IteratorBox._base, scope 746 // users: %333, %266, %267, %264
  store %259 to %263 : $*IndexingIterator<Array<String>>, scope 746 // id: %264
  debug_value %261 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 752 // id: %265
  debug_value_addr %263 : $*IndexingIterator<Array<String>>, scope 759 // id: %266
  %267 = struct_element_addr %263 : $*IndexingIterator<Array<String>>, #IndexingIterator._position, scope 759 // users: %329, %328
  debug_value %257 : $Array<String>, scope 768    // id: %268
  debug_value %257 : $Array<String>, scope 770    // id: %269
  %270 = struct_extract %257 : $Array<String>, #Array._buffer, scope 770 // users: %307, %308, %294, %295, %274, %273, %271
  %271 = struct_extract %270 : $_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 770 // users: %309, %296, %275, %272
  %272 = struct_extract %271 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 770 // users: %278, %276
  debug_value %270 : $_ArrayBuffer<String>, scope 772 // id: %273
  debug_value %270 : $_ArrayBuffer<String>, scope 773 // id: %274
  debug_value %271 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 773 // id: %275
  %276 = unchecked_ref_cast %272 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 773 // user: %282
  %277 = builtin "onFastPath"() : $(), scope 774
  %278 = ref_to_raw_pointer %272 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 775 // users: %315, %280
  %279 = builtin "onFastPath"() : $(), scope 776
  %280 = index_raw_pointer %278 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 774 // user: %281
  %281 = pointer_to_address %280 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 777 // user: %282
  %282 = mark_dependence %281 : $*_ArrayBody on %276 : $Builtin.NativeObject, scope 777 // user: %283
  %283 = struct_element_addr %282 : $*_ArrayBody, #_ArrayBody._storage, scope 777 // user: %284
  %284 = struct_element_addr %283 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 777 // user: %285
  %285 = struct_element_addr %284 : $*Int, #Int._value, scope 777 // user: %286
  %286 = load %285 : $*Builtin.Int64, scope 777   // user: %287
  %287 = builtin "assumeNonNegative_Int64"(%286 : $Builtin.Int64) : $Builtin.Int64, scope 777 // users: %300, %288
  %288 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %287 : $Builtin.Int64) : $Builtin.Int1, scope 782 // user: %302
  debug_value %29 : $Int, scope 791               // id: %289
  debug_value %257 : $Array<String>, scope 791    // id: %290
  debug_value %29 : $Int, scope 793               // id: %291
  debug_value %257 : $Array<String>, scope 793    // id: %292
  debug_value %29 : $Int, scope 795               // id: %293
  debug_value %270 : $_ArrayBuffer<String>, scope 795 // id: %294
  debug_value %270 : $_ArrayBuffer<String>, scope 799 // id: %295
  debug_value %271 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 799 // id: %296
  debug_value %29 : $Int, scope 800               // id: %297
  %298 = builtin "onFastPath"() : $(), scope 801
  %299 = builtin "onFastPath"() : $(), scope 802
  %300 = builtin "cmp_slt_Int64"(%28 : $Builtin.Int64, %287 : $Builtin.Int64) : $Builtin.Int1, scope 800 // user: %301
  %301 = builtin "xor_Int1"(%300 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 800 // user: %302
  %302 = builtin "or_Int1"(%288 : $Builtin.Int1, %301 : $Builtin.Int1) : $Builtin.Int1, scope 804 // user: %303
  cond_fail %302 : $Builtin.Int1, scope 804       // id: %303
  debug_value %29 : $Int, scope 804               // id: %304
  debug_value %257 : $Array<String>, scope 804    // id: %305
  debug_value %29 : $Int, scope 806               // id: %306
  debug_value %270 : $_ArrayBuffer<String>, scope 806 // id: %307
  debug_value %270 : $_ArrayBuffer<String>, scope 811 // id: %308
  debug_value %271 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 811 // id: %309
  debug_value %29 : $Int, scope 814               // id: %310
  debug_value %29 : $Int, scope 815               // id: %311
  %312 = builtin "onFastPath"() : $(), scope 816
  %313 = builtin "onFastPath"() : $(), scope 817
  %314 = builtin "onFastPath"() : $(), scope 818
  %315 = index_raw_pointer %278 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 816 // user: %316
  %316 = pointer_to_address %315 : $Builtin.RawPointer to [strict] $*String, scope 815 // user: %317
  %317 = struct_element_addr %316 : $*String, #String._core, scope 815 // users: %323, %320, %318
  %318 = struct_element_addr %317 : $*_StringCore, #_StringCore._baseAddress, scope 815 // user: %319
  %319 = load %318 : $*Optional<UnsafeMutableRawPointer>, scope 815 // user: %326
  %320 = struct_element_addr %317 : $*_StringCore, #_StringCore._countAndFlags, scope 815 // user: %321
  %321 = struct_element_addr %320 : $*UInt, #UInt._value, scope 815 // user: %322
  %322 = load %321 : $*Builtin.Int64, scope 815   // user: %325
  %323 = struct_element_addr %317 : $*_StringCore, #_StringCore._owner, scope 815 // user: %324
  %324 = load %323 : $*Optional<AnyObject>, scope 815 // users: %1063, %392, %338, %326
  %325 = struct $UInt (%322 : $Builtin.Int64), scope 804 // user: %326
  %326 = struct $_StringCore (%319 : $Optional<UnsafeMutableRawPointer>, %325 : $UInt, %324 : $Optional<AnyObject>), scope 804 // user: %327
  %327 = struct $String (%326 : $_StringCore), scope 804 // users: %391, %343, %342
  debug_value_addr %267 : $*Int, scope 827        // id: %328
  store %130 to %267 : $*Int, scope 827           // id: %329
  set_deallocating %261 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %330
  debug_value %261 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 829 // id: %331
  debug_value %261 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 830 // id: %332
  %333 = struct_element_addr %263 : $*IndexingIterator<Array<String>>, #IndexingIterator._elements, scope 830 // user: %334
  %334 = struct_element_addr %333 : $*Array<String>, #Array._buffer, scope 830 // user: %335
  %335 = struct_element_addr %334 : $*_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 830 // user: %336
  %336 = struct_element_addr %335 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 830 // user: %337
  %337 = load %336 : $*Builtin.BridgeObject, scope 830 // user: %339
  retain_value %324 : $Optional<AnyObject>, scope 467 // id: %338
  strong_release %337 : $Builtin.BridgeObject, scope 467 // id: %339
  dealloc_ref %261 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 829 // id: %340
  dealloc_ref [stack] %261 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %341
  debug_value %327 : $String, let, name "x", loc "swift.swift":76:7, scope 832 // id: %342
  debug_value %327 : $String, let, name "s", loc "swift.swift":117:6, scope 468 // id: %343
  debug_value %130 : $Int, scope 834              // id: %344
  %345 = init_existential_metatype %158 : $@thick _ContiguousArrayStorage<Any>.Type, $@thick AnyObject.Type, scope 834 // users: %363, %346
  debug_value %345 : $@thick AnyObject.Type, scope 835 // id: %346
  debug_value %130 : $Int, scope 835              // id: %347
  %348 = builtin "onFastPath"() : $(), scope 836
  %349 = builtin "onFastPath"() : $(), scope 837
  debug_value %187 : $Int, scope 835              // id: %350
  cond_br %189, bb9, bb28, scope 838              // id: %351

bb7:                                              // Preds: bb4
  br bb6(%194 : $Builtin.Int64), scope 666        // id: %352

bb8:                                              // Preds: bb2
  br bb4(%51 : $Builtin.Int64), scope 666         // id: %353

bb9:                                              // Preds: bb6
  br bb10(%166 : $Builtin.Int64), scope 838       // id: %354

// %355                                           // users: %358, %356
bb10(%355 : $Builtin.Int64):                      // Preds: bb28 bb9
  %356 = builtin "cmp_sge_Int64"(%355 : $Builtin.Int64, %194 : $Builtin.Int64) : $Builtin.Int1, scope 838 // user: %357
  cond_br %356, bb11, bb27, scope 838             // id: %357

bb11:                                             // Preds: bb10
  br bb12(%355 : $Builtin.Int64), scope 838       // id: %358

// %359                                           // user: %360
bb12(%359 : $Builtin.Int64):                      // Preds: bb27 bb11
  %360 = builtin "ssub_with_overflow_Int64"(%359 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 838 // user: %361
  %361 = tuple_extract %360 : $(Builtin.Int64, Builtin.Int1), 0, scope 838 // user: %362
  %362 = struct $Int (%361 : $Builtin.Int64), scope 838 // user: %363
  %363 = apply %200(%345, %187, %362) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 835 // users: %379, %371, %365, %364
  debug_value %363 : $AnyObject, scope 835        // id: %364
  debug_value %363 : $AnyObject, scope 840        // id: %365
  debug_value %130 : $Int, scope 840              // id: %366
  debug_value %130 : $Int, scope 841              // id: %367
  debug_value %130 : $Int, scope 842              // id: %368
  debug_value %130 : $Int, scope 842              // id: %369
  %370 = builtin "onFastPath"() : $(), scope 843
  %371 = ref_to_raw_pointer %363 : $AnyObject to $Builtin.RawPointer, scope 844 // users: %387, %373
  %372 = builtin "onFastPath"() : $(), scope 845
  %373 = index_raw_pointer %371 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 843 // user: %377
  debug_value %130 : $Int, scope 842              // id: %374
  debug_value %130 : $Int, scope 842              // id: %375
  debug_value %218 : $_ArrayBody, scope 846       // id: %376
  %377 = pointer_to_address %373 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 846 // user: %378
  store %218 to %377 : $*_ArrayBody, scope 846    // id: %378
  %379 = unchecked_ref_cast %363 : $AnyObject to $Builtin.BridgeObject, scope 841 // user: %380
  %380 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%379 : $Builtin.BridgeObject), scope 847 // user: %381
  %381 = struct $_ArrayBuffer<Any> (%380 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 847 // users: %383, %382
  debug_value %381 : $_ArrayBuffer<Any>, scope 848 // id: %382
  %383 = struct $Array<Any> (%381 : $_ArrayBuffer<Any>), scope 848 // users: %388, %395
  %384 = builtin "onFastPath"() : $(), scope 849
  %385 = builtin "onFastPath"() : $(), scope 850
  %386 = builtin "onFastPath"() : $(), scope 851
  %387 = index_raw_pointer %371 : $Builtin.RawPointer, %230 : $Builtin.Word, scope 849 // user: %389
  debug_value %383 : $Array<Any>, scope 834       // id: %388
  %389 = pointer_to_address %387 : $Builtin.RawPointer to [strict] $*Any, loc "swift.swift":118:8, scope 468 // user: %390
  %390 = init_existential_addr %389 : $*Any, $String, loc "swift.swift":118:8, scope 468 // user: %391
  store %327 to %390 : $*String, loc "swift.swift":118:8, scope 468 // id: %391
  retain_value %324 : $Optional<AnyObject>, scope 467 // id: %392
  %393 = apply %236() : $@convention(thin) () -> @owned String, loc "swift.swift":118:8, scope 468 // user: %395
  %394 = apply %238() : $@convention(thin) () -> @owned String, loc "swift.swift":118:8, scope 468 // user: %395
  %395 = apply %199(%383, %393, %394) : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> (), loc "swift.swift":118:9, scope 468
  %396 = string_literal utf8 "3/apple/banana/cherry", loc "swift.swift":120:38, scope 468 // users: %399, %397
  debug_value %396 : $Builtin.RawPointer, scope 855 // id: %397
  debug_value %1 : $Builtin.Int1, scope 855       // id: %398
  %399 = struct $UnsafeMutableRawPointer (%396 : $Builtin.RawPointer), scope 855 // user: %400
  %400 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %399 : $UnsafeMutableRawPointer, scope 855 // users: %405, %401
  debug_value %400 : $Optional<UnsafeMutableRawPointer>, scope 855 // id: %401
  debug_value %6 : $Optional<AnyObject>, scope 855 // id: %402
  %403 = integer_literal $Builtin.Int64, 21, scope 855 // user: %404
  %404 = struct $UInt (%403 : $Builtin.Int64), scope 855 // user: %405
  %405 = struct $_StringCore (%400 : $Optional<UnsafeMutableRawPointer>, %404 : $UInt, %6 : $Optional<AnyObject>), scope 855 // user: %406
  %406 = struct $String (%405 : $_StringCore), scope 855 // users: %407, %412
  debug_value %406 : $String, let, name "string", argno 1, loc "swift.swift":53:29, scope 858 // id: %407
  debug_value %15 : $Builtin.RawPointer, scope 864 // id: %408
  debug_value %1 : $Builtin.Int1, scope 864       // id: %409
  debug_value %19 : $Optional<UnsafeMutableRawPointer>, scope 864 // id: %410
  debug_value %6 : $Optional<AnyObject>, scope 864 // id: %411
  %412 = apply %14(%25, %406) : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":56:49, scope 860 // users: %424, %414, %413
  debug_value %412 : $Array<String>, let, name "tokens", loc "swift.swift":56:6, scope 860 // id: %413
  %414 = struct $IndexingIterator<Array<String>> (%412 : $Array<String>, %29 : $Int), loc "swift.swift":57:58, scope 860 // users: %419, %417, %415
  debug_value %414 : $IndexingIterator<Array<String>>, scope 867 // id: %415
  %416 = alloc_ref $_IteratorBox<IndexingIterator<Array<String>>>, scope 869 // users: %661, %500, %521, %421, %418
  debug_value %414 : $IndexingIterator<Array<String>>, scope 871 // id: %417
  %418 = ref_element_addr %416 : $_IteratorBox<IndexingIterator<Array<String>>>, #_IteratorBox._base, scope 871 // users: %522, %422, %423, %514, %419
  store %414 to %418 : $*IndexingIterator<Array<String>>, scope 871 // id: %419
  %420 = alloc_stack $Array<String>, var, name "ret", loc "swift.swift":86:7, scope 880 // users: %679, %545, %632, %542, %533, %532, %531, %503, %492
  debug_value %416 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 886 // id: %421
  debug_value_addr %418 : $*IndexingIterator<Array<String>>, scope 892 // id: %422
  %423 = struct_element_addr %418 : $*IndexingIterator<Array<String>>, #IndexingIterator._position, scope 892 // users: %530, %597, %465, %464, %513
  %424 = struct_extract %412 : $Array<String>, #Array._buffer, scope 467 // user: %425
  %425 = struct_extract %424 : $_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 467 // user: %426
  %426 = struct_extract %425 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 467 // users: %427, %429
  %427 = unchecked_ref_cast %426 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 894 // user: %433
  %428 = builtin "onFastPath"() : $(), scope 896
  %429 = ref_to_raw_pointer %426 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 898 // users: %450, %431
  %430 = builtin "onFastPath"() : $(), scope 900
  %431 = index_raw_pointer %429 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 896 // user: %432
  %432 = pointer_to_address %431 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 902 // user: %433
  %433 = mark_dependence %432 : $*_ArrayBody on %427 : $Builtin.NativeObject, scope 902 // user: %434
  %434 = struct_element_addr %433 : $*_ArrayBody, #_ArrayBody._storage, scope 902 // user: %435
  %435 = struct_element_addr %434 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 902 // user: %436
  %436 = struct_element_addr %435 : $*Int, #Int._value, scope 902 // user: %437
  %437 = load %436 : $*Builtin.Int64, scope 902   // user: %438
  %438 = builtin "assumeNonNegative_Int64"(%437 : $Builtin.Int64) : $Builtin.Int64, scope 902 // users: %442, %439
  %439 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %438 : $Builtin.Int64) : $Builtin.Int1, scope 904 // user: %445
  %440 = builtin "onFastPath"() : $(), scope 906
  %441 = builtin "onFastPath"() : $(), scope 908
  %442 = builtin "cmp_slt_Int64"(%28 : $Builtin.Int64, %438 : $Builtin.Int64) : $Builtin.Int1, scope 910 // user: %443
  %443 = builtin "xor_Int1"(%442 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 910 // user: %444
  %444 = builtin "or_Int1"(%79 : $Builtin.Int1, %443 : $Builtin.Int1) : $Builtin.Int1, scope 910 // user: %445
  %445 = builtin "or_Int1"(%439 : $Builtin.Int1, %444 : $Builtin.Int1) : $Builtin.Int1, scope 912 // user: %446
  cond_fail %445 : $Builtin.Int1, scope 912       // id: %446
  %447 = builtin "onFastPath"() : $(), scope 912
  %448 = builtin "onFastPath"() : $(), scope 914
  %449 = builtin "onFastPath"() : $(), scope 916
  %450 = index_raw_pointer %429 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 912 // user: %451
  %451 = pointer_to_address %450 : $Builtin.RawPointer to [strict] $*String, scope 918 // user: %452
  %452 = index_addr %451 : $*String, %116 : $Builtin.Word, scope 918 // user: %453
  %453 = struct_element_addr %452 : $*String, #String._core, scope 918 // users: %459, %456, %454
  %454 = struct_element_addr %453 : $*_StringCore, #_StringCore._baseAddress, scope 918 // user: %455
  %455 = load %454 : $*Optional<UnsafeMutableRawPointer>, scope 918 // user: %462
  %456 = struct_element_addr %453 : $*_StringCore, #_StringCore._countAndFlags, scope 918 // user: %457
  %457 = struct_element_addr %456 : $*UInt, #UInt._value, scope 918 // user: %458
  %458 = load %457 : $*Builtin.Int64, scope 918   // user: %461
  %459 = struct_element_addr %453 : $*_StringCore, #_StringCore._owner, scope 918 // user: %460
  %460 = load %459 : $*Optional<AnyObject>, scope 918 // users: %473, %468, %467, %462
  %461 = struct $UInt (%458 : $Builtin.Int64), scope 920 // user: %462
  %462 = struct $_StringCore (%455 : $Optional<UnsafeMutableRawPointer>, %461 : $UInt, %460 : $Optional<AnyObject>), scope 920 // user: %463
  %463 = struct $String (%462 : $_StringCore), scope 920 // users: %466, %469
  debug_value_addr %423 : $*Int, scope 922        // id: %464
  store %130 to %423 : $*Int, scope 922           // id: %465
  debug_value %463 : $String, let, name "x", loc "swift.swift":69:7, scope 924 // id: %466
  retain_value %460 : $Optional<AnyObject>, scope 467 // id: %467
  retain_value %460 : $Optional<AnyObject>, scope 467 // id: %468
  %469 = apply %133(%463, %136, %134) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 924 // users: %470, %474
  switch_enum %469 : $Optional<Int>, case #Optional.none!enumelt: bb13, case #Optional.some!enumelt.1: bb14, loc "swift.swift":70:16, scope 924 // id: %470

bb13:                                             // Preds: bb12
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":70:16, scope 924 // id: %471
  unreachable, loc "swift.swift":70:16, scope 924 // id: %472

bb14:                                             // Preds: bb12
  release_value %460 : $Optional<AnyObject>, scope 467 // id: %473
  %474 = unchecked_enum_data %469 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 924 // users: %493, %475
  debug_value %474 : $Int, let, name "n", loc "swift.swift":85:7, scope 880 // id: %475
  %476 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 936 // user: %477
  %477 = address_to_pointer %476 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 936 // user: %478
  %478 = raw_pointer_to_ref %477 : $Builtin.RawPointer to $_EmptyArrayStorage, scope 936 // users: %851, %876, %499, %520, %479
  %479 = unchecked_ref_cast %478 : $_EmptyArrayStorage to $Builtin.BridgeObject, scope 936 // user: %480
  %480 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%479 : $Builtin.BridgeObject), scope 939 // users: %817, %822, %486, %481
  %481 = struct $_ArrayBuffer<String> (%480 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 939 // users: %485, %484, %482
  %482 = struct $Array<String> (%481 : $_ArrayBuffer<String>), scope 939 // users: %501, %492, %491, %490, %483
  debug_value %482 : $Array<String>, scope 941    // id: %483
  debug_value %481 : $_ArrayBuffer<String>, scope 946 // id: %484
  debug_value %481 : $_ArrayBuffer<String>, scope 951 // id: %485
  debug_value %480 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 951 // id: %486
  %487 = builtin "onFastPath"() : $(), scope 956
  %488 = builtin "onFastPath"() : $(), scope 960
  %489 = builtin "onFastPath"() : $(), scope 964
  debug_value %482 : $Array<String>, scope 965    // id: %490
  debug_value %482 : $Array<String>, scope 969    // id: %491
  store %482 to %420 : $*Array<String>, loc "swift.swift":86:24, scope 880 // id: %492
  %493 = struct_extract %474 : $Int, #Int._value, loc "swift.swift":87:16, scope 971 // users: %656, %518, %497, %494
  %494 = builtin "cmp_sle_Int64"(%28 : $Builtin.Int64, %493 : $Builtin.Int64) : $Builtin.Int1, loc "swift.swift":87:13, scope 971 // user: %495
  %495 = builtin "xor_Int1"(%494 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, loc "swift.swift":87:13, scope 971 // user: %496
  cond_fail %495 : $Builtin.Int1, loc "swift.swift":87:13, scope 971 // id: %496
  %497 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %493 : $Builtin.Int64) : $Builtin.Int1, scope 974 // user: %498
  cond_br %497, bb15, bb17, scope 976             // id: %498

bb15:                                             // Preds: bb14
  strong_retain %478 : $_EmptyArrayStorage, scope 467 // id: %499
  strong_release %416 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %500
  br bb16(%482 : $Array<String>), scope 977       // id: %501

// %502                                           // users: %1062, %721, %720, %504
bb16(%502 : $Array<String>):                      // Preds: bb24 bb15
  dealloc_stack %420 : $*Array<String>, loc "swift.swift":86:7, scope 880 // id: %503
  debug_value %502 : $Array<String>, let, name "a", loc "swift.swift":120:6, scope 468 // id: %504
  debug_value %130 : $Int, scope 979              // id: %505
  %506 = init_existential_metatype %158 : $@thick _ContiguousArrayStorage<Any>.Type, $@thick AnyObject.Type, scope 979 // users: %692, %507
  debug_value %506 : $@thick AnyObject.Type, scope 980 // id: %507
  debug_value %130 : $Int, scope 980              // id: %508
  %509 = builtin "onFastPath"() : $(), scope 981
  %510 = builtin "onFastPath"() : $(), scope 982
  debug_value %187 : $Int, scope 980              // id: %511
  cond_br %189, bb29, bb56, scope 983             // id: %512

bb17:                                             // Preds: bb14
  %513 = struct_element_addr %423 : $*Int, #Int._value, scope 892 // user: %557
  %514 = struct_element_addr %418 : $*IndexingIterator<Array<String>>, #IndexingIterator._elements, scope 892 // user: %515
  %515 = struct_element_addr %514 : $*Array<String>, #Array._buffer, scope 892 // user: %516
  %516 = struct_element_addr %515 : $*_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 892 // user: %517
  %517 = struct_element_addr %516 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 892 // user: %558
  %518 = builtin "cmp_sge_Int64"(%28 : $Builtin.Int64, %493 : $Builtin.Int64) : $Builtin.Int1, scope 985 // user: %519
  cond_fail %518 : $Builtin.Int1, scope 985       // id: %519
  strong_retain %478 : $_EmptyArrayStorage, scope 467 // id: %520
  debug_value %416 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 991 // id: %521
  debug_value_addr %418 : $*IndexingIterator<Array<String>>, scope 992 // id: %522
  %523 = builtin "onFastPath"() : $(), scope 993
  %524 = builtin "onFastPath"() : $(), scope 994
  %525 = builtin "onFastPath"() : $(), scope 995
  %526 = builtin "onFastPath"() : $(), scope 996
  %527 = builtin "onFastPath"() : $(), scope 997
  %528 = builtin "onFastPath"() : $(), scope 998
  %529 = builtin "onFastPath"() : $(), scope 999
  debug_value_addr %423 : $*Int, scope 1000       // id: %530
  debug_value_addr %420 : $*Array<String>, scope 1004 // id: %531
  debug_value_addr %420 : $*Array<String>, scope 1008 // id: %532
  %533 = struct_element_addr %420 : $*Array<String>, #Array._buffer, scope 1008 // users: %546, %536, %535, %534
  debug_value_addr %533 : $*_ArrayBuffer<String>, scope 1013 // id: %534
  debug_value_addr %533 : $*_ArrayBuffer<String>, scope 1019 // id: %535
  %536 = struct_element_addr %533 : $*_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 1019 // users: %538, %537
  debug_value_addr %536 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1019 // id: %537
  %538 = struct_element_addr %536 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1019 // users: %664, %648, %638, %605, %539
  %539 = unchecked_addr_cast %538 : $*Builtin.BridgeObject to $*Builtin.NativeObject, scope 1019 // user: %601
  %540 = builtin "onFastPath"() : $(), scope 1022
  %541 = builtin "onFastPath"() : $(), scope 1024
  debug_value_addr %420 : $*Array<String>, scope 1028 // id: %542
  %543 = builtin "onFastPath"() : $(), scope 1038
  %544 = builtin "onFastPath"() : $(), scope 1043
  debug_value_addr %420 : $*Array<String>, scope 1047 // id: %545
  debug_value_addr %533 : $*_ArrayBuffer<String>, scope 1052 // id: %546
  %547 = builtin "onFastPath"() : $(), scope 1060
  %548 = builtin "onFastPath"() : $(), scope 1065
  %549 = builtin "onFastPath"() : $(), scope 1069
  %550 = builtin "onFastPath"() : $(), scope 1072
  %551 = builtin "onFastPath"() : $(), scope 1075
  br bb18(%28 : $Builtin.Int64), scope 977        // id: %552

// %553                                           // user: %554
bb18(%553 : $Builtin.Int64):                      // Preds: bb25 bb17
  %554 = builtin "sadd_with_overflow_Int64"(%553 : $Builtin.Int64, %22 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 985 // user: %555
  %555 = tuple_extract %554 : $(Builtin.Int64, Builtin.Int1), 0, scope 985 // users: %663, %656, %556
  debug_value %555 : $Builtin.Int64, scope 985    // id: %556
  %557 = load %513 : $*Builtin.Int64, scope 992   // users: %592, %579, %572, %570, %569
  %558 = load %517 : $*Builtin.BridgeObject, scope 992 // users: %560, %559
  %559 = unchecked_ref_cast %558 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1076 // user: %563
  %560 = ref_to_raw_pointer %558 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1077 // users: %577, %561
  %561 = index_raw_pointer %560 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 993 // user: %562
  %562 = pointer_to_address %561 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1078 // user: %563
  %563 = mark_dependence %562 : $*_ArrayBody on %559 : $Builtin.NativeObject, scope 1078 // user: %564
  %564 = struct_element_addr %563 : $*_ArrayBody, #_ArrayBody._storage, scope 1078 // user: %565
  %565 = struct_element_addr %564 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1078 // user: %566
  %566 = struct_element_addr %565 : $*Int, #Int._value, scope 1078 // user: %567
  %567 = load %566 : $*Builtin.Int64, scope 1078  // user: %568
  %568 = builtin "assumeNonNegative_Int64"(%567 : $Builtin.Int64) : $Builtin.Int64, scope 1078 // users: %572, %569
  %569 = builtin "cmp_eq_Int64"(%557 : $Builtin.Int64, %568 : $Builtin.Int64) : $Builtin.Int1, scope 1079 // user: %575
  %570 = builtin "cmp_sge_Int64"(%557 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 1080 // user: %571
  %571 = builtin "xor_Int1"(%570 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 1080 // user: %574
  %572 = builtin "cmp_slt_Int64"(%557 : $Builtin.Int64, %568 : $Builtin.Int64) : $Builtin.Int1, scope 1080 // user: %573
  %573 = builtin "xor_Int1"(%572 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 1080 // user: %574
  %574 = builtin "or_Int1"(%571 : $Builtin.Int1, %573 : $Builtin.Int1) : $Builtin.Int1, scope 1080 // user: %575
  %575 = builtin "or_Int1"(%569 : $Builtin.Int1, %574 : $Builtin.Int1) : $Builtin.Int1, scope 997 // user: %576
  cond_fail %575 : $Builtin.Int1, scope 997       // id: %576
  %577 = index_raw_pointer %560 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 997 // user: %578
  %578 = pointer_to_address %577 : $Builtin.RawPointer to [strict] $*String, scope 1081 // user: %580
  %579 = builtin "truncOrBitCast_Int64_Word"(%557 : $Builtin.Int64) : $Builtin.Word, scope 1081 // user: %580
  %580 = index_addr %578 : $*String, %579 : $Builtin.Word, scope 1081 // user: %581
  %581 = struct_element_addr %580 : $*String, #String._core, scope 1081 // users: %587, %584, %582
  %582 = struct_element_addr %581 : $*_StringCore, #_StringCore._baseAddress, scope 1081 // user: %583
  %583 = load %582 : $*Optional<UnsafeMutableRawPointer>, scope 1081 // user: %590
  %584 = struct_element_addr %581 : $*_StringCore, #_StringCore._countAndFlags, scope 1081 // user: %585
  %585 = struct_element_addr %584 : $*UInt, #UInt._value, scope 1081 // user: %586
  %586 = load %585 : $*Builtin.Int64, scope 1081  // user: %589
  %587 = struct_element_addr %581 : $*_StringCore, #_StringCore._owner, scope 1081 // user: %588
  %588 = load %587 : $*Optional<AnyObject>, scope 1081 // users: %600, %590
  %589 = struct $UInt (%586 : $Builtin.Int64), scope 1082 // user: %590
  %590 = struct $_StringCore (%583 : $Optional<UnsafeMutableRawPointer>, %589 : $UInt, %588 : $Optional<AnyObject>), scope 1082 // user: %591
  %591 = struct $String (%590 : $_StringCore), scope 1082 // users: %655, %651, %634, %599, %598
  %592 = builtin "sadd_with_overflow_Int64"(%557 : $Builtin.Int64, %22 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1000 // users: %594, %593
  %593 = tuple_extract %592 : $(Builtin.Int64, Builtin.Int1), 0, scope 1000 // user: %596
  %594 = tuple_extract %592 : $(Builtin.Int64, Builtin.Int1), 1, scope 1000 // user: %595
  cond_fail %594 : $Builtin.Int1, scope 1000      // id: %595
  %596 = struct $Int (%593 : $Builtin.Int64), scope 1000 // user: %597
  store %596 to %423 : $*Int, scope 1000          // id: %597
  debug_value %591 : $String, let, name "x", loc "swift.swift":76:7, scope 1084 // id: %598
  debug_value %591 : $String, scope 1004          // id: %599
  retain_value %588 : $Optional<AnyObject>, scope 467 // id: %600
  %601 = is_unique %539 : $*Builtin.NativeObject, scope 1019 // user: %602
  %602 = builtin "int_expect_Int1"(%601 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 1008 // user: %603
  cond_br %602, bb19, bb26, scope 1008            // id: %603

bb19:                                             // Preds: bb18
  br bb20, scope 467                              // id: %604

bb20:                                             // Preds: bb19 bb26
  %605 = load %538 : $*Builtin.BridgeObject, scope 1004 // users: %607, %606
  %606 = unchecked_ref_cast %605 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1086 // user: %610
  %607 = ref_to_raw_pointer %605 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1088 // user: %608
  %608 = index_raw_pointer %607 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1022 // user: %609
  %609 = pointer_to_address %608 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1090 // user: %610
  %610 = mark_dependence %609 : $*_ArrayBody on %606 : $Builtin.NativeObject, scope 1090 // user: %611
  %611 = struct_element_addr %610 : $*_ArrayBody, #_ArrayBody._storage, scope 1090 // users: %623, %612
  %612 = struct_element_addr %611 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1090 // user: %613
  %613 = struct_element_addr %612 : $*Int, #Int._value, scope 1090 // user: %614
  %614 = load %613 : $*Builtin.Int64, scope 1090  // user: %615
  %615 = builtin "assumeNonNegative_Int64"(%614 : $Builtin.Int64) : $Builtin.Int64, scope 1090 // users: %653, %619, %616
  %616 = struct $Int (%615 : $Builtin.Int64), scope 1090 // users: %635, %632, %618, %617
  debug_value %616 : $Int, scope 1004             // id: %617
  debug_value %616 : $Int, scope 1028             // id: %618
  %619 = builtin "sadd_with_overflow_Int64"(%615 : $Builtin.Int64, %22 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1028 // users: %621, %620
  %620 = tuple_extract %619 : $(Builtin.Int64, Builtin.Int1), 0, scope 1028 // users: %636, %627
  %621 = tuple_extract %619 : $(Builtin.Int64, Builtin.Int1), 1, scope 1028 // user: %622
  cond_fail %621 : $Builtin.Int1, scope 1028      // id: %622
  %623 = struct_element_addr %611 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1094 // user: %624
  %624 = struct_element_addr %623 : $*UInt, #UInt._value, scope 1094 // user: %625
  %625 = load %624 : $*Builtin.Int64, scope 1094  // user: %626
  %626 = builtin "lshr_Int64"(%625 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int64, scope 1094 // user: %627
  %627 = builtin "cmp_sgt_Int64"(%620 : $Builtin.Int64, %626 : $Builtin.Int64) : $Builtin.Int1, scope 1028 // user: %628
  %628 = builtin "int_expect_Int1"(%627 : $Builtin.Int1, %56 : $Builtin.Int1) : $Builtin.Int1, scope 1028 // user: %629
  cond_br %628, bb22, bb21, scope 1028            // id: %629

bb21:                                             // Preds: bb20
  br bb23, scope 467                              // id: %630

bb22:                                             // Preds: bb20
  // function_ref specialized Array._copyToNewBuffer(oldCount : Int) -> ()
  %631 = function_ref @_TTSg5SS___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<String>) -> (), scope 1028 // user: %632
  %632 = apply %631(%616, %420) : $@convention(method) (Int, @inout Array<String>) -> (), scope 1028
  br bb23, scope 1028                             // id: %633

bb23:                                             // Preds: bb21 bb22
  debug_value %591 : $String, scope 1047          // id: %634
  debug_value %616 : $Int, scope 1047             // id: %635
  %636 = struct $Int (%620 : $Builtin.Int64), scope 1047 // users: %647, %644, %639, %637
  debug_value %636 : $Int, scope 1052             // id: %637
  %638 = load %538 : $*Builtin.BridgeObject, scope 1052 // user: %640
  debug_value %636 : $Int, scope 1098             // id: %639
  %640 = ref_to_raw_pointer %638 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1103 // user: %641
  %641 = index_raw_pointer %640 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1060 // user: %642
  %642 = pointer_to_address %641 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1098 // users: %645, %643
  debug_value_addr %642 : $*_ArrayBody, scope 1098 // id: %643
  debug_value %636 : $Int, scope 1098             // id: %644
  %645 = struct_element_addr %642 : $*_ArrayBody, #_ArrayBody._storage, scope 1098 // user: %646
  %646 = struct_element_addr %645 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1098 // user: %647
  store %636 to %646 : $*Int, scope 1098          // id: %647
  %648 = load %538 : $*Builtin.BridgeObject, scope 1047 // users: %657, %649
  %649 = ref_to_raw_pointer %648 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1110 // user: %650
  %650 = index_raw_pointer %649 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 1069 // user: %652
  debug_value %591 : $String, scope 1115          // id: %651
  %652 = pointer_to_address %650 : $Builtin.RawPointer to [strict] $*String, scope 1115 // user: %654
  %653 = builtin "truncOrBitCast_Int64_Word"(%615 : $Builtin.Int64) : $Builtin.Word, scope 1115 // user: %654
  %654 = index_addr %652 : $*String, %653 : $Builtin.Word, scope 1115 // user: %655
  store %591 to %654 : $*String, scope 1115       // id: %655
  %656 = builtin "cmp_eq_Int64"(%555 : $Builtin.Int64, %493 : $Builtin.Int64) : $Builtin.Int1, scope 974 // user: %660
  %657 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%648 : $Builtin.BridgeObject), scope 977 // user: %658
  %658 = struct $_ArrayBuffer<String> (%657 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 977 // user: %659
  %659 = struct $Array<String> (%658 : $_ArrayBuffer<String>), scope 977 // user: %662
  cond_br %656, bb24, bb25, scope 976             // id: %660

bb24:                                             // Preds: bb23
  strong_release %416 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %661
  br bb16(%659 : $Array<String>), scope 977       // id: %662

bb25:                                             // Preds: bb23
  br bb18(%555 : $Builtin.Int64), scope 977       // id: %663

bb26:                                             // Preds: bb18
  %664 = load %538 : $*Builtin.BridgeObject, scope 1008 // users: %667, %665
  %665 = unchecked_ref_cast %664 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1119 // user: %671
  %666 = builtin "onFastPath"() : $(), scope 1122
  %667 = ref_to_raw_pointer %664 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1125 // user: %669
  %668 = builtin "onFastPath"() : $(), scope 1128
  %669 = index_raw_pointer %667 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1122 // user: %670
  %670 = pointer_to_address %669 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1131 // user: %671
  %671 = mark_dependence %670 : $*_ArrayBody on %665 : $Builtin.NativeObject, scope 1131 // user: %672
  %672 = struct_element_addr %671 : $*_ArrayBody, #_ArrayBody._storage, scope 1131 // user: %673
  %673 = struct_element_addr %672 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1131 // user: %674
  %674 = struct_element_addr %673 : $*Int, #Int._value, scope 1131 // user: %675
  %675 = load %674 : $*Builtin.Int64, scope 1131  // user: %676
  %676 = builtin "assumeNonNegative_Int64"(%675 : $Builtin.Int64) : $Builtin.Int64, scope 1131 // user: %677
  %677 = struct $Int (%676 : $Builtin.Int64), scope 1131 // user: %679
  // function_ref specialized Array._copyToNewBuffer(oldCount : Int) -> ()
  %678 = function_ref @_TTSg5SS___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<String>) -> (), scope 1008 // user: %679
  %679 = apply %678(%677, %420) : $@convention(method) (Int, @inout Array<String>) -> (), scope 1008
  br bb20, scope 1008                             // id: %680

bb27:                                             // Preds: bb10
  br bb12(%194 : $Builtin.Int64), scope 838       // id: %681

bb28:                                             // Preds: bb6
  br bb10(%51 : $Builtin.Int64), scope 838        // id: %682

bb29:                                             // Preds: bb16
  br bb30(%166 : $Builtin.Int64), scope 983       // id: %683

// %684                                           // users: %687, %685
bb30(%684 : $Builtin.Int64):                      // Preds: bb56 bb29
  %685 = builtin "cmp_sge_Int64"(%684 : $Builtin.Int64, %194 : $Builtin.Int64) : $Builtin.Int1, scope 983 // user: %686
  cond_br %685, bb31, bb55, scope 983             // id: %686

bb31:                                             // Preds: bb30
  br bb32(%684 : $Builtin.Int64), scope 983       // id: %687

// %688                                           // user: %689
bb32(%688 : $Builtin.Int64):                      // Preds: bb55 bb31
  %689 = builtin "ssub_with_overflow_Int64"(%688 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 983 // user: %690
  %690 = tuple_extract %689 : $(Builtin.Int64, Builtin.Int1), 0, scope 983 // user: %691
  %691 = struct $Int (%690 : $Builtin.Int64), scope 983 // user: %692
  %692 = apply %200(%506, %187, %691) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 980 // users: %708, %700, %694, %693
  debug_value %692 : $AnyObject, scope 980        // id: %693
  debug_value %692 : $AnyObject, scope 1133       // id: %694
  debug_value %130 : $Int, scope 1133             // id: %695
  debug_value %130 : $Int, scope 1134             // id: %696
  debug_value %130 : $Int, scope 1135             // id: %697
  debug_value %130 : $Int, scope 1135             // id: %698
  %699 = builtin "onFastPath"() : $(), scope 1136
  %700 = ref_to_raw_pointer %692 : $AnyObject to $Builtin.RawPointer, scope 1137 // users: %716, %702
  %701 = builtin "onFastPath"() : $(), scope 1138
  %702 = index_raw_pointer %700 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1136 // user: %706
  debug_value %130 : $Int, scope 1135             // id: %703
  debug_value %130 : $Int, scope 1135             // id: %704
  debug_value %218 : $_ArrayBody, scope 1139      // id: %705
  %706 = pointer_to_address %702 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1139 // user: %707
  store %218 to %706 : $*_ArrayBody, scope 1139   // id: %707
  %708 = unchecked_ref_cast %692 : $AnyObject to $Builtin.BridgeObject, scope 1134 // user: %709
  %709 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%708 : $Builtin.BridgeObject), scope 1140 // user: %710
  %710 = struct $_ArrayBuffer<Any> (%709 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1140 // users: %712, %711
  debug_value %710 : $_ArrayBuffer<Any>, scope 1141 // id: %711
  %712 = struct $Array<Any> (%710 : $_ArrayBuffer<Any>), scope 1141 // users: %717, %724
  %713 = builtin "onFastPath"() : $(), scope 1142
  %714 = builtin "onFastPath"() : $(), scope 1143
  %715 = builtin "onFastPath"() : $(), scope 1144
  %716 = index_raw_pointer %700 : $Builtin.RawPointer, %230 : $Builtin.Word, scope 1142 // user: %718
  debug_value %712 : $Array<Any>, scope 979       // id: %717
  %718 = pointer_to_address %716 : $Builtin.RawPointer to [strict] $*Any, loc "swift.swift":121:8, scope 468 // user: %719
  %719 = init_existential_addr %718 : $*Any, $Array<String>, loc "swift.swift":121:8, scope 468 // user: %720
  store %502 to %719 : $*Array<String>, loc "swift.swift":121:8, scope 468 // id: %720
  retain_value %502 : $Array<String>, scope 467   // id: %721
  %722 = apply %236() : $@convention(thin) () -> @owned String, loc "swift.swift":121:8, scope 468 // user: %724
  %723 = apply %238() : $@convention(thin) () -> @owned String, loc "swift.swift":121:8, scope 468 // user: %724
  %724 = apply %199(%712, %722, %723) : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> (), loc "swift.swift":121:9, scope 468
  %725 = string_literal utf8 "CatWorld/3/tama/5/mike/6/kuro/7", loc "swift.swift":123:32, scope 468 // users: %728, %726
  debug_value %725 : $Builtin.RawPointer, scope 1148 // id: %726
  debug_value %1 : $Builtin.Int1, scope 1148      // id: %727
  %728 = struct $UnsafeMutableRawPointer (%725 : $Builtin.RawPointer), scope 1148 // user: %729
  %729 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %728 : $UnsafeMutableRawPointer, scope 1148 // users: %734, %730
  debug_value %729 : $Optional<UnsafeMutableRawPointer>, scope 1148 // id: %730
  debug_value %6 : $Optional<AnyObject>, scope 1148 // id: %731
  %732 = integer_literal $Builtin.Int64, 31, scope 1148 // user: %733
  %733 = struct $UInt (%732 : $Builtin.Int64), scope 1148 // user: %734
  %734 = struct $_StringCore (%729 : $Optional<UnsafeMutableRawPointer>, %733 : $UInt, %6 : $Optional<AnyObject>), scope 1148 // user: %735
  %735 = struct $String (%734 : $_StringCore), scope 1148 // users: %741, %736
  debug_value %735 : $String, let, name "string", argno 1, loc "swift.swift":39:24, scope 1151 // id: %736
  debug_value %15 : $Builtin.RawPointer, scope 1157 // id: %737
  debug_value %1 : $Builtin.Int1, scope 1157      // id: %738
  debug_value %19 : $Optional<UnsafeMutableRawPointer>, scope 1157 // id: %739
  debug_value %6 : $Optional<AnyObject>, scope 1157 // id: %740
  %741 = apply %14(%25, %735) : $@convention(method) (@owned String, @guaranteed String) -> @owned Array<String>, loc "swift.swift":42:49, scope 1158 // users: %753, %743, %742
  debug_value %741 : $Array<String>, let, name "tokens", loc "swift.swift":42:6, scope 1158 // id: %742
  %743 = struct $IndexingIterator<Array<String>> (%741 : $Array<String>, %29 : $Int), loc "swift.swift":43:58, scope 1158 // users: %748, %746, %744
  debug_value %743 : $IndexingIterator<Array<String>>, scope 1161 // id: %744
  %745 = alloc_ref $_IteratorBox<IndexingIterator<Array<String>>>, scope 1163 // users: %908, %909, %855, %864, %893, %883, %799, %750, %749, %747
  debug_value %743 : $IndexingIterator<Array<String>>, scope 1165 // id: %746
  %747 = ref_element_addr %745 : $_IteratorBox<IndexingIterator<Array<String>>>, #_IteratorBox._base, scope 1165 // users: %752, %751, %748
  store %743 to %747 : $*IndexingIterator<Array<String>>, scope 1165 // id: %748
  %749 = upcast %745 : $_IteratorBox<IndexingIterator<Array<String>>> to $_AnyIteratorBoxBase<String>, scope 1161 // users: %798, %801, %884, %894
  debug_value %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 1174 // id: %750
  debug_value_addr %747 : $*IndexingIterator<Array<String>>, scope 1178 // id: %751
  %752 = struct_element_addr %747 : $*IndexingIterator<Array<String>>, #IndexingIterator._position, scope 1178 // users: %794, %793
  %753 = struct_extract %741 : $Array<String>, #Array._buffer, scope 467 // user: %754
  %754 = struct_extract %753 : $_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 467 // user: %755
  %755 = struct_extract %754 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 467 // users: %756, %758
  %756 = unchecked_ref_cast %755 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1179 // user: %762
  %757 = builtin "onFastPath"() : $(), scope 1180
  %758 = ref_to_raw_pointer %755 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1181 // users: %779, %760
  %759 = builtin "onFastPath"() : $(), scope 1182
  %760 = index_raw_pointer %758 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1180 // user: %761
  %761 = pointer_to_address %760 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1183 // user: %762
  %762 = mark_dependence %761 : $*_ArrayBody on %756 : $Builtin.NativeObject, scope 1183 // user: %763
  %763 = struct_element_addr %762 : $*_ArrayBody, #_ArrayBody._storage, scope 1183 // user: %764
  %764 = struct_element_addr %763 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1183 // user: %765
  %765 = struct_element_addr %764 : $*Int, #Int._value, scope 1183 // user: %766
  %766 = load %765 : $*Builtin.Int64, scope 1183  // user: %767
  %767 = builtin "assumeNonNegative_Int64"(%766 : $Builtin.Int64) : $Builtin.Int64, scope 1183 // users: %771, %768
  %768 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %767 : $Builtin.Int64) : $Builtin.Int1, scope 1184 // user: %774
  %769 = builtin "onFastPath"() : $(), scope 1185
  %770 = builtin "onFastPath"() : $(), scope 1186
  %771 = builtin "cmp_slt_Int64"(%28 : $Builtin.Int64, %767 : $Builtin.Int64) : $Builtin.Int1, scope 1187 // user: %772
  %772 = builtin "xor_Int1"(%771 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 1187 // user: %773
  %773 = builtin "or_Int1"(%79 : $Builtin.Int1, %772 : $Builtin.Int1) : $Builtin.Int1, scope 1187 // user: %774
  %774 = builtin "or_Int1"(%768 : $Builtin.Int1, %773 : $Builtin.Int1) : $Builtin.Int1, scope 1188 // user: %775
  cond_fail %774 : $Builtin.Int1, scope 1188      // id: %775
  %776 = builtin "onFastPath"() : $(), scope 1188
  %777 = builtin "onFastPath"() : $(), scope 1189
  %778 = builtin "onFastPath"() : $(), scope 1190
  %779 = index_raw_pointer %758 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 1188 // user: %780
  %780 = pointer_to_address %779 : $Builtin.RawPointer to [strict] $*String, scope 1191 // user: %781
  %781 = index_addr %780 : $*String, %116 : $Builtin.Word, scope 1191 // user: %782
  %782 = struct_element_addr %781 : $*String, #String._core, scope 1191 // users: %788, %785, %783
  %783 = struct_element_addr %782 : $*_StringCore, #_StringCore._baseAddress, scope 1191 // user: %784
  %784 = load %783 : $*Optional<UnsafeMutableRawPointer>, scope 1191 // user: %791
  %785 = struct_element_addr %782 : $*_StringCore, #_StringCore._countAndFlags, scope 1191 // user: %786
  %786 = struct_element_addr %785 : $*UInt, #UInt._value, scope 1191 // user: %787
  %787 = load %786 : $*Builtin.Int64, scope 1191  // user: %790
  %788 = struct_element_addr %782 : $*_StringCore, #_StringCore._owner, scope 1191 // user: %789
  %789 = load %788 : $*Optional<AnyObject>, scope 1191 // users: %800, %791
  %790 = struct $UInt (%787 : $Builtin.Int64), scope 1192 // user: %791
  %791 = struct $_StringCore (%784 : $Optional<UnsafeMutableRawPointer>, %790 : $UInt, %789 : $Optional<AnyObject>), scope 1192 // user: %792
  %792 = struct $String (%791 : $_StringCore), scope 1192 // users: %861, %857, %795
  debug_value_addr %752 : $*Int, scope 1193       // id: %793
  store %130 to %752 : $*Int, scope 1193          // id: %794
  debug_value %792 : $String, let, name "x", loc "swift.swift":76:7, scope 1196 // id: %795
  %796 = alloc_stack $Array<Employee>, var, name "ret", loc "swift.swift":86:7, scope 1205 // users: %1015, %963, %960, %943, %917, %916, %915, %854, %844
  %797 = alloc_stack $Optional<String>, scope 1208 // users: %803, %802, %801
  %798 = class_method %749 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1208 // users: %894, %884, %801
  strong_retain %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %799
  retain_value %789 : $Optional<AnyObject>, scope 467 // id: %800
  %801 = apply %798<String>(%797, %749) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1208
  %802 = load %797 : $*Optional<String>, scope 1208 // users: %814, %809, %804, %807
  dealloc_stack %797 : $*Optional<String>, scope 1208 // id: %803
  switch_enum %802 : $Optional<String>, case #Optional.none!enumelt: bb33, case #Optional.some!enumelt.1: bb34, loc "swift.swift":69:34, scope 1210 // id: %804

bb33:                                             // Preds: bb32
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":69:34, scope 1210 // id: %805
  unreachable, loc "swift.swift":69:34, scope 1210 // id: %806

bb34:                                             // Preds: bb32
  %807 = unchecked_enum_data %802 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 1210 // users: %810, %808
  debug_value %807 : $String, let, name "x", loc "swift.swift":69:7, scope 1210 // id: %808
  retain_value %802 : $Optional<String>, scope 467 // id: %809
  %810 = apply %133(%807, %136, %134) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 1210 // users: %811, %815
  switch_enum %810 : $Optional<Int>, case #Optional.none!enumelt: bb35, case #Optional.some!enumelt.1: bb36, loc "swift.swift":70:16, scope 1210 // id: %811

bb35:                                             // Preds: bb34
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":70:16, scope 1210 // id: %812
  unreachable, loc "swift.swift":70:16, scope 1210 // id: %813

bb36:                                             // Preds: bb34
  release_value %802 : $Optional<String>, scope 467 // id: %814
  %815 = unchecked_enum_data %810 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 1210 // users: %845, %816
  debug_value %815 : $Int, let, name "n", loc "swift.swift":85:7, scope 1205 // id: %816
  %817 = struct $_ArrayBuffer<Employee> (%480 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1220 // users: %821, %820, %818
  %818 = struct $Array<Employee> (%817 : $_ArrayBuffer<Employee>), scope 1220 // users: %852, %844, %843, %842, %819
  debug_value %818 : $Array<Employee>, scope 1222 // id: %819
  debug_value %817 : $_ArrayBuffer<Employee>, scope 1227 // id: %820
  debug_value %817 : $_ArrayBuffer<Employee>, scope 1233 // id: %821
  debug_value %480 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1233 // id: %822
  %823 = builtin "onFastPath"() : $(), scope 1242
  %824 = builtin "onFastPath"() : $(), scope 1250
  %825 = builtin "onFastPath"() : $(), scope 1259
  %826 = metatype $@thick Employee.Type, scope 1250 // user: %827
  %827 = builtin "alignof"<Employee>(%826 : $@thick Employee.Type) : $Builtin.Word, scope 1250 // user: %828
  %828 = builtin "zextOrBitCast_Word_Int64"(%827 : $Builtin.Word) : $Builtin.Int64, scope 1250 // users: %835, %829
  %829 = builtin "uadd_with_overflow_Int64"(%93 : $Builtin.Int64, %828 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1250 // users: %831, %830
  %830 = tuple_extract %829 : $(Builtin.Int64, Builtin.Int1), 0, scope 1250 // user: %833
  %831 = tuple_extract %829 : $(Builtin.Int64, Builtin.Int1), 1, scope 1250 // user: %832
  cond_fail %831 : $Builtin.Int1, scope 1250      // id: %832
  %833 = builtin "usub_with_overflow_Int64"(%830 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1250 // user: %834
  %834 = tuple_extract %833 : $(Builtin.Int64, Builtin.Int1), 0, scope 1250 // user: %838
  %835 = builtin "usub_with_overflow_Int64"(%828 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1250 // user: %836
  %836 = tuple_extract %835 : $(Builtin.Int64, Builtin.Int1), 0, scope 1250 // user: %837
  %837 = builtin "xor_Int64"(%836 : $Builtin.Int64, %61 : $Builtin.Int64) : $Builtin.Int64, scope 1250 // user: %838
  %838 = builtin "and_Int64"(%834 : $Builtin.Int64, %837 : $Builtin.Int64) : $Builtin.Int64, scope 1250 // user: %839
  %839 = builtin "u_to_s_checked_conversion_Int64"(%838 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1250 // users: %985, %840
  %840 = tuple_extract %839 : $(Builtin.Int64, Builtin.Int1), 1, scope 1250 // user: %841
  cond_fail %840 : $Builtin.Int1, scope 1250      // id: %841
  debug_value %818 : $Array<Employee>, scope 1260 // id: %842
  debug_value %818 : $Array<Employee>, scope 1264 // id: %843
  store %818 to %796 : $*Array<Employee>, loc "swift.swift":86:24, scope 1205 // id: %844
  %845 = struct_extract %815 : $Int, #Int._value, loc "swift.swift":87:16, scope 1266 // users: %993, %874, %849, %846
  %846 = builtin "cmp_sle_Int64"(%28 : $Builtin.Int64, %845 : $Builtin.Int64) : $Builtin.Int1, loc "swift.swift":87:13, scope 1266 // user: %847
  %847 = builtin "xor_Int1"(%846 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, loc "swift.swift":87:13, scope 1266 // user: %848
  cond_fail %847 : $Builtin.Int1, loc "swift.swift":87:13, scope 1266 // id: %848
  %849 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %845 : $Builtin.Int64) : $Builtin.Int1, scope 1269 // user: %850
  cond_br %849, bb37, bb39, scope 1271            // id: %850

bb37:                                             // Preds: bb36
  strong_retain %478 : $_EmptyArrayStorage, scope 467 // id: %851
  br bb38(%818 : $Array<Employee>), scope 1272    // id: %852

// %853                                           // users: %858, %863
bb38(%853 : $Array<Employee>):                    // Preds: bb52 bb37
  dealloc_stack %796 : $*Array<Employee>, loc "swift.swift":86:7, scope 1205 // id: %854
  strong_release %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %855
  %856 = alloc_ref $Company, scope 1275           // users: %1061, %1057, %865, %1056, %862, %860, %859
  debug_value %792 : $String, let, name "name", argno 1, loc "swift.swift":22:7, scope 1278 // id: %857
  debug_value %853 : $Array<Employee>, let, name "employees", argno 2, loc "swift.swift":22:21, scope 1278 // id: %858
  debug_value %856 : $Company, let, name "self", loc "swift.swift":22:2, scope 1278 // id: %859
  %860 = ref_element_addr %856 : $Company, #Company.name, loc "swift.swift":23:13, scope 1281 // user: %861
  store %792 to %860 : $*String, loc "swift.swift":23:13, scope 1281 // id: %861
  %862 = ref_element_addr %856 : $Company, #Company.employees, loc "swift.swift":24:18, scope 1281 // user: %863
  store %853 to %862 : $*Array<Employee>, loc "swift.swift":24:18, scope 1281 // id: %863
  strong_release %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %864
  debug_value %856 : $Company, let, name "c", loc "swift.swift":123:6, scope 468 // id: %865
  debug_value %130 : $Int, scope 1283             // id: %866
  %867 = init_existential_metatype %158 : $@thick _ContiguousArrayStorage<Any>.Type, $@thick AnyObject.Type, scope 1283 // users: %1028, %868
  debug_value %867 : $@thick AnyObject.Type, scope 1284 // id: %868
  debug_value %130 : $Int, scope 1284             // id: %869
  %870 = builtin "onFastPath"() : $(), scope 1285
  %871 = builtin "onFastPath"() : $(), scope 1286
  debug_value %187 : $Int, scope 1284             // id: %872
  cond_br %189, bb57, bb62, scope 1287            // id: %873

bb39:                                             // Preds: bb36
  %874 = builtin "cmp_sge_Int64"(%28 : $Builtin.Int64, %845 : $Builtin.Int64) : $Builtin.Int1, scope 1289 // user: %875
  cond_fail %874 : $Builtin.Int1, scope 1289      // id: %875
  strong_retain %478 : $_EmptyArrayStorage, scope 467 // id: %876
  br bb40(%28 : $Builtin.Int64), scope 1272       // id: %877

// %878                                           // user: %879
bb40(%878 : $Builtin.Int64):                      // Preds: bb53 bb39
  %879 = builtin "sadd_with_overflow_Int64"(%878 : $Builtin.Int64, %22 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1289 // user: %880
  %880 = tuple_extract %879 : $(Builtin.Int64, Builtin.Int1), 0, scope 1289 // users: %999, %993, %881
  debug_value %880 : $Builtin.Int64, scope 1289   // id: %881
  %882 = alloc_stack $Optional<String>, scope 1302 // users: %886, %885, %884
  strong_retain %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %883
  %884 = apply %798<String>(%882, %749) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1302
  %885 = load %882 : $*Optional<String>, scope 1302 // users: %887, %890
  dealloc_stack %882 : $*Optional<String>, scope 1302 // id: %886
  switch_enum %885 : $Optional<String>, case #Optional.none!enumelt: bb41, case #Optional.some!enumelt.1: bb42, loc "swift.swift":76:34, scope 1305 // id: %887

bb41:                                             // Preds: bb40
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":76:34, scope 1305 // id: %888
  unreachable, loc "swift.swift":76:34, scope 1305 // id: %889

bb42:                                             // Preds: bb40
  %890 = unchecked_enum_data %885 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 1305 // users: %913, %911, %891
  debug_value %890 : $String, let, name "x", loc "swift.swift":76:7, scope 1305 // id: %891
  %892 = alloc_stack $Optional<String>, scope 1309 // users: %896, %895, %894
  strong_retain %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %893
  %894 = apply %798<String>(%892, %749) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1309
  %895 = load %892 : $*Optional<String>, scope 1309 // users: %907, %902, %897, %900
  dealloc_stack %892 : $*Optional<String>, scope 1309 // id: %896
  switch_enum %895 : $Optional<String>, case #Optional.none!enumelt: bb43, case #Optional.some!enumelt.1: bb44, loc "swift.swift":69:34, scope 1312 // id: %897

bb43:                                             // Preds: bb42
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":69:34, scope 1312 // id: %898
  unreachable, loc "swift.swift":69:34, scope 1312 // id: %899

bb44:                                             // Preds: bb42
  %900 = unchecked_enum_data %895 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 1312 // users: %903, %901
  debug_value %900 : $String, let, name "x", loc "swift.swift":69:7, scope 1312 // id: %901
  retain_value %895 : $Optional<String>, scope 467 // id: %902
  %903 = apply %133(%900, %136, %134) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 1312 // users: %904, %910
  switch_enum %903 : $Optional<Int>, case #Optional.none!enumelt: bb45, case #Optional.some!enumelt.1: bb46, loc "swift.swift":70:16, scope 1312 // id: %904

bb45:                                             // Preds: bb44
  cond_fail %1 : $Builtin.Int1, loc "swift.swift":70:16, scope 1312 // id: %905
  unreachable, loc "swift.swift":70:16, scope 1312 // id: %906

bb46:                                             // Preds: bb44
  release_value %895 : $Optional<String>, scope 467 // id: %907
  strong_release %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %908
  strong_release %745 : $_IteratorBox<IndexingIterator<Array<String>>>, scope 467 // id: %909
  %910 = unchecked_enum_data %903 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 1312 // users: %913, %912
  debug_value %890 : $String, let, name "name", argno 1, loc "swift.swift":9:7, scope 1316 // id: %911
  debug_value %910 : $Int, let, name "age", argno 2, loc "swift.swift":9:21, scope 1316 // id: %912
  %913 = struct $Employee (%890 : $String, %910 : $Int), loc "swift.swift":88:44, scope 1317 // users: %992, %988, %962, %914
  debug_value %913 : $Employee, scope 1321        // id: %914
  debug_value_addr %796 : $*Array<Employee>, scope 1321 // id: %915
  debug_value_addr %796 : $*Array<Employee>, scope 1325 // id: %916
  %917 = struct_element_addr %796 : $*Array<Employee>, #Array._buffer, scope 1325 // users: %966, %920, %919, %918
  debug_value_addr %917 : $*_ArrayBuffer<Employee>, scope 1330 // id: %918
  debug_value_addr %917 : $*_ArrayBuffer<Employee>, scope 1336 // id: %919
  %920 = struct_element_addr %917 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 1336 // users: %922, %921
  debug_value_addr %920 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1336 // id: %921
  %922 = struct_element_addr %920 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1336 // users: %1000, %980, %968, %928, %923
  %923 = unchecked_addr_cast %922 : $*Builtin.BridgeObject to $*Builtin.NativeObject, scope 1336 // user: %924
  %924 = is_unique %923 : $*Builtin.NativeObject, scope 1336 // user: %925
  %925 = builtin "int_expect_Int1"(%924 : $Builtin.Int1, %1 : $Builtin.Int1) : $Builtin.Int1, scope 1325 // user: %926
  cond_br %925, bb47, bb54, scope 1325            // id: %926

bb47:                                             // Preds: bb46
  br bb48, scope 467                              // id: %927

bb48:                                             // Preds: bb47 bb54
  %928 = load %922 : $*Builtin.BridgeObject, scope 1321 // users: %931, %929
  %929 = unchecked_ref_cast %928 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1345 // user: %935
  %930 = builtin "onFastPath"() : $(), scope 1357
  %931 = ref_to_raw_pointer %928 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1365 // user: %933
  %932 = builtin "onFastPath"() : $(), scope 1372
  %933 = index_raw_pointer %931 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1357 // user: %934
  %934 = pointer_to_address %933 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1375 // user: %935
  %935 = mark_dependence %934 : $*_ArrayBody on %929 : $Builtin.NativeObject, scope 1375 // user: %936
  %936 = struct_element_addr %935 : $*_ArrayBody, #_ArrayBody._storage, scope 1375 // users: %951, %937
  %937 = struct_element_addr %936 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1375 // user: %938
  %938 = struct_element_addr %937 : $*Int, #Int._value, scope 1375 // user: %939
  %939 = load %938 : $*Builtin.Int64, scope 1375  // user: %940
  %940 = builtin "assumeNonNegative_Int64"(%939 : $Builtin.Int64) : $Builtin.Int64, scope 1375 // users: %990, %945, %941
  %941 = struct $Int (%940 : $Builtin.Int64), scope 1375 // users: %964, %960, %944, %942
  debug_value %941 : $Int, scope 1321             // id: %942
  debug_value_addr %796 : $*Array<Employee>, scope 1379 // id: %943
  debug_value %941 : $Int, scope 1379             // id: %944
  %945 = builtin "sadd_with_overflow_Int64"(%940 : $Builtin.Int64, %22 : $Builtin.Int64, %1 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1379 // users: %947, %946
  %946 = tuple_extract %945 : $(Builtin.Int64, Builtin.Int1), 0, scope 1379 // users: %965, %955
  %947 = tuple_extract %945 : $(Builtin.Int64, Builtin.Int1), 1, scope 1379 // user: %948
  cond_fail %947 : $Builtin.Int1, scope 1379      // id: %948
  %949 = builtin "onFastPath"() : $(), scope 1389
  %950 = builtin "onFastPath"() : $(), scope 1394
  %951 = struct_element_addr %936 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1398 // user: %952
  %952 = struct_element_addr %951 : $*UInt, #UInt._value, scope 1398 // user: %953
  %953 = load %952 : $*Builtin.Int64, scope 1398  // user: %954
  %954 = builtin "lshr_Int64"(%953 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int64, scope 1398 // user: %955
  %955 = builtin "cmp_sgt_Int64"(%946 : $Builtin.Int64, %954 : $Builtin.Int64) : $Builtin.Int1, scope 1379 // user: %956
  %956 = builtin "int_expect_Int1"(%955 : $Builtin.Int1, %56 : $Builtin.Int1) : $Builtin.Int1, scope 1379 // user: %957
  cond_br %956, bb50, bb49, scope 1379            // id: %957

bb49:                                             // Preds: bb48
  br bb51, scope 467                              // id: %958

bb50:                                             // Preds: bb48
  // function_ref specialized Array._copyToNewBuffer(oldCount : Int) -> ()
  %959 = function_ref @_TTSg5V4Main8Employee___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1379 // user: %960
  %960 = apply %959(%941, %796) : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1379
  br bb51, scope 1379                             // id: %961

bb51:                                             // Preds: bb49 bb50
  debug_value %913 : $Employee, scope 1402        // id: %962
  debug_value_addr %796 : $*Array<Employee>, scope 1402 // id: %963
  debug_value %941 : $Int, scope 1402             // id: %964
  %965 = struct $Int (%946 : $Builtin.Int64), scope 1402 // users: %979, %976, %969, %967
  debug_value_addr %917 : $*_ArrayBuffer<Employee>, scope 1407 // id: %966
  debug_value %965 : $Int, scope 1407             // id: %967
  %968 = load %922 : $*Builtin.BridgeObject, scope 1407 // user: %971
  debug_value %965 : $Int, scope 1413             // id: %969
  %970 = builtin "onFastPath"() : $(), scope 1419
  %971 = ref_to_raw_pointer %968 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1424 // user: %973
  %972 = builtin "onFastPath"() : $(), scope 1429
  %973 = index_raw_pointer %971 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1419 // user: %974
  %974 = pointer_to_address %973 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1413 // users: %977, %975
  debug_value_addr %974 : $*_ArrayBody, scope 1413 // id: %975
  debug_value %965 : $Int, scope 1413             // id: %976
  %977 = struct_element_addr %974 : $*_ArrayBody, #_ArrayBody._storage, scope 1413 // user: %978
  %978 = struct_element_addr %977 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1413 // user: %979
  store %965 to %978 : $*Int, scope 1413          // id: %979
  %980 = load %922 : $*Builtin.BridgeObject, scope 1402 // users: %994, %982
  %981 = builtin "onFastPath"() : $(), scope 1433
  %982 = ref_to_raw_pointer %980 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1440 // user: %987
  %983 = builtin "onFastPath"() : $(), scope 1443
  %984 = builtin "onFastPath"() : $(), scope 1446
  %985 = tuple_extract %839 : $(Builtin.Int64, Builtin.Int1), 0, scope 1443 // user: %986
  %986 = builtin "truncOrBitCast_Int64_Word"(%985 : $Builtin.Int64) : $Builtin.Word, scope 1433 // user: %987
  %987 = index_raw_pointer %982 : $Builtin.RawPointer, %986 : $Builtin.Word, scope 1433 // user: %989
  debug_value %913 : $Employee, scope 1451        // id: %988
  %989 = pointer_to_address %987 : $Builtin.RawPointer to [strict] $*Employee, scope 1451 // user: %991
  %990 = builtin "truncOrBitCast_Int64_Word"(%940 : $Builtin.Int64) : $Builtin.Word, scope 1451 // user: %991
  %991 = index_addr %989 : $*Employee, %990 : $Builtin.Word, scope 1451 // user: %992
  store %913 to %991 : $*Employee, scope 1451     // id: %992
  %993 = builtin "cmp_eq_Int64"(%880 : $Builtin.Int64, %845 : $Builtin.Int64) : $Builtin.Int1, scope 1269 // user: %997
  %994 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%980 : $Builtin.BridgeObject), scope 1272 // user: %995
  %995 = struct $_ArrayBuffer<Employee> (%994 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1272 // user: %996
  %996 = struct $Array<Employee> (%995 : $_ArrayBuffer<Employee>), scope 1272 // user: %998
  cond_br %993, bb52, bb53, scope 1271            // id: %997

bb52:                                             // Preds: bb51
  br bb38(%996 : $Array<Employee>), scope 1272    // id: %998

bb53:                                             // Preds: bb51
  br bb40(%880 : $Builtin.Int64), scope 1272      // id: %999

bb54:                                             // Preds: bb46
  %1000 = load %922 : $*Builtin.BridgeObject, scope 1325 // users: %1003, %1001
  %1001 = unchecked_ref_cast %1000 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1455 // user: %1007
  %1002 = builtin "onFastPath"() : $(), scope 1458
  %1003 = ref_to_raw_pointer %1000 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1461 // user: %1005
  %1004 = builtin "onFastPath"() : $(), scope 1464
  %1005 = index_raw_pointer %1003 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1458 // user: %1006
  %1006 = pointer_to_address %1005 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1467 // user: %1007
  %1007 = mark_dependence %1006 : $*_ArrayBody on %1001 : $Builtin.NativeObject, scope 1467 // user: %1008
  %1008 = struct_element_addr %1007 : $*_ArrayBody, #_ArrayBody._storage, scope 1467 // user: %1009
  %1009 = struct_element_addr %1008 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1467 // user: %1010
  %1010 = struct_element_addr %1009 : $*Int, #Int._value, scope 1467 // user: %1011
  %1011 = load %1010 : $*Builtin.Int64, scope 1467 // user: %1012
  %1012 = builtin "assumeNonNegative_Int64"(%1011 : $Builtin.Int64) : $Builtin.Int64, scope 1467 // user: %1013
  %1013 = struct $Int (%1012 : $Builtin.Int64), scope 1467 // user: %1015
  // function_ref specialized Array._copyToNewBuffer(oldCount : Int) -> ()
  %1014 = function_ref @_TTSg5V4Main8Employee___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1325 // user: %1015
  %1015 = apply %1014(%1013, %796) : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1325
  br bb48, scope 1325                             // id: %1016

bb55:                                             // Preds: bb30
  br bb32(%194 : $Builtin.Int64), scope 983       // id: %1017

bb56:                                             // Preds: bb16
  br bb30(%51 : $Builtin.Int64), scope 983        // id: %1018

bb57:                                             // Preds: bb38
  br bb58(%166 : $Builtin.Int64), scope 1287      // id: %1019

// %1020                                          // users: %1023, %1021
bb58(%1020 : $Builtin.Int64):                     // Preds: bb62 bb57
  %1021 = builtin "cmp_sge_Int64"(%1020 : $Builtin.Int64, %194 : $Builtin.Int64) : $Builtin.Int1, scope 1287 // user: %1022
  cond_br %1021, bb59, bb61, scope 1287           // id: %1022

bb59:                                             // Preds: bb58
  br bb60(%1020 : $Builtin.Int64), scope 1287     // id: %1023

// %1024                                          // user: %1025
bb60(%1024 : $Builtin.Int64):                     // Preds: bb61 bb59
  %1025 = builtin "ssub_with_overflow_Int64"(%1024 : $Builtin.Int64, %22 : $Builtin.Int64, %56 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1287 // user: %1026
  %1026 = tuple_extract %1025 : $(Builtin.Int64, Builtin.Int1), 0, scope 1287 // user: %1027
  %1027 = struct $Int (%1026 : $Builtin.Int64), scope 1287 // user: %1028
  %1028 = apply %200(%867, %187, %1027) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1284 // users: %1044, %1036, %1030, %1029
  debug_value %1028 : $AnyObject, scope 1284      // id: %1029
  debug_value %1028 : $AnyObject, scope 1469      // id: %1030
  debug_value %130 : $Int, scope 1469             // id: %1031
  debug_value %130 : $Int, scope 1470             // id: %1032
  debug_value %130 : $Int, scope 1471             // id: %1033
  debug_value %130 : $Int, scope 1471             // id: %1034
  %1035 = builtin "onFastPath"() : $(), scope 1472
  %1036 = ref_to_raw_pointer %1028 : $AnyObject to $Builtin.RawPointer, scope 1473 // users: %1052, %1038
  %1037 = builtin "onFastPath"() : $(), scope 1474
  %1038 = index_raw_pointer %1036 : $Builtin.RawPointer, %68 : $Builtin.Word, scope 1472 // user: %1042
  debug_value %130 : $Int, scope 1471             // id: %1039
  debug_value %130 : $Int, scope 1471             // id: %1040
  debug_value %218 : $_ArrayBody, scope 1475      // id: %1041
  %1042 = pointer_to_address %1038 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1475 // user: %1043
  store %218 to %1042 : $*_ArrayBody, scope 1475  // id: %1043
  %1044 = unchecked_ref_cast %1028 : $AnyObject to $Builtin.BridgeObject, scope 1470 // user: %1045
  %1045 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%1044 : $Builtin.BridgeObject), scope 1476 // user: %1046
  %1046 = struct $_ArrayBuffer<Any> (%1045 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1476 // users: %1048, %1047
  debug_value %1046 : $_ArrayBuffer<Any>, scope 1477 // id: %1047
  %1048 = struct $Array<Any> (%1046 : $_ArrayBuffer<Any>), scope 1477 // users: %1053, %1060
  %1049 = builtin "onFastPath"() : $(), scope 1478
  %1050 = builtin "onFastPath"() : $(), scope 1479
  %1051 = builtin "onFastPath"() : $(), scope 1480
  %1052 = index_raw_pointer %1036 : $Builtin.RawPointer, %230 : $Builtin.Word, scope 1478 // user: %1054
  debug_value %1048 : $Array<Any>, scope 1283     // id: %1053
  %1054 = pointer_to_address %1052 : $Builtin.RawPointer to [strict] $*Any, loc "swift.swift":124:8, scope 468 // user: %1055
  %1055 = init_existential_addr %1054 : $*Any, $Company, loc "swift.swift":124:8, scope 468 // user: %1056
  store %856 to %1055 : $*Company, loc "swift.swift":124:8, scope 468 // id: %1056
  strong_retain %856 : $Company, scope 467        // id: %1057
  %1058 = apply %236() : $@convention(thin) () -> @owned String, loc "swift.swift":124:8, scope 468 // user: %1060
  %1059 = apply %238() : $@convention(thin) () -> @owned String, loc "swift.swift":124:8, scope 468 // user: %1060
  %1060 = apply %199(%1048, %1058, %1059) : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> (), loc "swift.swift":124:9, scope 468
  strong_release %856 : $Company, scope 467       // id: %1061
  release_value %502 : $Array<String>, scope 467  // id: %1062
  release_value %324 : $Optional<AnyObject>, scope 467 // id: %1063
  %1064 = tuple (), loc "swift.swift":125:1, scope 468 // user: %1065
  return %1064 : $(), loc "swift.swift":125:1, scope 468 // id: %1065

bb61:                                             // Preds: bb58
  br bb60(%194 : $Builtin.Int64), scope 1287      // id: %1066

bb62:                                             // Preds: bb38
  br bb58(%51 : $Builtin.Int64), scope 1287       // id: %1067
}


// print([Any], separator : String, terminator : String) -> ()
sil [noinline] [_semantics "stdlib_binary_only"] @_TFs5printFTGSaP__9separatorSS10terminatorSS_T_ : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> ()


// (print([Any], separator : String, terminator : String) -> ()).(default argument 1)
sil [noinline] [_semantics "stdlib_binary_only"] @_TIFs5printFTGSaP__9separatorSS10terminatorSS_T_A0_ : $@convention(thin) () -> @owned String


// (print([Any], separator : String, terminator : String) -> ()).(default argument 2)
sil [noinline] [_semantics "stdlib_binary_only"] @_TIFs5printFTGSaP__9separatorSS10terminatorSS_T_A1_ : $@convention(thin) () -> @owned String

sil_scope 1481 {  parent @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 : $@convention(thin) () -> () }

// globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4
sil private_external [fragile] @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 : $@convention(thin) () -> () {
bb0:
  alloc_global @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___, scope 1481 // id: %0
  %1 = global_addr @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1481 // user: %7
  // function_ref _swift_stdlib_getUnsafeArgvArgc
  %2 = function_ref @_swift_stdlib_getUnsafeArgvArgc : $@convention(c) (UnsafeMutablePointer<Int32>) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1481 // user: %6
  %3 = global_addr @_TZvOs11CommandLine5_argcVs5Int32 : $*Int32, scope 1481 // user: %4
  %4 = address_to_pointer %3 : $*Int32 to $Builtin.RawPointer, scope 1481 // user: %5
  %5 = struct $UnsafeMutablePointer<Int32> (%4 : $Builtin.RawPointer), scope 1481 // user: %6
  %6 = apply %2(%5) : $@convention(c) (UnsafeMutablePointer<Int32>) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1481 // user: %7
  store %6 to %1 : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1481 // id: %7
  %8 = tuple (), scope 1481                       // user: %9
  return %8 : $(), scope 1481                     // id: %9
}

sil_scope 1482 {  parent @_TZFSa22_allocateUninitializedfSiTGSax_GSpx__ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>) }

// static Array._allocateUninitialized(Int) -> ([A], UnsafeMutablePointer<A>)
sil public_external [fragile] [_semantics "array.uninitialized"] @_TZFSa22_allocateUninitializedfSiTGSax_GSpx__ : $@convention(method) <Element> (Int, @thin Array<Element>.Type) -> (@owned Array<Element>, UnsafeMutablePointer<Element>) {
// %0                                             // users: %5, %2
bb0(%0 : $Int, %1 : $@thin Array<Element>.Type):
  debug_value %0 : $Int, scope 1482               // id: %2
  // function_ref Array.init(_uninitializedCount : Int) -> [A]
  %3 = function_ref @_TFSaCfT19_uninitializedCountSi_GSax_ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, scope 1482 // user: %5
  %4 = metatype $@thin Array<Element>.Type, scope 1482 // user: %5
  %5 = apply %3<Element>(%0, %4) : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, scope 1482 // users: %11, %9, %12, %7, %6
  debug_value %5 : $Array<Element>, scope 1482    // id: %6
  %7 = struct_extract %5 : $Array<Element>, #Array._buffer, scope 1482 // user: %10
  // function_ref _ArrayBuffer.firstElementAddress.getter
  %8 = function_ref @_TFVs12_ArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1482 // user: %10
  retain_value %5 : $Array<Element>, scope 1482   // id: %9
  %10 = apply %8<Element>(%7) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1482 // user: %12
  release_value %5 : $Array<Element>, scope 1482  // id: %11
  %12 = tuple (%5 : $Array<Element>, %10 : $UnsafeMutablePointer<Element>), scope 1482 // user: %13
  return %12 : $(Array<Element>, UnsafeMutablePointer<Element>), scope 1482 // id: %13
}

sil_scope 1483 {  parent @_TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1> }

// ManagedBufferPointer.init(_uncheckedBufferClass : AnyObject.Type, minimumCapacity : Int) -> ManagedBufferPointer<A, B>
sil public_external [fragile] @_TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) <Header, Element> (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<Header, Element>.Type) -> @owned ManagedBufferPointer<Header, Element> {
// %0                                             // users: %30, %9, %3
// %1                                             // users: %15, %4
bb0(%0 : $@thick AnyObject.Type, %1 : $Int, %2 : $@thin ManagedBufferPointer<Header, Element>.Type):
  debug_value %0 : $@thick AnyObject.Type, scope 1483 // id: %3
  debug_value %1 : $Int, scope 1483               // id: %4
  // function_ref static ManagedBufferPointer._sanityCheckValidBufferClass(AnyObject.Type, creating : Bool) -> ()
  %5 = function_ref @_TZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassfTPMPs9AnyObject_8creatingSb_T_ : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Bool, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> (), scope 1483 // user: %9
  %6 = metatype $@thin ManagedBufferPointer<Header, Element>.Type, scope 1483 // users: %29, %11, %9
  %7 = integer_literal $Builtin.Int1, -1, scope 1483 // users: %21, %16, %8
  %8 = struct $Bool (%7 : $Builtin.Int1), scope 1483 // user: %9
  %9 = apply %5<Header, Element>(%0, %8, %6) : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Bool, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> (), scope 1483
  // function_ref static ManagedBufferPointer._elementOffset.getter
  %10 = function_ref @_TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1483 // user: %11
  %11 = apply %10<Header, Element>(%6) : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1483 // user: %20
  %12 = metatype $@thick Element.Type, scope 1483 // user: %13
  %13 = builtin "strideof_nonzero"<Element>(%12 : $@thick Element.Type) : $Builtin.Word, scope 1483 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 1483 // user: %16
  %15 = struct_extract %1 : $Int, #Int._value, scope 1483 // user: %16
  %16 = builtin "smul_with_overflow_Int64"(%15 : $Builtin.Int64, %14 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1483 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 1483 // user: %21
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, scope 1483 // user: %19
  cond_fail %18 : $Builtin.Int1, scope 1483       // id: %19
  %20 = struct_extract %11 : $Int, #Int._value, scope 1483 // user: %21
  %21 = builtin "sadd_with_overflow_Int64"(%20 : $Builtin.Int64, %17 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1483 // users: %23, %22
  %22 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 0, scope 1483 // user: %25
  %23 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 1, scope 1483 // user: %24
  cond_fail %23 : $Builtin.Int1, scope 1483       // id: %24
  %25 = struct $Int (%22 : $Builtin.Int64), scope 1483 // users: %30, %26
  debug_value %25 : $Int, scope 1483              // id: %26
  // function_ref swift_bufferAllocate
  %27 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1483 // user: %30
  // function_ref static ManagedBufferPointer._alignmentMask.getter
  %28 = function_ref @_TZFVs20ManagedBufferPointerg14_alignmentMaskSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1483 // user: %29
  %29 = apply %28<Header, Element>(%6) : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1483 // user: %30
  %30 = apply %27(%0, %25, %29) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1483 // users: %32, %31
  debug_value %30 : $AnyObject, scope 1483        // id: %31
  %32 = open_existential_ref %30 : $AnyObject to $@opened("2BDEF21C-F9C8-11E6-91E8-A8667F09828A") AnyObject, scope 1483 // user: %33
  %33 = unchecked_ref_cast %32 : $@opened("2BDEF21C-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.NativeObject, scope 1483 // user: %34
  %34 = struct $ManagedBufferPointer<Header, Element> (%33 : $Builtin.NativeObject), scope 1483 // user: %35
  return %34 : $ManagedBufferPointer<Header, Element>, scope 1483 // id: %35
}

sil_scope 1484 {  parent @_TZFSa13_adoptStoragefTPs9AnyObject_5countSi_TGSax_GSpx__ : $@convention(method) <τ_0_0> (@owned AnyObject, Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>) }

// static Array._adoptStorage(AnyObject, count : Int) -> ([A], UnsafeMutablePointer<A>)
sil public_external [fragile] [_semantics "array.uninitialized"] @_TZFSa13_adoptStoragefTPs9AnyObject_5countSi_TGSax_GSpx__ : $@convention(method) <Element> (@owned AnyObject, Int, @thin Array<Element>.Type) -> (@owned Array<Element>, UnsafeMutablePointer<Element>) {
// %0                                             // users: %23, %8, %7, %3
// %1                                             // users: %9, %4
bb0(%0 : $AnyObject, %1 : $Int, %2 : $@thin Array<Element>.Type):
  debug_value %0 : $AnyObject, scope 1484         // id: %3
  debug_value %1 : $Int, scope 1484               // id: %4
  // function_ref _ContiguousArrayBuffer.init(count : Int, storage : _ContiguousArrayStorage<A>) -> _ContiguousArrayBuffer<A>
  %5 = function_ref @_TFVs22_ContiguousArrayBufferCfT5countSi7storageGCs23_ContiguousArrayStoragex__GS_x_ : $@convention(method) <τ_0_0> (Int, @owned _ContiguousArrayStorage<τ_0_0>, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1484 // user: %9
  %6 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 1484 // user: %9
  %7 = unchecked_ref_cast %0 : $AnyObject to $_ContiguousArrayStorage<Element>, scope 1484 // user: %9
  strong_retain %0 : $AnyObject, scope 1484       // id: %8
  %9 = apply %5<Element>(%1, %7, %6) : $@convention(method) <τ_0_0> (Int, @owned _ContiguousArrayStorage<τ_0_0>, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1484 // users: %22, %17, %21, %18, %10
  debug_value %9 : $_ContiguousArrayBuffer<Element>, scope 1484 // id: %10
  // function_ref Array.init(_buffer : _ArrayBuffer<A>) -> [A]
  %11 = function_ref @_TFSaCfT7_bufferGVs12_ArrayBufferx__GSax_ : $@convention(method) <τ_0_0> (@owned _ArrayBuffer<τ_0_0>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, scope 1484 // user: %19
  %12 = metatype $@thin Array<Element>.Type, scope 1484 // user: %19
  // function_ref _ArrayBuffer.init(_ContiguousArrayBuffer<A>, shiftedToStartIndex : Int) -> _ArrayBuffer<A>
  %13 = function_ref @_TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1484 // user: %18
  %14 = metatype $@thin _ArrayBuffer<Element>.Type, scope 1484 // user: %18
  %15 = integer_literal $Builtin.Int64, 0, scope 1484 // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64), scope 1484 // user: %18
  retain_value %9 : $_ContiguousArrayBuffer<Element>, scope 1484 // id: %17
  %18 = apply %13<Element>(%9, %16, %14) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1484 // user: %19
  %19 = apply %11<Element>(%18, %12) : $@convention(method) <τ_0_0> (@owned _ArrayBuffer<τ_0_0>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>, scope 1484 // user: %24
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %20 = function_ref @_TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1484 // user: %21
  %21 = apply %20<Element>(%9) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1484 // user: %24
  release_value %9 : $_ContiguousArrayBuffer<Element>, scope 1484 // id: %22
  strong_release %0 : $AnyObject, scope 1484      // id: %23
  %24 = tuple (%19 : $Array<Element>, %21 : $UnsafeMutablePointer<Element>), scope 1484 // user: %25
  return %24 : $(Array<Element>, UnsafeMutablePointer<Element>), scope 1484 // id: %25
}

sil_scope 1485 {  parent @_TFVs20ManagedBufferPointerg6bufferPs9AnyObject_ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> @owned AnyObject }

// ManagedBufferPointer.buffer.getter
sil public_external [fragile] @_TFVs20ManagedBufferPointerg6bufferPs9AnyObject_ : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> @owned AnyObject {
// %0                                             // users: %4, %2, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1485 // id: %1
  %2 = struct_extract %0 : $ManagedBufferPointer<Header, Element>, #ManagedBufferPointer._nativeBuffer, scope 1485 // user: %3
  %3 = unchecked_ref_cast %2 : $Builtin.NativeObject to $AnyObject, scope 1485 // user: %5
  retain_value %0 : $ManagedBufferPointer<Header, Element>, scope 1485 // id: %4
  return %3 : $AnyObject, scope 1485              // id: %5
}


// _ContiguousArrayStorage.init() -> _ContiguousArrayStorage<A>
sil hidden_external [fragile] @_TFCs23_ContiguousArrayStoragecfT_GS_x_ : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>) -> @owned _ContiguousArrayStorage<Element>


// _ContiguousArrayStorageBase.withUnsafeBufferOfObjects<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A
sil hidden_external [fragile] @_TFCs27_ContiguousArrayStorageBase25withUnsafeBufferOfObjectsurfzFzGSRPs9AnyObject__xx : $@convention(method) <R> (@owned @callee_owned (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), @guaranteed _ContiguousArrayStorageBase) -> (@out R, @error Error)


// _ContiguousArrayStorage1._withVerbatimBridgedUnsafeBuffer<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A?
sil hidden_external [fragile] @_TFCs24_ContiguousArrayStorage132_withVerbatimBridgedUnsafeBufferurfzFzGSRPs9AnyObject__xGSqx_ : $@convention(method) <R> (@owned @callee_owned (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), @guaranteed _ContiguousArrayStorage1) -> (@out Optional<R>, @error Error)


// _ContiguousArrayStorage._getNonVerbatimBridgedCount() -> Int
sil hidden_external [fragile] @_TFCs23_ContiguousArrayStorage27_getNonVerbatimBridgedCountfT_Si : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> Int


// _ContiguousArrayStorage._getNonVerbatimBridgedHeapBuffer() -> _HeapBuffer<Int, AnyObject>
sil hidden_external [fragile] @_TFCs23_ContiguousArrayStorage32_getNonVerbatimBridgedHeapBufferfT_GVs11_HeapBufferSiPs9AnyObject__ : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @owned _HeapBuffer<Int, AnyObject>


// _ContiguousArrayStorage.staticElementType.getter
sil hidden_external [fragile] @_TFCs23_ContiguousArrayStorageg17staticElementTypePMP_ : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @thick Any.Type


// _ContiguousArrayStorage._withVerbatimBridgedUnsafeBufferImpl((UnsafeBufferPointer<AnyObject>) throws -> ()) throws -> ()
sil hidden_external [fragile] @_TFCs23_ContiguousArrayStorage36_withVerbatimBridgedUnsafeBufferImplfzFzGSRPs9AnyObject__T_T_ : $@convention(method) <Element> (@owned @callee_owned (UnsafeBufferPointer<AnyObject>) -> @error Error, @guaranteed _ContiguousArrayStorage<Element>) -> @error Error


// _ContiguousArrayStorage.__deallocating_deinit
sil hidden_external [fragile] @_TFCs23_ContiguousArrayStorageD : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>) -> ()


// _ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A?
sil hidden_external [fragile] @_TFCs27_ContiguousArrayStorageBase32_withVerbatimBridgedUnsafeBufferurfzFzGSRPs9AnyObject__xGSqx_ : $@convention(method) <R> (@owned @callee_owned (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), @guaranteed _ContiguousArrayStorageBase) -> (@out Optional<R>, @error Error)

sil_scope 1486 {  parent @_TFVs20ManagedBufferPointerlo6headerx : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> (UnsafePointer<τ_0_0>, @owned Builtin.NativeObject) }

// ManagedBufferPointer.header.nativeOwningAddressor
sil public_external [fragile] @_TFVs20ManagedBufferPointerlo6headerx : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> (UnsafePointer<Header>, @owned Builtin.NativeObject) {
// %0                                             // users: %8, %6, %3, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1486 // id: %1
  // function_ref ManagedBufferPointer._headerPointer.getter
  %2 = function_ref @_TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0>, scope 1486 // user: %3
  %3 = apply %2<Header, Element>(%0) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0>, scope 1486 // user: %4
  %4 = struct_extract %3 : $UnsafeMutablePointer<Header>, #UnsafeMutablePointer._rawValue, scope 1486 // user: %5
  %5 = struct $UnsafePointer<Header> (%4 : $Builtin.RawPointer), scope 1486 // user: %7
  %6 = struct_extract %0 : $ManagedBufferPointer<Header, Element>, #ManagedBufferPointer._nativeBuffer, scope 1486 // user: %7
  %7 = tuple (%5 : $UnsafePointer<Header>, %6 : $Builtin.NativeObject), scope 1486 // user: %9
  retain_value %0 : $ManagedBufferPointer<Header, Element>, scope 1486 // id: %8
  return %7 : $(UnsafePointer<Header>, Builtin.NativeObject), scope 1486 // id: %9
}

sil_scope 1487 {  parent @_TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_1> }

// ManagedBufferPointer._elementPointer.getter
sil hidden_external [fragile] @_TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> UnsafeMutablePointer<Element> {
// %0                                             // users: %4, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1487 // id: %1
  %2 = builtin "onFastPath"() : $(), scope 1487
  // function_ref ManagedBufferPointer._address.getter
  %3 = function_ref @_TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer, scope 1487 // user: %4
  %4 = apply %3<Header, Element>(%0) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer, scope 1487 // users: %9, %8
  %5 = metatype $@thin ManagedBufferPointer<Header, Element>.Type, scope 1487 // user: %7
  // function_ref static ManagedBufferPointer._elementOffset.getter
  %6 = function_ref @_TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1487 // user: %7
  %7 = apply %6<Header, Element>(%5) : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1487 // users: %11, %10
  %8 = struct_extract %4 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1487 // user: %13
  debug_value %4 : $UnsafeMutableRawPointer, scope 1487 // id: %9
  %10 = struct_extract %7 : $Int, #Int._value, scope 1487 // user: %12
  debug_value %7 : $Int, scope 1487               // id: %11
  %12 = builtin "truncOrBitCast_Int64_Word"(%10 : $Builtin.Int64) : $Builtin.Word, scope 1487 // user: %13
  %13 = index_raw_pointer %8 : $Builtin.RawPointer, %12 : $Builtin.Word, scope 1487 // user: %14
  %14 = struct $UnsafeMutablePointer<Element> (%13 : $Builtin.RawPointer), scope 1487 // user: %15
  return %14 : $UnsafeMutablePointer<Element>, scope 1487 // id: %15
}

sil_scope 1488 {  parent @_TFs30_isBridgedVerbatimToObjectiveCurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool }

// _isBridgedVerbatimToObjectiveC<A> (A.Type) -> Bool
sil public_external [fragile] @_TFs30_isBridgedVerbatimToObjectiveCurFMxSb : $@convention(thin) <T> (@thick T.Type) -> Bool {
bb0(%0 : $@thick T.Type):
  // function_ref _isClassOrObjCExistential<A> (A.Type) -> Bool
  %1 = function_ref @_TFs25_isClassOrObjCExistentialurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1488 // user: %3
  %2 = metatype $@thick T.Type, scope 1488        // user: %3
  %3 = apply %1<T>(%2) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1488 // user: %4
  return %3 : $Bool, scope 1488                   // id: %4
}


// _HeapBufferStorage.init() -> _HeapBufferStorage<A, B>
sil [fragile] @_TFCs18_HeapBufferStoragecfT_GS_xq__ : $@convention(method) <Value, Element> (@owned _HeapBufferStorage<Value, Element>) -> @owned _HeapBufferStorage<Value, Element>


// _HeapBufferStorage.__deallocating_deinit
sil [fragile] @_TFCs18_HeapBufferStorageD : $@convention(method) <Value, Element> (@owned _HeapBufferStorage<Value, Element>) -> ()


// swift_bufferAllocate
sil hidden_external [fragile] @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject

sil_scope 1489 {  parent @_TTSgq5SSSSs20TextOutputStreamables___TFs27_toStringReadOnlyStreamableuRxs20TextOutputStreamablerFxSS : $@convention(thin) (@owned String) -> @owned String }

// specialized _toStringReadOnlyStreamable<A where ...> (A) -> String
sil shared_external [fragile] [noinline] [readonly] @_TTSgq5SSSSs20TextOutputStreamables___TFs27_toStringReadOnlyStreamableuRxs20TextOutputStreamablerFxSS : $@convention(thin) (@owned String) -> @owned String {
// %0                                             // users: %5, %4, %3, %2, %1
bb0(%0 : $String):
  debug_value %0 : $String, scope 1489            // id: %1
  debug_value %0 : $String, scope 1489            // id: %2
  debug_value %0 : $String, scope 1489            // id: %3
  debug_value %0 : $String, scope 1489            // id: %4
  return %0 : $String, scope 1489                 // id: %5
}

sil_scope 1490 {  parent @_TTSgq5SiSis23CustomStringConvertibles___TFs26_toStringReadOnlyPrintableuRxs23CustomStringConvertiblerFxSS : $@convention(thin) (Int) -> @owned String }
sil_scope 1491 {  parent @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8> }
sil_scope 1492 {  parent 1490 }
sil_scope 1493 {  parent 1491 inlined_at 1492 }

// specialized _toStringReadOnlyPrintable<A where ...> (A) -> String
sil shared_external [fragile] [noinline] [readonly] @_TTSgq5SiSis23CustomStringConvertibles___TFs26_toStringReadOnlyPrintableuRxs23CustomStringConvertiblerFxSS : $@convention(thin) (Int) -> @owned String {
// %0                                             // users: %2, %1
bb0(%0 : $Int):
  %1 = struct_extract %0 : $Int, #Int._value, scope 1490 // user: %3
  debug_value %0 : $Int, scope 1490               // id: %2
  %3 = struct $Int64 (%1 : $Builtin.Int64), scope 1490 // users: %27, %21, %9
  %4 = integer_literal $Builtin.Int64, 10, scope 1490 // user: %5
  %5 = struct $Int64 (%4 : $Builtin.Int64), scope 1490 // users: %27, %22, %10
  %6 = integer_literal $Builtin.Int1, 0, scope 1490 // users: %104, %46, %284, %280, %7
  %7 = struct $Bool (%6 : $Builtin.Int1), scope 1490 // users: %62, %56, %27, %23, %11
  %8 = alloc_stack $_Buffer32, scope 1490         // users: %239, %18, %17, %16, %15
  debug_value %3 : $Int64, scope 1490             // id: %9
  debug_value %5 : $Int64, scope 1490             // id: %10
  debug_value %7 : $Bool, scope 1490              // id: %11
  %12 = integer_literal $Builtin.Int8, 0, scope 1490 // user: %13
  %13 = struct $UInt8 (%12 : $Builtin.Int8), scope 1490 // users: %66, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14
  %14 = struct $_Buffer32 (%13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8, %13 : $UInt8), scope 1490 // user: %15
  store %14 to %8 : $*_Buffer32, scope 1490       // id: %15
  debug_value_addr %8 : $*_Buffer32, scope 1490   // id: %16
  debug_value_addr %8 : $*_Buffer32, scope 1490   // id: %17
  %18 = address_to_pointer %8 : $*_Buffer32 to $Builtin.RawPointer, scope 1490 // users: %49, %29, %19
  %19 = struct $UnsafeMutablePointer<UInt8> (%18 : $Builtin.RawPointer), scope 1490 // users: %27, %20
  debug_value %19 : $UnsafeMutablePointer<UInt8>, scope 1490 // id: %20
  debug_value %3 : $Int64, scope 1490             // id: %21
  debug_value %5 : $Int64, scope 1490             // id: %22
  debug_value %7 : $Bool, scope 1490              // id: %23
  // function_ref swift_int64ToString
  %24 = function_ref @swift_int64ToString : $@convention(thin) (UnsafeMutablePointer<UInt8>, UInt, Int64, Int64, Bool) -> UInt, scope 1490 // user: %27
  %25 = integer_literal $Builtin.Int64, 32, scope 1490 // user: %26
  %26 = struct $UInt (%25 : $Builtin.Int64), scope 1490 // user: %27
  %27 = apply %24(%19, %26, %3, %5, %7) : $@convention(thin) (UnsafeMutablePointer<UInt8>, UInt, Int64, Int64, Bool) -> UInt, scope 1490 // users: %31, %28
  debug_value %27 : $UInt, scope 1490             // id: %28
  %29 = struct $UnsafePointer<UInt8> (%18 : $Builtin.RawPointer), scope 1490 // users: %42, %30
  %30 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %29 : $UnsafePointer<UInt8>, scope 1490 // users: %52, %36
  %31 = struct_extract %27 : $UInt, #UInt._value, scope 1490 // user: %32
  %32 = builtin "u_to_s_checked_conversion_Int64"(%31 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1490 // users: %34, %33
  %33 = tuple_extract %32 : $(Builtin.Int64, Builtin.Int1), 0, scope 1490 // users: %38, %46
  %34 = tuple_extract %32 : $(Builtin.Int64, Builtin.Int1), 1, scope 1490 // user: %35
  cond_fail %34 : $Builtin.Int1, scope 1490       // id: %35
  debug_value %30 : $Optional<UnsafePointer<UInt8>>, scope 1493 // id: %36
  %37 = integer_literal $Builtin.Int64, 0, scope 1493 // users: %57, %69, %93, %38
  %38 = builtin "cmp_sge_Int64"(%33 : $Builtin.Int64, %37 : $Builtin.Int64) : $Builtin.Int1, scope 1493 // user: %40
  %39 = integer_literal $Builtin.Int1, -1, scope 1493 // users: %85, %203, %258, %108, %69, %159, %177, %290, %40
  %40 = builtin "xor_Int1"(%38 : $Builtin.Int1, %39 : $Builtin.Int1) : $Builtin.Int1, scope 1493 // user: %41
  cond_fail %40 : $Builtin.Int1, scope 1493       // id: %41
  debug_value %29 : $UnsafePointer<UInt8>, scope 1493 // id: %42
  %43 = metatype $@thick UInt8.Type, scope 1493   // user: %44
  %44 = builtin "strideof_nonzero"<UInt8>(%43 : $@thick UInt8.Type) : $Builtin.Word, scope 1493 // users: %256, %45
  %45 = builtin "zextOrBitCast_Word_Int64"(%44 : $Builtin.Word) : $Builtin.Int64, scope 1493 // user: %46
  %46 = builtin "smul_with_overflow_Int64"(%33 : $Builtin.Int64, %45 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1493 // user: %47
  %47 = tuple_extract %46 : $(Builtin.Int64, Builtin.Int1), 0, scope 1493 // user: %48
  %48 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1493 // user: %49
  %49 = index_raw_pointer %18 : $Builtin.RawPointer, %48 : $Builtin.Word, scope 1493 // user: %50
  %50 = struct $UnsafePointer<UInt8> (%49 : $Builtin.RawPointer), scope 1493 // user: %51
  %51 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %50 : $UnsafePointer<UInt8>, scope 1493 // user: %52
  %52 = struct $UnsafeBufferPointer<UInt8> (%30 : $Optional<UnsafePointer<UInt8>>, %51 : $Optional<UnsafePointer<UInt8>>), scope 1493 // users: %58, %55, %54, %53
  debug_value %52 : $UnsafeBufferPointer<UInt8>, scope 1490 // id: %53
  debug_value %52 : $UnsafeBufferPointer<UInt8>, scope 1490 // id: %54
  debug_value %52 : $UnsafeBufferPointer<UInt8>, scope 1490 // id: %55
  debug_value %7 : $Bool, scope 1490              // id: %56
  %57 = struct $Int (%37 : $Builtin.Int64), scope 1490 // users: %105, %101, %58
  %58 = struct $IndexingIterator<UnsafeBufferPointer<UInt8>> (%52 : $UnsafeBufferPointer<UInt8>, %57 : $Int), scope 1490 // users: %223, %220, %134, %131, %63, %59
  debug_value %58 : $IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %59
  %60 = alloc_stack $IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // users: %83, %72, %63
  %61 = alloc_stack $UTF8, scope 1490             // users: %82, %72, %67
  debug_value %7 : $Bool, scope 1490              // id: %62
  store %58 to %60 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %63
  %64 = integer_literal $Builtin.Int32, 0, scope 1490 // user: %65
  %65 = struct $UInt32 (%64 : $Builtin.Int32), scope 1490 // user: %66
  %66 = struct $UTF8 (%65 : $UInt32, %13 : $UInt8), scope 1490 // users: %224, %135, %67
  store %66 to %61 : $*UTF8, scope 1490           // id: %67
  // function_ref specialized UTF8.decode<A where ...> (inout A) -> UnicodeDecodingResult
  %68 = function_ref @_TTSgq5GVs16IndexingIteratorGSRVs5UInt8__GS_GSRS0___s16IteratorProtocols___TFVs4UTF86decodeuRxs16IteratorProtocolwx7ElementzVs5UInt8rfRxOs21UnicodeDecodingResult : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult, scope 1490 // users: %227, %138, %72
  br bb1(%37 : $Builtin.Int64, %39 : $Builtin.Int1), scope 1490 // id: %69

// %70                                            // users: %290, %76
// %71                                            // users: %274, %273, %77
bb1(%70 : $Builtin.Int64, %71 : $Builtin.Int1):   // Preds: bb44 bb0
  %72 = apply %68(%60, %61) : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult, scope 1490 // user: %73
  switch_enum %72 : $UnicodeDecodingResult, case #UnicodeDecodingResult.scalarValue!enumelt.1: bb35, case #UnicodeDecodingResult.emptyInput!enumelt: bb3, case #UnicodeDecodingResult.error!enumelt: bb2, scope 1490 // id: %73

bb2:                                              // Preds: bb1
  %74 = enum $Optional<(count: Int, isASCII: Bool)>, #Optional.none!enumelt, scope 1490 // user: %75
  br bb4(%74 : $Optional<(count: Int, isASCII: Bool)>), scope 1490 // id: %75

bb3:                                              // Preds: bb1
  %76 = struct $Int (%70 : $Builtin.Int64), scope 1490 // user: %78
  %77 = struct $Bool (%71 : $Builtin.Int1), scope 1490 // user: %78
  %78 = tuple $(count: Int, isASCII: Bool) (%76, %77), scope 1490 // user: %79
  %79 = enum $Optional<(count: Int, isASCII: Bool)>, #Optional.some!enumelt.1, %78 : $(count: Int, isASCII: Bool), scope 1490 // user: %80
  br bb4(%79 : $Optional<(count: Int, isASCII: Bool)>), scope 1490 // id: %80

// %81                                            // user: %84
bb4(%81 : $Optional<(count: Int, isASCII: Bool)>): // Preds: bb3 bb2
  dealloc_stack %61 : $*UTF8, scope 1490          // id: %82
  dealloc_stack %60 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %83
  switch_enum %81 : $Optional<(count: Int, isASCII: Bool)>, case #Optional.some!enumelt.1: bb6, case #Optional.none!enumelt: bb5, scope 1490 // id: %84

bb5:                                              // Preds: bb4
  cond_fail %39 : $Builtin.Int1, scope 1490       // id: %85
  unreachable, scope 1490                         // id: %86

// %87                                            // users: %90, %88
bb6(%87 : $(count: Int, isASCII: Bool)):          // Preds: bb4
  %88 = tuple_extract %87 : $(count: Int, isASCII: Bool), 0, scope 1490 // users: %114, %98, %97, %92, %89
  debug_value %88 : $Int, scope 1490              // id: %89
  %90 = tuple_extract %87 : $(count: Int, isASCII: Bool), 1, scope 1490 // users: %99, %95, %91
  debug_value %90 : $Bool, scope 1490             // id: %91
  %92 = struct_extract %88 : $Int, #Int._value, scope 1490 // user: %93
  %93 = builtin "cmp_sge_Int64"(%37 : $Builtin.Int64, %92 : $Builtin.Int64) : $Builtin.Int1, scope 1490 // user: %94
  cond_br %93, bb10, bb7, scope 1490              // id: %94

bb7:                                              // Preds: bb6
  %95 = struct_extract %90 : $Bool, #Bool._value, scope 1490 // user: %96
  cond_br %95, bb9, bb8, scope 1490               // id: %96

bb8:                                              // Preds: bb7
  br bb12(%88 : $Int), scope 1490                 // id: %97

bb9:                                              // Preds: bb7
  br bb14(%88 : $Int), scope 1490                 // id: %98

bb10:                                             // Preds: bb6
  %99 = struct_extract %90 : $Bool, #Bool._value, scope 1490 // user: %100
  cond_br %99, bb13, bb11, scope 1490             // id: %100

bb11:                                             // Preds: bb10
  br bb12(%57 : $Int), scope 1490                 // id: %101

// %102                                           // user: %104
bb12(%102 : $Int):                                // Preds: bb11 bb8
  %103 = integer_literal $Builtin.Int64, 2, scope 1490 // user: %104
  br bb15(%103 : $Builtin.Int64, %102 : $Int, %6 : $Builtin.Int1), scope 1490 // id: %104

bb13:                                             // Preds: bb10
  br bb14(%57 : $Int), scope 1490                 // id: %105

// %106                                           // user: %108
bb14(%106 : $Int):                                // Preds: bb13 bb9
  %107 = integer_literal $Builtin.Int64, 1, scope 1490 // user: %108
  br bb15(%107 : $Builtin.Int64, %106 : $Int, %39 : $Builtin.Int1), scope 1490 // id: %108

// %109                                           // user: %112
// %110                                           // user: %114
// %111                                           // user: %116
bb15(%109 : $Builtin.Int64, %110 : $Int, %111 : $Builtin.Int1): // Preds: bb14 bb12
  %112 = struct $Int (%109 : $Builtin.Int64), scope 1490 // user: %114
  // function_ref specialized _StringBuffer.init(capacity : Int, initialSize : Int, elementWidth : Int) -> _StringBuffer
  %113 = function_ref @_TTSfq4n_n_n_d___TFVs13_StringBufferCfT8capacitySi11initialSizeSi12elementWidthSi_S_ : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer, scope 1490 // user: %114
  %114 = apply %113(%110, %88, %112) : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer, scope 1490 // users: %237, %235, %234, %206, %205, %117, %115
  debug_value %114 : $_StringBuffer, scope 1490   // id: %115
  cond_br %111, bb26, bb16, scope 1490            // id: %116

bb16:                                             // Preds: bb15
  %117 = struct_extract %114 : $_StringBuffer, #_StringBuffer._storage, scope 1490 // users: %123, %122, %119, %118
  %118 = struct_extract %117 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1490 // users: %125, %124
  debug_value %117 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1490 // id: %119
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %120 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1490 // user: %121
  %121 = apply %120() : $@convention(thin) () -> Int, scope 1490 // users: %128, %127
  debug_value %117 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1490 // id: %122
  debug_value %117 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1490 // id: %123
  switch_enum %118 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb25, case #Optional.some!enumelt.1: bb17, scope 1490 // id: %124

bb17:                                             // Preds: bb16
  %125 = unchecked_enum_data %118 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1490 // user: %126
  %126 = ref_to_raw_pointer %125 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1490 // user: %130
  %127 = struct_extract %121 : $Int, #Int._value, scope 1490 // user: %129
  debug_value %121 : $Int, scope 1490             // id: %128
  %129 = builtin "truncOrBitCast_Int64_Word"(%127 : $Builtin.Int64) : $Builtin.Word, scope 1490 // user: %130
  %130 = index_raw_pointer %126 : $Builtin.RawPointer, %129 : $Builtin.Word, scope 1490 // user: %136
  debug_value %58 : $IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %131
  %132 = alloc_stack $IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // users: %143, %138, %134
  %133 = alloc_stack $UTF8, scope 1490            // users: %142, %138, %135
  store %58 to %132 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %134
  store %66 to %133 : $*UTF8, scope 1490          // id: %135
  br bb18(%130 : $Builtin.RawPointer), scope 1490 // id: %136

// %137                                           // users: %201, %197, %173, %169
bb18(%137 : $Builtin.RawPointer):                 // Preds: bb24 bb23 bb17
  %138 = apply %68(%132, %133) : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult, scope 1490 // user: %139
  switch_enum %138 : $UnicodeDecodingResult, case #UnicodeDecodingResult.scalarValue!enumelt.1: bb22, case #UnicodeDecodingResult.emptyInput!enumelt: bb20, case #UnicodeDecodingResult.error!enumelt: bb19, scope 1490 // id: %139

bb19:                                             // Preds: bb18
  br bb21, scope 1490                             // id: %140

bb20:                                             // Preds: bb18
  br bb21, scope 1490                             // id: %141

bb21:                                             // Preds: bb20 bb19
  dealloc_stack %133 : $*UTF8, scope 1490         // id: %142
  dealloc_stack %132 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %143
  br bb32, scope 1490                             // id: %144

// %145                                           // users: %150, %149, %148, %147, %146
bb22(%145 : $UnicodeScalar):                      // Preds: bb18
  debug_value %145 : $UnicodeScalar, scope 1490   // id: %146
  debug_value %145 : $UnicodeScalar, scope 1490   // id: %147
  debug_value %145 : $UnicodeScalar, scope 1490   // id: %148
  debug_value %145 : $UnicodeScalar, scope 1490   // id: %149
  %150 = struct_extract %145 : $UnicodeScalar, #UnicodeScalar._value, scope 1490 // users: %153, %151
  debug_value %150 : $UInt32, scope 1490          // id: %151
  %152 = integer_literal $Builtin.Int32, 65535, scope 1490 // user: %154
  %153 = struct_extract %150 : $UInt32, #UInt32._value, scope 1490 // users: %191, %176, %158, %154
  %154 = builtin "cmp_ule_Int32"(%153 : $Builtin.Int32, %152 : $Builtin.Int32) : $Builtin.Int1, scope 1490 // user: %155
  cond_br %154, bb24, bb23, scope 1490            // id: %155

bb23:                                             // Preds: bb22
  %156 = integer_literal $Builtin.Int32, 55232, scope 1490 // user: %159
  %157 = integer_literal $Builtin.Int32, 10, scope 1490 // user: %158
  %158 = builtin "lshr_Int32"(%153 : $Builtin.Int32, %157 : $Builtin.Int32) : $Builtin.Int32, scope 1490 // user: %159
  %159 = builtin "uadd_with_overflow_Int32"(%156 : $Builtin.Int32, %158 : $Builtin.Int32, %39 : $Builtin.Int1) : $(Builtin.Int32, Builtin.Int1), scope 1490 // users: %161, %160
  %160 = tuple_extract %159 : $(Builtin.Int32, Builtin.Int1), 0, scope 1490 // user: %163
  %161 = tuple_extract %159 : $(Builtin.Int32, Builtin.Int1), 1, scope 1490 // user: %162
  cond_fail %161 : $Builtin.Int1, scope 1490      // id: %162
  %163 = builtin "u_to_u_checked_trunc_Int32_Int16"(%160 : $Builtin.Int32) : $(Builtin.Int16, Builtin.Int1), scope 1490 // users: %165, %164
  %164 = tuple_extract %163 : $(Builtin.Int16, Builtin.Int1), 0, scope 1490 // user: %167
  %165 = tuple_extract %163 : $(Builtin.Int16, Builtin.Int1), 1, scope 1490 // user: %166
  cond_fail %165 : $Builtin.Int1, scope 1490      // id: %166
  %167 = struct $UInt16 (%164 : $Builtin.Int16), scope 1490 // users: %170, %168
  debug_value %167 : $UInt16, scope 1490          // id: %168
  %169 = pointer_to_address %137 : $Builtin.RawPointer to [strict] $*UInt16, scope 1490 // user: %170
  store %167 to %169 : $*UInt16, scope 1490       // id: %170
  %171 = metatype $@thick UInt16.Type, scope 1490 // user: %172
  %172 = builtin "strideof_nonzero"<UInt16>(%171 : $@thick UInt16.Type) : $Builtin.Word, scope 1490 // users: %189, %173
  %173 = index_raw_pointer %137 : $Builtin.RawPointer, %172 : $Builtin.Word, scope 1490 // users: %189, %187
  %174 = integer_literal $Builtin.Int32, 56320, scope 1490 // user: %177
  %175 = integer_literal $Builtin.Int32, 1023, scope 1490 // user: %176
  %176 = builtin "and_Int32"(%153 : $Builtin.Int32, %175 : $Builtin.Int32) : $Builtin.Int32, scope 1490 // user: %177
  %177 = builtin "uadd_with_overflow_Int32"(%174 : $Builtin.Int32, %176 : $Builtin.Int32, %39 : $Builtin.Int1) : $(Builtin.Int32, Builtin.Int1), scope 1490 // users: %179, %178
  %178 = tuple_extract %177 : $(Builtin.Int32, Builtin.Int1), 0, scope 1490 // user: %181
  %179 = tuple_extract %177 : $(Builtin.Int32, Builtin.Int1), 1, scope 1490 // user: %180
  cond_fail %179 : $Builtin.Int1, scope 1490      // id: %180
  %181 = builtin "u_to_u_checked_trunc_Int32_Int16"(%178 : $Builtin.Int32) : $(Builtin.Int16, Builtin.Int1), scope 1490 // users: %183, %182
  %182 = tuple_extract %181 : $(Builtin.Int16, Builtin.Int1), 0, scope 1490 // user: %185
  %183 = tuple_extract %181 : $(Builtin.Int16, Builtin.Int1), 1, scope 1490 // user: %184
  cond_fail %183 : $Builtin.Int1, scope 1490      // id: %184
  %185 = struct $UInt16 (%182 : $Builtin.Int16), scope 1490 // users: %188, %186
  debug_value %185 : $UInt16, scope 1490          // id: %186
  %187 = pointer_to_address %173 : $Builtin.RawPointer to [strict] $*UInt16, scope 1490 // user: %188
  store %185 to %187 : $*UInt16, scope 1490       // id: %188
  %189 = index_raw_pointer %173 : $Builtin.RawPointer, %172 : $Builtin.Word, scope 1490 // user: %190
  br bb18(%189 : $Builtin.RawPointer), scope 1490 // id: %190

bb24:                                             // Preds: bb22
  %191 = builtin "u_to_u_checked_trunc_Int32_Int16"(%153 : $Builtin.Int32) : $(Builtin.Int16, Builtin.Int1), scope 1490 // users: %193, %192
  %192 = tuple_extract %191 : $(Builtin.Int16, Builtin.Int1), 0, scope 1490 // user: %195
  %193 = tuple_extract %191 : $(Builtin.Int16, Builtin.Int1), 1, scope 1490 // user: %194
  cond_fail %193 : $Builtin.Int1, scope 1490      // id: %194
  %195 = struct $UInt16 (%192 : $Builtin.Int16), scope 1490 // users: %198, %196
  debug_value %195 : $UInt16, scope 1490          // id: %196
  %197 = pointer_to_address %137 : $Builtin.RawPointer to [strict] $*UInt16, scope 1490 // user: %198
  store %195 to %197 : $*UInt16, scope 1490       // id: %198
  %199 = metatype $@thick UInt16.Type, scope 1490 // user: %200
  %200 = builtin "strideof_nonzero"<UInt16>(%199 : $@thick UInt16.Type) : $Builtin.Word, scope 1490 // user: %201
  %201 = index_raw_pointer %137 : $Builtin.RawPointer, %200 : $Builtin.Word, scope 1490 // user: %202
  br bb18(%201 : $Builtin.RawPointer), scope 1490 // id: %202

bb25:                                             // Preds: bb16
  cond_fail %39 : $Builtin.Int1, scope 1490       // id: %203
  unreachable, scope 1490                         // id: %204

bb26:                                             // Preds: bb15
  debug_value %114 : $_StringBuffer, scope 1490   // id: %205
  %206 = struct_extract %114 : $_StringBuffer, #_StringBuffer._storage, scope 1490 // users: %212, %211, %208, %207
  %207 = struct_extract %206 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1490 // users: %214, %213
  debug_value %206 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1490 // id: %208
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %209 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1490 // user: %210
  %210 = apply %209() : $@convention(thin) () -> Int, scope 1490 // users: %217, %216
  debug_value %206 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1490 // id: %211
  debug_value %206 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1490 // id: %212
  switch_enum %207 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb34, case #Optional.some!enumelt.1: bb27, scope 1490 // id: %213

bb27:                                             // Preds: bb26
  %214 = unchecked_enum_data %207 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1490 // user: %215
  %215 = ref_to_raw_pointer %214 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1490 // user: %219
  %216 = struct_extract %210 : $Int, #Int._value, scope 1490 // user: %218
  debug_value %210 : $Int, scope 1490             // id: %217
  %218 = builtin "truncOrBitCast_Int64_Word"(%216 : $Builtin.Int64) : $Builtin.Word, scope 1490 // user: %219
  %219 = index_raw_pointer %215 : $Builtin.RawPointer, %218 : $Builtin.Word, scope 1490 // user: %225
  debug_value %58 : $IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %220
  %221 = alloc_stack $IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // users: %232, %227, %223
  %222 = alloc_stack $UTF8, scope 1490            // users: %231, %227, %224
  store %58 to %221 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %223
  store %66 to %222 : $*UTF8, scope 1490          // id: %224
  br bb28(%219 : $Builtin.RawPointer), scope 1490 // id: %225

// %226                                           // users: %256, %254
bb28(%226 : $Builtin.RawPointer):                 // Preds: bb33 bb27
  %227 = apply %68(%221, %222) : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult, scope 1490 // user: %228
  switch_enum %227 : $UnicodeDecodingResult, case #UnicodeDecodingResult.scalarValue!enumelt.1: bb33, case #UnicodeDecodingResult.emptyInput!enumelt: bb30, case #UnicodeDecodingResult.error!enumelt: bb29, scope 1490 // id: %228

bb29:                                             // Preds: bb28
  br bb31, scope 1490                             // id: %229

bb30:                                             // Preds: bb28
  br bb31, scope 1490                             // id: %230

bb31:                                             // Preds: bb30 bb29
  dealloc_stack %222 : $*UTF8, scope 1490         // id: %231
  dealloc_stack %221 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1490 // id: %232
  br bb32, scope 1490                             // id: %233

bb32:                                             // Preds: bb31 bb21
  debug_value %114 : $_StringBuffer, scope 1490   // id: %234
  debug_value %114 : $_StringBuffer, scope 1490   // id: %235
  // function_ref specialized _StringCore.init(_StringBuffer) -> _StringCore
  %236 = function_ref @_TTSfq4n_d___TFVs11_StringCoreCfVs13_StringBufferS_ : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore, scope 1490 // user: %237
  %237 = apply %236(%114) : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore, scope 1490 // user: %238
  %238 = struct $String (%237 : $_StringCore), scope 1490 // user: %240
  dealloc_stack %8 : $*_Buffer32, scope 1490      // id: %239
  return %238 : $String, scope 1490               // id: %240

// %241                                           // users: %246, %245, %244, %243, %242
bb33(%241 : $UnicodeScalar):                      // Preds: bb28
  debug_value %241 : $UnicodeScalar, scope 1490   // id: %242
  debug_value %241 : $UnicodeScalar, scope 1490   // id: %243
  debug_value %241 : $UnicodeScalar, scope 1490   // id: %244
  debug_value %241 : $UnicodeScalar, scope 1490   // id: %245
  %246 = struct_extract %241 : $UnicodeScalar, #UnicodeScalar._value, scope 1490 // users: %248, %247
  debug_value %246 : $UInt32, scope 1490          // id: %247
  %248 = struct_extract %246 : $UInt32, #UInt32._value, scope 1490 // user: %249
  %249 = builtin "u_to_u_checked_trunc_Int32_Int8"(%248 : $Builtin.Int32) : $(Builtin.Int8, Builtin.Int1), scope 1490 // users: %251, %250
  %250 = tuple_extract %249 : $(Builtin.Int8, Builtin.Int1), 0, scope 1490 // user: %253
  %251 = tuple_extract %249 : $(Builtin.Int8, Builtin.Int1), 1, scope 1490 // user: %252
  cond_fail %251 : $Builtin.Int1, scope 1490      // id: %252
  %253 = struct $UInt8 (%250 : $Builtin.Int8), scope 1490 // user: %255
  %254 = pointer_to_address %226 : $Builtin.RawPointer to [strict] $*UInt8, scope 1490 // user: %255
  store %253 to %254 : $*UInt8, scope 1490        // id: %255
  %256 = index_raw_pointer %226 : $Builtin.RawPointer, %44 : $Builtin.Word, scope 1490 // user: %257
  br bb28(%256 : $Builtin.RawPointer), scope 1490 // id: %257

bb34:                                             // Preds: bb26
  cond_fail %39 : $Builtin.Int1, scope 1490       // id: %258
  unreachable, scope 1490                         // id: %259

// %260                                           // users: %276, %275, %269, %268, %263, %262, %261
bb35(%260 : $UnicodeScalar):                      // Preds: bb1
  debug_value %260 : $UnicodeScalar, scope 1490   // id: %261
  debug_value %260 : $UnicodeScalar, scope 1490   // id: %262
  %263 = struct_extract %260 : $UnicodeScalar, #UnicodeScalar._value, scope 1490 // user: %265
  %264 = integer_literal $Builtin.Int32, 127, scope 1490 // user: %266
  %265 = struct_extract %263 : $UInt32, #UInt32._value, scope 1490 // users: %278, %271, %266
  %266 = builtin "cmp_ugt_Int32"(%265 : $Builtin.Int32, %264 : $Builtin.Int32) : $Builtin.Int1, scope 1490 // user: %267
  cond_br %266, bb39, bb36, scope 1490            // id: %267

bb36:                                             // Preds: bb35
  debug_value %260 : $UnicodeScalar, scope 1490   // id: %268
  debug_value %260 : $UnicodeScalar, scope 1490   // id: %269
  %270 = integer_literal $Builtin.Int32, 65535, scope 1490 // user: %271
  %271 = builtin "cmp_ule_Int32"(%265 : $Builtin.Int32, %270 : $Builtin.Int32) : $Builtin.Int1, scope 1490 // user: %272
  cond_br %271, bb38, bb37, scope 1490            // id: %272

bb37:                                             // Preds: bb36
  br bb41(%71 : $Builtin.Int1), scope 1490        // id: %273

bb38:                                             // Preds: bb36
  br bb43(%71 : $Builtin.Int1), scope 1490        // id: %274

bb39:                                             // Preds: bb35
  debug_value %260 : $UnicodeScalar, scope 1490   // id: %275
  debug_value %260 : $UnicodeScalar, scope 1490   // id: %276
  %277 = integer_literal $Builtin.Int32, 65535, scope 1490 // user: %278
  %278 = builtin "cmp_ule_Int32"(%265 : $Builtin.Int32, %277 : $Builtin.Int32) : $Builtin.Int1, scope 1490 // user: %279
  cond_br %278, bb42, bb40, scope 1490            // id: %279

bb40:                                             // Preds: bb39
  br bb41(%6 : $Builtin.Int1), scope 1490         // id: %280

// %281                                           // user: %283
bb41(%281 : $Builtin.Int1):                       // Preds: bb40 bb37
  %282 = integer_literal $Builtin.Int64, 2, scope 1490 // user: %283
  br bb44(%282 : $Builtin.Int64, %281 : $Builtin.Int1), scope 1490 // id: %283

bb42:                                             // Preds: bb39
  br bb43(%6 : $Builtin.Int1), scope 1490         // id: %284

// %285                                           // user: %287
bb43(%285 : $Builtin.Int1):                       // Preds: bb42 bb38
  %286 = integer_literal $Builtin.Int64, 1, scope 1490 // user: %287
  br bb44(%286 : $Builtin.Int64, %285 : $Builtin.Int1), scope 1490 // id: %287

// %288                                           // user: %290
// %289                                           // user: %294
bb44(%288 : $Builtin.Int64, %289 : $Builtin.Int1): // Preds: bb43 bb41
  %290 = builtin "sadd_with_overflow_Int64"(%70 : $Builtin.Int64, %288 : $Builtin.Int64, %39 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1490 // users: %292, %291
  %291 = tuple_extract %290 : $(Builtin.Int64, Builtin.Int1), 0, scope 1490 // user: %294
  %292 = tuple_extract %290 : $(Builtin.Int64, Builtin.Int1), 1, scope 1490 // user: %293
  cond_fail %292 : $Builtin.Int1, scope 1490      // id: %293
  br bb1(%291 : $Builtin.Int64, %289 : $Builtin.Int1), scope 1490 // id: %294
}


// swift_int64ToString
sil hidden_external [fragile] @swift_int64ToString : $@convention(thin) (UnsafeMutablePointer<UInt8>, UInt, Int64, Int64, Bool) -> UInt

sil_scope 1494 {  parent @_TTSgq5GVs16IndexingIteratorGSRVs5UInt8__GS_GSRS0___s16IteratorProtocols___TFVs4UTF86decodeuRxs16IteratorProtocolwx7ElementzVs5UInt8rfRxOs21UnicodeDecodingResult : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult }
sil_scope 1495 {  parent @_TTSgq5GSRVs5UInt8_GSRS__s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>) -> Optional<UInt8> }
sil_scope 1496 {  parent 1494 }
sil_scope 1497 {  parent 1495 inlined_at 1496 }
sil_scope 1498 {  parent @_TTSfq4n_s___TTSgq5Vs5UInt8___TFSRg9subscriptFSix : $@convention(thin) (Int, Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> UInt8 }
sil_scope 1499 {  parent 1495 }
sil_scope 1500 {  parent 1498 inlined_at 1499 }
sil_scope 1501 {  parent 1500 inlined_at 1496 }

// specialized UTF8.decode<A where ...> (inout A) -> UnicodeDecodingResult
sil shared_external [fragile] @_TTSgq5GVs16IndexingIteratorGSRVs5UInt8__GS_GSRS0___s16IteratorProtocols___TFVs4UTF86decodeuRxs16IteratorProtocolwx7ElementzVs5UInt8rfRxOs21UnicodeDecodingResult : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult {
// %0                                             // users: %44, %41, %40, %120, %117, %116, %2
// %1                                             // users: %224, %184, %108, %12, %4, %3
bb0(%0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, %1 : $*UTF8):
  debug_value_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1494 // id: %2
  debug_value_addr %1 : $*UTF8, scope 1494        // id: %3
  %4 = struct_element_addr %1 : $*UTF8, #UTF8._bitsInBuffer, scope 1494 // users: %234, %195, %112, %35, %5
  %5 = struct_element_addr %4 : $*UInt8, #UInt8._value, scope 1494 // users: %174, %6
  %6 = load %5 : $*Builtin.Int8, scope 1494       // users: %21, %32, %8
  %7 = integer_literal $Builtin.Int8, 0, scope 1494 // users: %201, %99, %8
  %8 = builtin "cmp_eq_Int8"(%6 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 1494 // user: %10
  %9 = integer_literal $Builtin.Int1, -1, scope 1494 // users: %128, %249, %103, %91, %53, %222, %180, %168, %10
  %10 = builtin "int_expect_Int1"(%8 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1494 // user: %11
  cond_br %10, bb4, bb1, scope 1494               // id: %11

bb1:                                              // Preds: bb0
  %12 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 1494 // users: %29, %13
  %13 = struct_element_addr %12 : $*UInt32, #UInt32._value, scope 1494 // user: %14
  %14 = load %13 : $*Builtin.Int32, scope 1494    // users: %27, %23, %20, %16
  %15 = integer_literal $Builtin.Int32, 128, scope 1494 // user: %16
  %16 = builtin "and_Int32"(%14 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int32, scope 1494 // user: %18
  %17 = integer_literal $Builtin.Int32, 0, scope 1494 // user: %18
  %18 = builtin "cmp_eq_Int32"(%16 : $Builtin.Int32, %17 : $Builtin.Int32) : $Builtin.Int1, scope 1494 // user: %19
  cond_br %18, bb3, bb2, scope 1494               // id: %19

bb2:                                              // Preds: bb1
  %20 = struct $UInt32 (%14 : $Builtin.Int32), scope 1494 // user: %21
  br bb16(%6 : $Builtin.Int8, %20 : $UInt32), scope 1494 // id: %21

bb3:                                              // Preds: bb1
  %22 = integer_literal $Builtin.Int32, 255, scope 1494 // user: %23
  %23 = builtin "and_Int32"(%14 : $Builtin.Int32, %22 : $Builtin.Int32) : $Builtin.Int32, scope 1494 // user: %24
  %24 = struct $UInt32 (%23 : $Builtin.Int32), scope 1494 // users: %37, %36, %25
  debug_value %24 : $UInt32, scope 1494           // id: %25
  %26 = integer_literal $Builtin.Int32, 8, scope 1494 // user: %27
  %27 = builtin "lshr_Int32"(%14 : $Builtin.Int32, %26 : $Builtin.Int32) : $Builtin.Int32, scope 1494 // user: %28
  %28 = struct $UInt32 (%27 : $Builtin.Int32), scope 1494 // user: %29
  store %28 to %12 : $*UInt32, scope 1494         // id: %29
  %30 = integer_literal $Builtin.Int8, 8, scope 1494 // user: %32
  %31 = integer_literal $Builtin.Int1, 0, scope 1494 // user: %32
  %32 = builtin "usub_with_overflow_Int8"(%6 : $Builtin.Int8, %30 : $Builtin.Int8, %31 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 1494 // user: %33
  %33 = tuple_extract %32 : $(Builtin.Int8, Builtin.Int1), 0, scope 1494 // user: %34
  %34 = struct $UInt8 (%33 : $Builtin.Int8), scope 1494 // user: %35
  store %34 to %4 : $*UInt8, scope 1494           // id: %35
  debug_value %24 : $UInt32, scope 1494           // id: %36
  %37 = struct $UnicodeScalar (%24 : $UInt32), scope 1494 // user: %38
  %38 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.scalarValue!enumelt.1, %37 : $UnicodeScalar, scope 1494 // user: %39
  br bb35(%38 : $UnicodeDecodingResult), scope 1494 // id: %39

bb4:                                              // Preds: bb0
  debug_value_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1497 // id: %40
  %41 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._position, scope 1497 // users: %96, %89, %42
  %42 = struct_element_addr %41 : $*Int, #Int._value, scope 1497 // user: %43
  %43 = load %42 : $*Builtin.Int64, scope 1497    // users: %102, %91, %85, %77
  %44 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._elements, scope 1497 // users: %47, %45
  %45 = struct_element_addr %44 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 1497 // user: %46
  %46 = load %45 : $*Optional<UnsafePointer<UInt8>>, scope 1497 // users: %49, %82
  %47 = struct_element_addr %44 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 1497 // user: %48
  %48 = load %47 : $*Optional<UnsafePointer<UInt8>>, scope 1497 // users: %52, %55
  switch_enum %46 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb5, case #Optional.none!enumelt: bb14, scope 1497 // id: %49

// %50                                            // users: %58, %51
bb5(%50 : $UnsafePointer<UInt8>):                 // Preds: bb4
  debug_value %50 : $UnsafePointer<UInt8>, scope 1497 // id: %51
  switch_enum %48 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb6, case #Optional.some!enumelt.1: bb7, scope 1497 // id: %52

bb6:                                              // Preds: bb5
  cond_fail %9 : $Builtin.Int1, scope 1497        // id: %53
  unreachable, scope 1497                         // id: %54

bb7:                                              // Preds: bb5
  %55 = unchecked_enum_data %48 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 1497 // user: %56
  %56 = struct_extract %55 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 1497 // user: %57
  %57 = builtin "ptrtoint_Word"(%56 : $Builtin.RawPointer) : $Builtin.Word, scope 1497 // user: %60
  %58 = struct_extract %50 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 1497 // user: %59
  %59 = builtin "ptrtoint_Word"(%58 : $Builtin.RawPointer) : $Builtin.Word, scope 1497 // user: %60
  %60 = builtin "sub_Word"(%57 : $Builtin.Word, %59 : $Builtin.Word) : $Builtin.Word, scope 1497 // user: %61
  %61 = builtin "zextOrBitCast_Word_Int64"(%60 : $Builtin.Word) : $Builtin.Int64, scope 1497 // users: %76, %69
  %62 = metatype $@thick UInt8.Type, scope 1497   // user: %63
  %63 = builtin "strideof_nonzero"<UInt8>(%62 : $@thick UInt8.Type) : $Builtin.Word, scope 1497 // user: %64
  %64 = builtin "zextOrBitCast_Word_Int64"(%63 : $Builtin.Word) : $Builtin.Int64, scope 1497 // users: %76, %73, %66
  %65 = integer_literal $Builtin.Int64, 0, scope 1497 // user: %66
  %66 = builtin "cmp_eq_Int64"(%64 : $Builtin.Int64, %65 : $Builtin.Int64) : $Builtin.Int1, scope 1497 // user: %67
  cond_fail %66 : $Builtin.Int1, scope 1497       // id: %67
  %68 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1497 // user: %69
  %69 = builtin "cmp_eq_Int64"(%61 : $Builtin.Int64, %68 : $Builtin.Int64) : $Builtin.Int1, scope 1497 // user: %70
  cond_br %69, bb9, bb8, scope 1497               // id: %70

bb8:                                              // Preds: bb7
  br bb10, scope 1494                             // id: %71

bb9:                                              // Preds: bb7
  %72 = integer_literal $Builtin.Int64, -1, scope 1497 // user: %73
  %73 = builtin "cmp_eq_Int64"(%64 : $Builtin.Int64, %72 : $Builtin.Int64) : $Builtin.Int1, scope 1497 // user: %74
  cond_fail %73 : $Builtin.Int1, scope 1497       // id: %74
  br bb10, scope 1497                             // id: %75

bb10:                                             // Preds: bb8 bb9
  %76 = builtin "sdiv_Int64"(%61 : $Builtin.Int64, %64 : $Builtin.Int64) : $Builtin.Int64, scope 1497 // user: %77
  %77 = builtin "cmp_eq_Int64"(%43 : $Builtin.Int64, %76 : $Builtin.Int64) : $Builtin.Int1, scope 1497 // user: %78
  cond_br %77, bb11, bb13, scope 1497             // id: %78

bb11:                                             // Preds: bb10
  br bb12, scope 1494                             // id: %79

bb12:                                             // Preds: bb11 bb14
  %80 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.emptyInput!enumelt, scope 1494 // user: %81
  br bb35(%80 : $UnicodeDecodingResult), scope 1494 // id: %81

bb13:                                             // Preds: bb10
  %82 = unchecked_enum_data %46 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 1501 // user: %83
  %83 = struct_extract %82 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 1501 // user: %84
  %84 = pointer_to_address %83 : $Builtin.RawPointer to [strict] $*UInt8, scope 1501 // user: %86
  %85 = builtin "truncOrBitCast_Int64_Word"(%43 : $Builtin.Int64) : $Builtin.Word, scope 1501 // user: %86
  %86 = index_addr %84 : $*UInt8, %85 : $Builtin.Word, scope 1501 // user: %87
  %87 = struct_element_addr %86 : $*UInt8, #UInt8._value, scope 1501 // user: %88
  %88 = load %87 : $*Builtin.Int8, scope 1501     // users: %98, %106, %251
  debug_value_addr %41 : $*Int, scope 1497        // id: %89
  %90 = integer_literal $Builtin.Int64, 1, scope 1497 // user: %91
  %91 = builtin "sadd_with_overflow_Int64"(%43 : $Builtin.Int64, %90 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1497 // users: %93, %92
  %92 = tuple_extract %91 : $(Builtin.Int64, Builtin.Int1), 0, scope 1497 // user: %95
  %93 = tuple_extract %91 : $(Builtin.Int64, Builtin.Int1), 1, scope 1497 // user: %94
  cond_fail %93 : $Builtin.Int1, scope 1497       // id: %94
  %95 = struct $Int (%92 : $Builtin.Int64), scope 1497 // user: %96
  store %95 to %41 : $*Int, scope 1497            // id: %96
  %97 = integer_literal $Builtin.Int8, -128, scope 1494 // user: %98
  %98 = builtin "and_Int8"(%88 : $Builtin.Int8, %97 : $Builtin.Int8) : $Builtin.Int8, scope 1494 // user: %99
  %99 = builtin "cmp_eq_Int8"(%98 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 1494 // user: %100
  cond_br %99, bb34, bb15, scope 1494             // id: %100

bb14:                                             // Preds: bb4
  %101 = integer_literal $Builtin.Int64, 0, scope 1497 // user: %102
  %102 = builtin "cmp_eq_Int64"(%43 : $Builtin.Int64, %101 : $Builtin.Int64) : $Builtin.Int1, scope 1497 // user: %103
  %103 = builtin "xor_Int1"(%102 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1497 // user: %104
  cond_fail %103 : $Builtin.Int1, scope 1497      // id: %104
  br bb12, scope 1497                             // id: %105

bb15:                                             // Preds: bb13
  %106 = builtin "zext_Int8_Int32"(%88 : $Builtin.Int8) : $Builtin.Int32, scope 1494 // user: %107
  %107 = struct $UInt32 (%106 : $Builtin.Int32), scope 1494 // users: %113, %109
  %108 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 1494 // user: %109
  store %107 to %108 : $*UInt32, scope 1494       // id: %109
  %110 = integer_literal $Builtin.Int8, 8, scope 1494 // users: %113, %111
  %111 = struct $UInt8 (%110 : $Builtin.Int8), scope 1494 // user: %112
  store %111 to %4 : $*UInt8, scope 1494          // id: %112
  br bb16(%110 : $Builtin.Int8, %107 : $UInt32), scope 1494 // id: %113

// %114                                           // users: %203, %201
// %115                                           // user: %203
bb16(%114 : $Builtin.Int8, %115 : $UInt32):       // Preds: bb15 bb2 bb26
  debug_value_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 1494 // id: %116
  %117 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._position, scope 1494 // users: %173, %166, %118
  %118 = struct_element_addr %117 : $*Int, #Int._value, scope 1494 // user: %119
  %119 = load %118 : $*Builtin.Int64, scope 1494  // users: %168, %162, %156, %127
  %120 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._elements, scope 1494 // users: %123, %121
  %121 = struct_element_addr %120 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 1494 // user: %122
  %122 = load %121 : $*Optional<UnsafePointer<UInt8>>, scope 1494 // users: %159, %125
  %123 = struct_element_addr %120 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 1494 // user: %124
  %124 = load %123 : $*Optional<UnsafePointer<UInt8>>, scope 1494 // users: %134, %133
  switch_enum %122 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb18, case #Optional.none!enumelt: bb17, scope 1494 // id: %125

bb17:                                             // Preds: bb16
  %126 = integer_literal $Builtin.Int64, 0, scope 1494 // user: %127
  %127 = builtin "cmp_eq_Int64"(%119 : $Builtin.Int64, %126 : $Builtin.Int64) : $Builtin.Int1, scope 1494 // user: %128
  %128 = builtin "xor_Int1"(%127 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1494 // user: %129
  cond_fail %128 : $Builtin.Int1, scope 1494      // id: %129
  br bb27, scope 1494                             // id: %130

// %131                                           // users: %137, %132
bb18(%131 : $UnsafePointer<UInt8>):               // Preds: bb16
  debug_value %131 : $UnsafePointer<UInt8>, scope 1494 // id: %132
  switch_enum %124 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb33, case #Optional.some!enumelt.1: bb19, scope 1494 // id: %133

bb19:                                             // Preds: bb18
  %134 = unchecked_enum_data %124 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 1494 // user: %135
  %135 = struct_extract %134 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 1494 // user: %136
  %136 = builtin "ptrtoint_Word"(%135 : $Builtin.RawPointer) : $Builtin.Word, scope 1494 // user: %139
  %137 = struct_extract %131 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 1494 // user: %138
  %138 = builtin "ptrtoint_Word"(%137 : $Builtin.RawPointer) : $Builtin.Word, scope 1494 // user: %139
  %139 = builtin "sub_Word"(%136 : $Builtin.Word, %138 : $Builtin.Word) : $Builtin.Word, scope 1494 // user: %140
  %140 = builtin "zextOrBitCast_Word_Int64"(%139 : $Builtin.Word) : $Builtin.Int64, scope 1494 // users: %155, %148
  %141 = metatype $@thick UInt8.Type, scope 1494  // user: %142
  %142 = builtin "strideof_nonzero"<UInt8>(%141 : $@thick UInt8.Type) : $Builtin.Word, scope 1494 // user: %143
  %143 = builtin "zextOrBitCast_Word_Int64"(%142 : $Builtin.Word) : $Builtin.Int64, scope 1494 // users: %155, %152, %145
  %144 = integer_literal $Builtin.Int64, 0, scope 1494 // user: %145
  %145 = builtin "cmp_eq_Int64"(%143 : $Builtin.Int64, %144 : $Builtin.Int64) : $Builtin.Int1, scope 1494 // user: %146
  cond_fail %145 : $Builtin.Int1, scope 1494      // id: %146
  %147 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1494 // user: %148
  %148 = builtin "cmp_eq_Int64"(%140 : $Builtin.Int64, %147 : $Builtin.Int64) : $Builtin.Int1, scope 1494 // user: %149
  cond_br %148, bb21, bb20, scope 1494            // id: %149

bb20:                                             // Preds: bb19
  br bb22, scope 1494                             // id: %150

bb21:                                             // Preds: bb19
  %151 = integer_literal $Builtin.Int64, -1, scope 1494 // user: %152
  %152 = builtin "cmp_eq_Int64"(%143 : $Builtin.Int64, %151 : $Builtin.Int64) : $Builtin.Int1, scope 1494 // user: %153
  cond_fail %152 : $Builtin.Int1, scope 1494      // id: %153
  br bb22, scope 1494                             // id: %154

bb22:                                             // Preds: bb20 bb21
  %155 = builtin "sdiv_Int64"(%140 : $Builtin.Int64, %143 : $Builtin.Int64) : $Builtin.Int64, scope 1494 // user: %156
  %156 = builtin "cmp_eq_Int64"(%119 : $Builtin.Int64, %155 : $Builtin.Int64) : $Builtin.Int1, scope 1494 // user: %157
  cond_br %156, bb23, bb24, scope 1494            // id: %157

bb23:                                             // Preds: bb22
  br bb27, scope 1494                             // id: %158

bb24:                                             // Preds: bb22
  %159 = unchecked_enum_data %122 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 1494 // user: %160
  %160 = struct_extract %159 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 1494 // user: %161
  %161 = pointer_to_address %160 : $Builtin.RawPointer to [strict] $*UInt8, scope 1494 // user: %163
  %162 = builtin "truncOrBitCast_Int64_Word"(%119 : $Builtin.Int64) : $Builtin.Word, scope 1494 // user: %163
  %163 = index_addr %161 : $*UInt8, %162 : $Builtin.Word, scope 1494 // user: %164
  %164 = struct_element_addr %163 : $*UInt8, #UInt8._value, scope 1494 // user: %165
  %165 = load %164 : $*Builtin.Int8, scope 1494   // user: %182
  debug_value_addr %117 : $*Int, scope 1494       // id: %166
  %167 = integer_literal $Builtin.Int64, 1, scope 1494 // user: %168
  %168 = builtin "sadd_with_overflow_Int64"(%119 : $Builtin.Int64, %167 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1494 // users: %170, %169
  %169 = tuple_extract %168 : $(Builtin.Int64, Builtin.Int1), 0, scope 1494 // user: %172
  %170 = tuple_extract %168 : $(Builtin.Int64, Builtin.Int1), 1, scope 1494 // user: %171
  cond_fail %170 : $Builtin.Int1, scope 1494      // id: %171
  %172 = struct $Int (%169 : $Builtin.Int64), scope 1494 // user: %173
  store %172 to %117 : $*Int, scope 1494          // id: %173
  %174 = load %5 : $*Builtin.Int8, scope 1494     // users: %192, %176
  %175 = integer_literal $Builtin.Int8, 31, scope 1494 // user: %176
  %176 = builtin "and_Int8"(%174 : $Builtin.Int8, %175 : $Builtin.Int8) : $Builtin.Int8, scope 1494 // user: %177
  %177 = builtin "zext_Int8_Int32"(%176 : $Builtin.Int8) : $Builtin.Int32, scope 1494 // users: %183, %179
  %178 = integer_literal $Builtin.Int32, 32, scope 1494 // user: %179
  %179 = builtin "cmp_ult_Int32"(%177 : $Builtin.Int32, %178 : $Builtin.Int32) : $Builtin.Int1, scope 1494 // user: %180
  %180 = builtin "xor_Int1"(%179 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1494 // user: %181
  cond_fail %180 : $Builtin.Int1, scope 1494      // id: %181
  %182 = builtin "zext_Int8_Int32"(%165 : $Builtin.Int8) : $Builtin.Int32, scope 1494 // user: %183
  %183 = builtin "shl_Int32"(%182 : $Builtin.Int32, %177 : $Builtin.Int32) : $Builtin.Int32, scope 1494 // user: %187
  %184 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 1494 // users: %189, %185
  %185 = struct_element_addr %184 : $*UInt32, #UInt32._value, scope 1494 // user: %186
  %186 = load %185 : $*Builtin.Int32, scope 1494  // user: %187
  %187 = builtin "or_Int32"(%186 : $Builtin.Int32, %183 : $Builtin.Int32) : $Builtin.Int32, scope 1494 // user: %188
  %188 = struct $UInt32 (%187 : $Builtin.Int32), scope 1494 // users: %200, %199, %189
  store %188 to %184 : $*UInt32, scope 1494       // id: %189
  %190 = integer_literal $Builtin.Int8, 8, scope 1494 // user: %192
  %191 = integer_literal $Builtin.Int1, 0, scope 1494 // user: %192
  %192 = builtin "uadd_with_overflow_Int8"(%174 : $Builtin.Int8, %190 : $Builtin.Int8, %191 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 1494 // user: %193
  %193 = tuple_extract %192 : $(Builtin.Int8, Builtin.Int1), 0, scope 1494 // users: %200, %199, %197, %194
  %194 = struct $UInt8 (%193 : $Builtin.Int8), scope 1494 // user: %195
  store %194 to %4 : $*UInt8, scope 1494          // id: %195
  %196 = integer_literal $Builtin.Int8, 32, scope 1494 // user: %197
  %197 = builtin "cmp_ult_Int8"(%193 : $Builtin.Int8, %196 : $Builtin.Int8) : $Builtin.Int1, scope 1494 // user: %198
  cond_br %197, bb26, bb25, scope 1494            // id: %198

bb25:                                             // Preds: bb24
  br bb29(%193 : $Builtin.Int8, %188 : $UInt32), scope 1494 // id: %199

bb26:                                             // Preds: bb24
  br bb16(%193 : $Builtin.Int8, %188 : $UInt32), scope 1494 // id: %200

bb27:                                             // Preds: bb23 bb17
  %201 = builtin "cmp_eq_Int8"(%114 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 1494 // user: %202
  cond_br %201, bb32, bb28, scope 1494            // id: %202

bb28:                                             // Preds: bb27
  br bb29(%114 : $Builtin.Int8, %115 : $UInt32), scope 1494 // id: %203

// %204                                           // user: %231
// %205                                           // users: %225, %207
bb29(%204 : $Builtin.Int8, %205 : $UInt32):       // Preds: bb28 bb25
  // function_ref specialized static UTF8._decodeOne(UInt32) -> (result : UInt32?, length : UInt8)
  %206 = function_ref @_TTSfq4n_d___TZFVs4UTF810_decodeOnefVs6UInt32T6resultGSqS0__6lengthVs5UInt8_ : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8), scope 1494 // user: %207
  %207 = apply %206(%205) : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8), scope 1494 // users: %209, %208
  %208 = tuple_extract %207 : $(Optional<UInt32>, UInt8), 0, scope 1494 // users: %240, %239, %238, %237, %236, %235, %210
  %209 = tuple_extract %207 : $(Optional<UInt32>, UInt8), 1, scope 1494 // users: %213, %211
  debug_value %208 : $Optional<UInt32>, scope 1494 // id: %210
  debug_value %209 : $UInt8, scope 1494           // id: %211
  %212 = integer_literal $Builtin.Int8, 8, scope 1494 // user: %215
  %213 = struct_extract %209 : $UInt8, #UInt8._value, scope 1494 // user: %215
  %214 = integer_literal $Builtin.Int1, 0, scope 1494 // users: %231, %215
  %215 = builtin "umul_with_overflow_Int8"(%212 : $Builtin.Int8, %213 : $Builtin.Int8, %214 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 1494 // user: %216
  %216 = tuple_extract %215 : $(Builtin.Int8, Builtin.Int1), 0, scope 1494 // users: %231, %217
  %217 = builtin "zext_Int8_Int64"(%216 : $Builtin.Int8) : $Builtin.Int64, scope 1494 // user: %219
  %218 = integer_literal $Builtin.Int64, 63, scope 1494 // user: %219
  %219 = builtin "and_Int64"(%217 : $Builtin.Int64, %218 : $Builtin.Int64) : $Builtin.Int64, scope 1494 // users: %227, %221
  %220 = integer_literal $Builtin.Int64, 64, scope 1494 // user: %221
  %221 = builtin "cmp_ult_Int64"(%219 : $Builtin.Int64, %220 : $Builtin.Int64) : $Builtin.Int1, scope 1494 // user: %222
  %222 = builtin "xor_Int1"(%221 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1494 // user: %223
  cond_fail %222 : $Builtin.Int1, scope 1494      // id: %223
  %224 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 1494 // user: %230
  %225 = struct_extract %205 : $UInt32, #UInt32._value, scope 1494 // user: %226
  %226 = builtin "zext_Int32_Int64"(%225 : $Builtin.Int32) : $Builtin.Int64, scope 1494 // user: %227
  %227 = builtin "lshr_Int64"(%226 : $Builtin.Int64, %219 : $Builtin.Int64) : $Builtin.Int64, scope 1494 // user: %228
  %228 = builtin "trunc_Int64_Int32"(%227 : $Builtin.Int64) : $Builtin.Int32, scope 1494 // user: %229
  %229 = struct $UInt32 (%228 : $Builtin.Int32), scope 1494 // user: %230
  store %229 to %224 : $*UInt32, scope 1494       // id: %230
  %231 = builtin "usub_with_overflow_Int8"(%204 : $Builtin.Int8, %216 : $Builtin.Int8, %214 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 1494 // user: %232
  %232 = tuple_extract %231 : $(Builtin.Int8, Builtin.Int1), 0, scope 1494 // user: %233
  %233 = struct $UInt8 (%232 : $Builtin.Int8), scope 1494 // user: %234
  store %233 to %4 : $*UInt8, scope 1494          // id: %234
  debug_value %208 : $Optional<UInt32>, scope 1494 // id: %235
  debug_value %208 : $Optional<UInt32>, scope 1494 // id: %236
  debug_value %208 : $Optional<UInt32>, scope 1494 // id: %237
  debug_value %208 : $Optional<UInt32>, scope 1494 // id: %238
  switch_enum %208 : $Optional<UInt32>, case #Optional.none!enumelt: bb31, case #Optional.some!enumelt.1: bb30, scope 1494 // id: %239

bb30:                                             // Preds: bb29
  %240 = unchecked_enum_data %208 : $Optional<UInt32>, #Optional.some!enumelt.1, scope 1494 // users: %242, %241
  debug_value %240 : $UInt32, scope 1494          // id: %241
  %242 = struct $UnicodeScalar (%240 : $UInt32), scope 1494 // user: %243
  %243 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.scalarValue!enumelt.1, %242 : $UnicodeScalar, scope 1494 // user: %244
  br bb35(%243 : $UnicodeDecodingResult), scope 1494 // id: %244

bb31:                                             // Preds: bb29
  %245 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.error!enumelt, scope 1494 // user: %246
  br bb35(%245 : $UnicodeDecodingResult), scope 1494 // id: %246

bb32:                                             // Preds: bb27
  %247 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.emptyInput!enumelt, scope 1494 // user: %248
  br bb35(%247 : $UnicodeDecodingResult), scope 1494 // id: %248

bb33:                                             // Preds: bb18
  cond_fail %9 : $Builtin.Int1, scope 1494        // id: %249
  unreachable, scope 1494                         // id: %250

bb34:                                             // Preds: bb13
  %251 = builtin "zext_Int8_Int32"(%88 : $Builtin.Int8) : $Builtin.Int32, scope 1494 // user: %252
  %252 = struct $UInt32 (%251 : $Builtin.Int32), scope 1494 // users: %254, %253
  debug_value %252 : $UInt32, scope 1494          // id: %253
  %254 = struct $UnicodeScalar (%252 : $UInt32), scope 1494 // user: %255
  %255 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.scalarValue!enumelt.1, %254 : $UnicodeScalar, scope 1494 // user: %256
  br bb35(%255 : $UnicodeDecodingResult), scope 1494 // id: %256

// %257                                           // user: %258
bb35(%257 : $UnicodeDecodingResult):              // Preds: bb34 bb32 bb31 bb30 bb12 bb3
  return %257 : $UnicodeDecodingResult, scope 1494 // id: %258
}

sil_scope 1502 {  parent @_TTSfq4n_n_n_d___TFVs13_StringBufferCfT8capacitySi11initialSizeSi12elementWidthSi_S_ : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer }
sil_scope 1503 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferau5valuex : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars> }
sil_scope 1504 {  parent 1502 }
sil_scope 1505 {  parent 1503 inlined_at 1504 }
sil_scope 1506 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBuffer9_capacityfT_Si : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> Int }
sil_scope 1507 {  parent 1502 }
sil_scope 1508 {  parent 1506 inlined_at 1507 }

// specialized _StringBuffer.init(capacity : Int, initialSize : Int, elementWidth : Int) -> _StringBuffer
sil public_external [fragile] @_TTSfq4n_n_n_d___TFVs13_StringBufferCfT8capacitySi11initialSizeSi12elementWidthSi_S_ : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer {
// %0                                             // users: %18, %3
// %1                                             // users: %103, %80, %61, %4
// %2                                             // users: %13, %7, %5
bb0(%0 : $Int, %1 : $Int, %2 : $Int):
  debug_value %0 : $Int, scope 1502               // id: %3
  debug_value %1 : $Int, scope 1502               // id: %4
  debug_value %2 : $Int, scope 1502               // id: %5
  %6 = integer_literal $Builtin.Int64, 1, scope 1502 // users: %122, %124, %171, %15, %11, %9
  %7 = struct_extract %2 : $Int, #Int._value, scope 1502 // users: %15, %9
  %8 = integer_literal $Builtin.Int1, 0, scope 1502 // users: %122, %124, %11, %9
  %9 = builtin "ssub_with_overflow_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // user: %10
  %10 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // users: %172, %104, %92, %46, %11
  %11 = builtin "ssub_with_overflow_Int64"(%6 : $Builtin.Int64, %10 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // user: %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // users: %167, %39, %26, %23, %19
  debug_value %2 : $Int, scope 1502               // id: %13
  %14 = integer_literal $Builtin.Int1, -1, scope 1502 // users: %65, %149, %118, %181, %183, %172, %167, %97, %32, %23, %19, %15
  %15 = builtin "ssub_with_overflow_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %37, %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %17
  cond_fail %16 : $Builtin.Int1, scope 1502       // id: %17
  %18 = struct_extract %0 : $Int, #Int._value, scope 1502 // user: %19
  %19 = builtin "sadd_with_overflow_Int64"(%18 : $Builtin.Int64, %12 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %21, %20
  %20 = tuple_extract %19 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %23
  %21 = tuple_extract %19 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %22
  cond_fail %21 : $Builtin.Int1, scope 1502       // id: %22
  %23 = builtin "sadd_with_overflow_Int64"(%20 : $Builtin.Int64, %12 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %38, %24
  %24 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %25
  cond_fail %24 : $Builtin.Int1, scope 1502       // id: %25
  %26 = builtin "s_to_u_checked_conversion_Int64"(%12 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %28, %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %31
  %28 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %29
  cond_fail %28 : $Builtin.Int1, scope 1502       // id: %29
  %30 = integer_literal $Builtin.Int64, 64, scope 1502 // users: %96, %31
  %31 = builtin "cmp_ult_Int64"(%27 : $Builtin.Int64, %30 : $Builtin.Int64) : $Builtin.Int1, scope 1502 // user: %32
  %32 = builtin "xor_Int1"(%31 : $Builtin.Int1, %14 : $Builtin.Int1) : $Builtin.Int1, scope 1502 // user: %33
  cond_fail %32 : $Builtin.Int1, scope 1502       // id: %33
  %34 = metatype $@thick _HeapBufferStorage<_StringBufferIVars, UInt16>.Type, scope 1502 // user: %35
  %35 = init_existential_metatype %34 : $@thick _HeapBufferStorage<_StringBufferIVars, UInt16>.Type, $@thick AnyObject.Type, scope 1502 // user: %44
  %36 = enum $Optional<UnsafeMutableRawPointer>, #Optional.none!enumelt, scope 1502 // user: %42
  %37 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %41
  %38 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %39
  %39 = builtin "ashr_Int64"(%38 : $Builtin.Int64, %12 : $Builtin.Int64) : $Builtin.Int64, scope 1502 // user: %40
  %40 = struct $Int (%39 : $Builtin.Int64), scope 1502 // user: %44
  %41 = struct $Int (%37 : $Builtin.Int64), scope 1502 // user: %42
  %42 = struct $_StringBufferIVars (%36 : $Optional<UnsafeMutableRawPointer>, %41 : $Int), scope 1502 // user: %44
  // function_ref specialized specialized _HeapBuffer.init(AnyObject.Type, A, Int) -> _HeapBuffer<A, B>
  %43 = function_ref @_TTSfq4n_n_n_d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferCfTPMPs9AnyObject_xSi_GS_xq__ : $@convention(thin) (@thick AnyObject.Type, _StringBufferIVars, Int) -> @owned _HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // user: %44
  %44 = apply %43(%35, %42, %40) : $@convention(thin) (@thick AnyObject.Type, _StringBufferIVars, Int) -> @owned _HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // users: %143, %142, %141, %140, %133, %132, %111, %110, %179, %89, %88, %85, %84, %72, %71, %68, %67, %53, %52, %49, %48
  %45 = integer_literal $Builtin.Int64, 0, scope 1502 // users: %156, %46
  %46 = builtin "cmp_eq_Int64"(%10 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1, scope 1502 // user: %47
  cond_br %46, bb4, bb1, scope 1502               // id: %47

bb1:                                              // Preds: bb0
  %48 = struct_extract %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1502 // users: %55, %54
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %49
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %50 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1502 // user: %51
  %51 = apply %50() : $@convention(thin) () -> Int, scope 1502 // users: %58, %57
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %52
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %53
  switch_enum %48 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb2, scope 1502 // id: %54

bb2:                                              // Preds: bb1
  %55 = unchecked_enum_data %48 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1502 // user: %56
  %56 = ref_to_raw_pointer %55 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1502 // user: %60
  %57 = struct_extract %51 : $Int, #Int._value, scope 1502 // user: %59
  debug_value %51 : $Int, scope 1502              // id: %58
  %59 = builtin "truncOrBitCast_Int64_Word"(%57 : $Builtin.Int64) : $Builtin.Word, scope 1502 // user: %60
  %60 = index_raw_pointer %56 : $Builtin.RawPointer, %59 : $Builtin.Word, scope 1502 // user: %63
  %61 = struct_extract %1 : $Int, #Int._value, scope 1502 // user: %62
  %62 = builtin "truncOrBitCast_Int64_Word"(%61 : $Builtin.Int64) : $Builtin.Word, scope 1502 // user: %63
  bind_memory %60 : $Builtin.RawPointer, %62 : $Builtin.Word to $*UInt16, scope 1502 // id: %63
  br bb6, scope 1502                              // id: %64

bb3:                                              // Preds: bb1
  cond_fail %14 : $Builtin.Int1, scope 1502       // id: %65
  unreachable, scope 1502                         // id: %66

bb4:                                              // Preds: bb0
  %67 = struct_extract %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1502 // users: %74, %73
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %68
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %69 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1502 // user: %70
  %70 = apply %69() : $@convention(thin) () -> Int, scope 1502 // users: %77, %76
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %71
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %72
  switch_enum %67 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb12, case #Optional.some!enumelt.1: bb5, scope 1502 // id: %73

bb5:                                              // Preds: bb4
  %74 = unchecked_enum_data %67 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1502 // user: %75
  %75 = ref_to_raw_pointer %74 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1502 // user: %79
  %76 = struct_extract %70 : $Int, #Int._value, scope 1502 // user: %78
  debug_value %70 : $Int, scope 1502              // id: %77
  %78 = builtin "truncOrBitCast_Int64_Word"(%76 : $Builtin.Int64) : $Builtin.Word, scope 1502 // user: %79
  %79 = index_raw_pointer %75 : $Builtin.RawPointer, %78 : $Builtin.Word, scope 1502 // user: %82
  %80 = struct_extract %1 : $Int, #Int._value, scope 1502 // user: %81
  %81 = builtin "truncOrBitCast_Int64_Word"(%80 : $Builtin.Int64) : $Builtin.Word, scope 1502 // user: %82
  bind_memory %79 : $Builtin.RawPointer, %81 : $Builtin.Word to $*UInt8, scope 1502 // id: %82
  br bb6, scope 1502                              // id: %83

bb6:                                              // Preds: bb5 bb2
  %84 = struct_extract %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1502 // users: %98, %90
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %85
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %86 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1502 // user: %87
  %87 = apply %86() : $@convention(thin) () -> Int, scope 1502 // users: %100, %91
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %88
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1502 // id: %89
  switch_enum %84 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb11, case #Optional.some!enumelt.1: bb7, scope 1502 // id: %90

bb7:                                              // Preds: bb6
  debug_value %87 : $Int, scope 1502              // id: %91
  %92 = builtin "s_to_u_checked_conversion_Int64"(%10 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %94, %93
  %93 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %96
  %94 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %95
  cond_fail %94 : $Builtin.Int1, scope 1502       // id: %95
  %96 = builtin "cmp_ult_Int64"(%93 : $Builtin.Int64, %30 : $Builtin.Int64) : $Builtin.Int1, scope 1502 // user: %97
  %97 = builtin "xor_Int1"(%96 : $Builtin.Int1, %14 : $Builtin.Int1) : $Builtin.Int1, scope 1502 // user: %157
  %98 = unchecked_enum_data %84 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1502 // user: %99
  %99 = ref_to_raw_pointer %98 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1502 // users: %145, %136, %102
  %100 = struct_extract %87 : $Int, #Int._value, scope 1502 // users: %149, %101
  %101 = builtin "truncOrBitCast_Int64_Word"(%100 : $Builtin.Int64) : $Builtin.Word, scope 1502 // user: %102
  %102 = index_raw_pointer %99 : $Builtin.RawPointer, %101 : $Builtin.Word, scope 1502 // user: %106
  %103 = struct_extract %1 : $Int, #Int._value, scope 1502 // user: %104
  %104 = builtin "shl_Int64"(%103 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int64, scope 1502 // user: %105
  %105 = builtin "truncOrBitCast_Int64_Word"(%104 : $Builtin.Int64) : $Builtin.Word, scope 1502 // user: %106
  %106 = index_raw_pointer %102 : $Builtin.RawPointer, %105 : $Builtin.Word, scope 1502 // user: %107
  %107 = struct $UnsafeMutableRawPointer (%106 : $Builtin.RawPointer), scope 1502 // users: %109, %108
  debug_value %107 : $UnsafeMutableRawPointer, scope 1502 // id: %108
  %109 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %107 : $UnsafeMutableRawPointer, scope 1502 // user: %139
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1505 // id: %110
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1505 // id: %111
  %112 = metatype $@thick HeapObject.Type, scope 1505 // user: %113
  %113 = builtin "sizeof"<HeapObject>(%112 : $@thick HeapObject.Type) : $Builtin.Word, scope 1505 // user: %114
  %114 = builtin "zextOrBitCast_Word_Int64"(%113 : $Builtin.Word) : $Builtin.Int64, scope 1505 // user: %118
  %115 = metatype $@thick _StringBufferIVars.Type, scope 1505 // user: %116
  %116 = builtin "alignof"<_StringBufferIVars>(%115 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1505 // user: %117
  %117 = builtin "zextOrBitCast_Word_Int64"(%116 : $Builtin.Word) : $Builtin.Int64, scope 1505 // users: %124, %118
  %118 = builtin "uadd_with_overflow_Int64"(%114 : $Builtin.Int64, %117 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1505 // users: %120, %119
  %119 = tuple_extract %118 : $(Builtin.Int64, Builtin.Int1), 0, scope 1505 // user: %122
  %120 = tuple_extract %118 : $(Builtin.Int64, Builtin.Int1), 1, scope 1505 // user: %121
  cond_fail %120 : $Builtin.Int1, scope 1505      // id: %121
  %122 = builtin "usub_with_overflow_Int64"(%119 : $Builtin.Int64, %6 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1505 // user: %123
  %123 = tuple_extract %122 : $(Builtin.Int64, Builtin.Int1), 0, scope 1505 // user: %128
  %124 = builtin "usub_with_overflow_Int64"(%117 : $Builtin.Int64, %6 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1505 // user: %125
  %125 = tuple_extract %124 : $(Builtin.Int64, Builtin.Int1), 0, scope 1505 // user: %127
  %126 = integer_literal $Builtin.Int64, -1, scope 1505 // users: %163, %127
  %127 = builtin "xor_Int64"(%125 : $Builtin.Int64, %126 : $Builtin.Int64) : $Builtin.Int64, scope 1505 // user: %128
  %128 = builtin "and_Int64"(%123 : $Builtin.Int64, %127 : $Builtin.Int64) : $Builtin.Int64, scope 1505 // user: %129
  %129 = builtin "u_to_s_checked_conversion_Int64"(%128 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1505 // users: %134, %130
  %130 = tuple_extract %129 : $(Builtin.Int64, Builtin.Int1), 1, scope 1505 // user: %131
  cond_fail %130 : $Builtin.Int1, scope 1505      // id: %131
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1505 // id: %132
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1505 // id: %133
  %134 = tuple_extract %129 : $(Builtin.Int64, Builtin.Int1), 0, scope 1505 // user: %135
  %135 = builtin "truncOrBitCast_Int64_Word"(%134 : $Builtin.Int64) : $Builtin.Word, scope 1505 // user: %136
  %136 = index_raw_pointer %99 : $Builtin.RawPointer, %135 : $Builtin.Word, scope 1505 // user: %137
  %137 = pointer_to_address %136 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 1502 // users: %177, %138
  %138 = struct_element_addr %137 : $*_StringBufferIVars, #_StringBufferIVars.usedEnd, scope 1502 // user: %139
  store %109 to %138 : $*Optional<UnsafeMutableRawPointer>, scope 1502 // id: %139
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1508 // id: %140
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1508 // id: %141
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1508 // id: %142
  debug_value %44 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1508 // id: %143
  // function_ref _swift_stdlib_malloc_size
  %144 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1508 // user: %147
  %145 = struct $UnsafeRawPointer (%99 : $Builtin.RawPointer), scope 1508 // user: %146
  %146 = enum $ImplicitlyUnwrappedOptional<UnsafeRawPointer>, #ImplicitlyUnwrappedOptional.some!enumelt.1, %145 : $UnsafeRawPointer, scope 1508 // user: %147
  %147 = apply %144(%146) : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1508 // user: %148
  %148 = struct_extract %147 : $Int, #Int._value, scope 1508 // user: %149
  %149 = builtin "ssub_with_overflow_Int64"(%148 : $Builtin.Int64, %100 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1508 // users: %151, %150
  %150 = tuple_extract %149 : $(Builtin.Int64, Builtin.Int1), 0, scope 1508 // users: %166, %160
  %151 = tuple_extract %149 : $(Builtin.Int64, Builtin.Int1), 1, scope 1508 // user: %152
  cond_fail %151 : $Builtin.Int1, scope 1508      // id: %152
  %153 = metatype $@thick UInt16.Type, scope 1508 // user: %154
  %154 = builtin "strideof_nonzero"<UInt16>(%153 : $@thick UInt16.Type) : $Builtin.Word, scope 1508 // user: %155
  %155 = builtin "zextOrBitCast_Word_Int64"(%154 : $Builtin.Word) : $Builtin.Int64, scope 1508 // users: %166, %163, %156
  %156 = builtin "cmp_eq_Int64"(%155 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1, scope 1508 // user: %157
  %157 = builtin "or_Int1"(%97 : $Builtin.Int1, %156 : $Builtin.Int1) : $Builtin.Int1, scope 1508 // user: %158
  cond_fail %157 : $Builtin.Int1, scope 1508      // id: %158
  %159 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1508 // user: %160
  %160 = builtin "cmp_eq_Int64"(%150 : $Builtin.Int64, %159 : $Builtin.Int64) : $Builtin.Int1, scope 1508 // user: %161
  cond_br %160, bb9, bb8, scope 1508              // id: %161

bb8:                                              // Preds: bb7
  br bb10, scope 1502                             // id: %162

bb9:                                              // Preds: bb7
  %163 = builtin "cmp_eq_Int64"(%155 : $Builtin.Int64, %126 : $Builtin.Int64) : $Builtin.Int1, scope 1508 // user: %164
  cond_fail %163 : $Builtin.Int1, scope 1508      // id: %164
  br bb10, scope 1508                             // id: %165

bb10:                                             // Preds: bb8 bb9
  %166 = builtin "sdiv_Int64"(%150 : $Builtin.Int64, %155 : $Builtin.Int64) : $Builtin.Int64, scope 1508 // user: %167
  %167 = builtin "ssub_with_overflow_Int64"(%166 : $Builtin.Int64, %12 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %169, %168
  %168 = tuple_extract %167 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %171
  %169 = tuple_extract %167 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %170
  cond_fail %169 : $Builtin.Int1, scope 1502      // id: %170
  %171 = builtin "shl_Int64"(%168 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int64, scope 1502 // user: %172
  %172 = builtin "sadd_with_overflow_Int64"(%171 : $Builtin.Int64, %10 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1502 // users: %174, %173
  %173 = tuple_extract %172 : $(Builtin.Int64, Builtin.Int1), 0, scope 1502 // user: %176
  %174 = tuple_extract %172 : $(Builtin.Int64, Builtin.Int1), 1, scope 1502 // user: %175
  cond_fail %174 : $Builtin.Int1, scope 1502      // id: %175
  %176 = struct $Int (%173 : $Builtin.Int64), scope 1502 // user: %178
  %177 = struct_element_addr %137 : $*_StringBufferIVars, #_StringBufferIVars.capacityAndElementShift, scope 1502 // user: %178
  store %176 to %177 : $*Int, scope 1502          // id: %178
  %179 = struct $_StringBuffer (%44 : $_HeapBuffer<_StringBufferIVars, UInt16>), scope 1502 // user: %180
  return %179 : $_StringBuffer, scope 1502        // id: %180

bb11:                                             // Preds: bb6
  cond_fail %14 : $Builtin.Int1, scope 1502       // id: %181
  unreachable, scope 1502                         // id: %182

bb12:                                             // Preds: bb4
  cond_fail %14 : $Builtin.Int1, scope 1502       // id: %183
  unreachable, scope 1502                         // id: %184
}

sil_scope 1509 {  parent @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int }

// specialized specialized static _HeapBuffer._elementOffset() -> Int
sil shared_external [fragile] @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int {
bb0:
  %0 = metatype $@thick HeapObject.Type, scope 1509 // user: %1
  %1 = builtin "sizeof"<HeapObject>(%0 : $@thick HeapObject.Type) : $Builtin.Word, scope 1509 // user: %2
  %2 = builtin "zextOrBitCast_Word_Int64"(%1 : $Builtin.Word) : $Builtin.Int64, scope 1509 // user: %7
  %3 = metatype $@thick _StringBufferIVars.Type, scope 1509 // users: %24, %4
  %4 = builtin "alignof"<_StringBufferIVars>(%3 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1509 // user: %5
  %5 = builtin "zextOrBitCast_Word_Int64"(%4 : $Builtin.Word) : $Builtin.Int64, scope 1509 // users: %15, %7
  %6 = integer_literal $Builtin.Int1, -1, scope 1509 // users: %33, %26, %7
  %7 = builtin "uadd_with_overflow_Int64"(%2 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1, scope 1509 // user: %10
  cond_fail %9 : $Builtin.Int1, scope 1509        // id: %10
  %11 = integer_literal $Builtin.Int64, 1, scope 1509 // users: %39, %37, %15, %13
  %12 = integer_literal $Builtin.Int1, 0, scope 1509 // users: %39, %37, %15, %13
  %13 = builtin "usub_with_overflow_Int64"(%8 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // user: %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %19
  %15 = builtin "usub_with_overflow_Int64"(%5 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %18
  %17 = integer_literal $Builtin.Int64, -1, scope 1509 // users: %41, %18
  %18 = builtin "xor_Int64"(%16 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 1509 // user: %19
  %19 = builtin "and_Int64"(%14 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int64, scope 1509 // user: %20
  %20 = builtin "u_to_s_checked_conversion_Int64"(%19 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1509 // users: %22, %21
  %21 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %26
  %22 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 1, scope 1509 // user: %23
  cond_fail %22 : $Builtin.Int1, scope 1509       // id: %23
  %24 = builtin "sizeof"<_StringBufferIVars>(%3 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1509 // user: %25
  %25 = builtin "zextOrBitCast_Word_Int64"(%24 : $Builtin.Word) : $Builtin.Int64, scope 1509 // user: %26
  %26 = builtin "sadd_with_overflow_Int64"(%21 : $Builtin.Int64, %25 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // users: %28, %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %33
  %28 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 1, scope 1509 // user: %29
  cond_fail %28 : $Builtin.Int1, scope 1509       // id: %29
  %30 = metatype $@thick UInt16.Type, scope 1509  // user: %31
  %31 = builtin "alignof"<UInt16>(%30 : $@thick UInt16.Type) : $Builtin.Word, scope 1509 // user: %32
  %32 = builtin "zextOrBitCast_Word_Int64"(%31 : $Builtin.Word) : $Builtin.Int64, scope 1509 // users: %39, %33
  %33 = builtin "uadd_with_overflow_Int64"(%27 : $Builtin.Int64, %32 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // users: %35, %34
  %34 = tuple_extract %33 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %37
  %35 = tuple_extract %33 : $(Builtin.Int64, Builtin.Int1), 1, scope 1509 // user: %36
  cond_fail %35 : $Builtin.Int1, scope 1509       // id: %36
  %37 = builtin "usub_with_overflow_Int64"(%34 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // user: %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %42
  %39 = builtin "usub_with_overflow_Int64"(%32 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1509 // user: %40
  %40 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %41
  %41 = builtin "xor_Int64"(%40 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 1509 // user: %42
  %42 = builtin "and_Int64"(%38 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int64, scope 1509 // user: %43
  %43 = builtin "u_to_s_checked_conversion_Int64"(%42 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1509 // users: %45, %44
  %44 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 0, scope 1509 // user: %47
  %45 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 1, scope 1509 // user: %46
  cond_fail %45 : $Builtin.Int1, scope 1509       // id: %46
  %47 = struct $Int (%44 : $Builtin.Int64), scope 1509 // user: %48
  return %47 : $Int, scope 1509                   // id: %48
}

sil_scope 1510 {  parent @_TTSfq4n_d___TFVs11_StringCoreCfVs13_StringBufferS_ : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore }
sil_scope 1511 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferlu5valuex : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafePointer<_StringBufferIVars> }
sil_scope 1512 {  parent 1510 }
sil_scope 1513 {  parent 1511 inlined_at 1512 }

// specialized _StringCore.init(_StringBuffer) -> _StringCore
sil hidden_external [fragile] @_TTSfq4n_d___TFVs11_StringCoreCfVs13_StringBufferS_ : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore {
// %0                                             // users: %57, %21, %20, %3, %2, %1
bb0(%0 : $_StringBuffer):
  debug_value %0 : $_StringBuffer, scope 1510     // id: %1
  debug_value %0 : $_StringBuffer, scope 1510     // id: %2
  %3 = struct_extract %0 : $_StringBuffer, #_StringBuffer._storage, scope 1510 // users: %48, %47, %23, %22, %62, %58, %9, %8, %5, %4
  %4 = struct_extract %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1510 // users: %63, %59, %11, %10
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1510 // id: %5
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %6 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1510 // user: %7
  %7 = apply %6() : $@convention(thin) () -> Int, scope 1510 // users: %14, %13
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1510 // id: %8
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1510 // id: %9
  switch_enum %4 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb2, case #Optional.some!enumelt.1: bb1, scope 1510 // id: %10

bb1:                                              // Preds: bb0
  %11 = unchecked_enum_data %4 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1510 // users: %64, %61, %60, %12
  %12 = ref_to_raw_pointer %11 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1510 // users: %51, %16
  %13 = struct_extract %7 : $Int, #Int._value, scope 1510 // user: %15
  debug_value %7 : $Int, scope 1510               // id: %14
  %15 = builtin "truncOrBitCast_Int64_Word"(%13 : $Builtin.Int64) : $Builtin.Word, scope 1510 // user: %16
  %16 = index_raw_pointer %12 : $Builtin.RawPointer, %15 : $Builtin.Word, scope 1510 // user: %17
  %17 = struct $UnsafeMutableRawPointer (%16 : $Builtin.RawPointer), scope 1510 // user: %18
  %18 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %17 : $UnsafeMutableRawPointer, scope 1510 // users: %78, %66
  // function_ref _StringBuffer.usedCount.getter
  %19 = function_ref @_TFVs13_StringBufferg9usedCountSi : $@convention(method) (@guaranteed _StringBuffer) -> Int, scope 1510 // user: %20
  %20 = apply %19(%0) : $@convention(method) (@guaranteed _StringBuffer) -> Int, scope 1510 // users: %71, %67
  debug_value %0 : $_StringBuffer, scope 1510     // id: %21
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1513 // id: %22
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1513 // id: %23
  %24 = metatype $@thick HeapObject.Type, scope 1513 // user: %25
  %25 = builtin "sizeof"<HeapObject>(%24 : $@thick HeapObject.Type) : $Builtin.Word, scope 1513 // user: %26
  %26 = builtin "zextOrBitCast_Word_Int64"(%25 : $Builtin.Word) : $Builtin.Int64, scope 1513 // user: %31
  %27 = metatype $@thick _StringBufferIVars.Type, scope 1513 // user: %28
  %28 = builtin "alignof"<_StringBufferIVars>(%27 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1513 // user: %29
  %29 = builtin "zextOrBitCast_Word_Int64"(%28 : $Builtin.Word) : $Builtin.Int64, scope 1513 // users: %39, %31
  %30 = integer_literal $Builtin.Int1, -1, scope 1513 // user: %31
  %31 = builtin "uadd_with_overflow_Int64"(%26 : $Builtin.Int64, %29 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1513 // users: %33, %32
  %32 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 0, scope 1513 // user: %37
  %33 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 1, scope 1513 // user: %34
  cond_fail %33 : $Builtin.Int1, scope 1513       // id: %34
  %35 = integer_literal $Builtin.Int64, 1, scope 1513 // users: %56, %39, %37
  %36 = integer_literal $Builtin.Int1, 0, scope 1513 // users: %39, %37
  %37 = builtin "usub_with_overflow_Int64"(%32 : $Builtin.Int64, %35 : $Builtin.Int64, %36 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1513 // user: %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 1513 // user: %43
  %39 = builtin "usub_with_overflow_Int64"(%29 : $Builtin.Int64, %35 : $Builtin.Int64, %36 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1513 // user: %40
  %40 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 0, scope 1513 // user: %42
  %41 = integer_literal $Builtin.Int64, -1, scope 1513 // user: %42
  %42 = builtin "xor_Int64"(%40 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int64, scope 1513 // user: %43
  %43 = builtin "and_Int64"(%38 : $Builtin.Int64, %42 : $Builtin.Int64) : $Builtin.Int64, scope 1513 // user: %44
  %44 = builtin "u_to_s_checked_conversion_Int64"(%43 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1513 // users: %49, %45
  %45 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 1, scope 1513 // user: %46
  cond_fail %45 : $Builtin.Int1, scope 1513       // id: %46
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1513 // id: %47
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1513 // id: %48
  %49 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 0, scope 1513 // user: %50
  %50 = builtin "truncOrBitCast_Int64_Word"(%49 : $Builtin.Int64) : $Builtin.Word, scope 1513 // user: %51
  %51 = index_raw_pointer %12 : $Builtin.RawPointer, %50 : $Builtin.Word, scope 1513 // user: %52
  %52 = pointer_to_address %51 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 1510 // user: %53
  %53 = struct_element_addr %52 : $*_StringBufferIVars, #_StringBufferIVars.capacityAndElementShift, scope 1510 // user: %54
  %54 = struct_element_addr %53 : $*Int, #Int._value, scope 1510 // user: %55
  %55 = load %54 : $*Builtin.Int64, scope 1510    // user: %56
  %56 = builtin "and_Int64"(%55 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int64, scope 1510 // user: %70
  debug_value %0 : $_StringBuffer, scope 1510     // id: %57
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1510 // id: %58
  debug_value %4 : $Optional<Builtin.NativeObject>, scope 1510 // id: %59
  debug_value %11 : $Builtin.NativeObject, scope 1510 // id: %60
  %61 = unchecked_ref_cast %11 : $Builtin.NativeObject to $AnyObject, scope 1510 // user: %65
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1510 // id: %62
  debug_value %4 : $Optional<Builtin.NativeObject>, scope 1510 // id: %63
  debug_value %11 : $Builtin.NativeObject, scope 1510 // id: %64
  %65 = enum $Optional<AnyObject>, #Optional.some!enumelt.1, %61 : $AnyObject, scope 1510 // users: %78, %68
  debug_value %18 : $Optional<UnsafeMutableRawPointer>, scope 1510 // id: %66
  debug_value %20 : $Int, scope 1510              // id: %67
  debug_value %65 : $Optional<AnyObject>, scope 1510 // id: %68
  %69 = integer_literal $Builtin.Int64, 63, scope 1510 // user: %70
  %70 = builtin "shl_Int64"(%56 : $Builtin.Int64, %69 : $Builtin.Int64) : $Builtin.Int64, scope 1510 // user: %76
  %71 = struct_extract %20 : $Int, #Int._value, scope 1510 // user: %72
  %72 = builtin "s_to_u_checked_conversion_Int64"(%71 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1510 // users: %74, %73
  %73 = tuple_extract %72 : $(Builtin.Int64, Builtin.Int1), 0, scope 1510 // user: %76
  %74 = tuple_extract %72 : $(Builtin.Int64, Builtin.Int1), 1, scope 1510 // user: %75
  cond_fail %74 : $Builtin.Int1, scope 1510       // id: %75
  %76 = builtin "or_Int64"(%70 : $Builtin.Int64, %73 : $Builtin.Int64) : $Builtin.Int64, scope 1510 // user: %77
  %77 = struct $UInt (%76 : $Builtin.Int64), scope 1510 // user: %78
  %78 = struct $_StringCore (%18 : $Optional<UnsafeMutableRawPointer>, %77 : $UInt, %65 : $Optional<AnyObject>), scope 1510 // user: %79
  return %78 : $_StringCore, scope 1510           // id: %79

bb2:                                              // Preds: bb0
  %80 = integer_literal $Builtin.Int1, -1, scope 1510 // user: %81
  cond_fail %80 : $Builtin.Int1, scope 1510       // id: %81
  unreachable, scope 1510                         // id: %82
}

sil_scope 1514 {  parent @_TTSfq4n_d___TZFVs4UTF810_decodeOnefVs6UInt32T6resultGSqS0__6lengthVs5UInt8_ : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8) }

// specialized static UTF8._decodeOne(UInt32) -> (result : UInt32?, length : UInt8)
sil public_external [fragile] @_TTSfq4n_d___TZFVs4UTF810_decodeOnefVs6UInt32T6resultGSqS0__6lengthVs5UInt8_ : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8) {
// %0                                             // users: %3, %1
bb0(%0 : $UInt32):
  debug_value %0 : $UInt32, scope 1514            // id: %1
  %2 = integer_literal $Builtin.Int32, 128, scope 1514 // user: %4
  %3 = struct_extract %0 : $UInt32, #UInt32._value, scope 1514 // users: %194, %179, %176, %171, %164, %148, %138, %133, %129, %123, %113, %94, %89, %79, %75, %70, %66, %60, %54, %49, %43, %10, %4
  %4 = builtin "and_Int32"(%3 : $Builtin.Int32, %2 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %6
  %5 = integer_literal $Builtin.Int32, 0, scope 1514 // users: %172, %114, %55, %44, %36, %28, %25, %6
  %6 = builtin "cmp_eq_Int32"(%4 : $Builtin.Int32, %5 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %7
  cond_br %6, bb39, bb1, scope 1514               // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int32, -1325400065, scope 1514 // user: %20
  %9 = integer_literal $Builtin.Int32, 3, scope 1514 // user: %10
  %10 = builtin "lshr_Int32"(%3 : $Builtin.Int32, %9 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %12
  %11 = integer_literal $Builtin.Int32, 31, scope 1514 // users: %179, %12
  %12 = builtin "and_Int32"(%10 : $Builtin.Int32, %11 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // users: %23, %20, %16
  %13 = integer_literal $Builtin.Int8, 2, scope 1514 // users: %186, %153, %102
  %14 = integer_literal $Builtin.Int32, 1, scope 1514 // users: %24, %30, %33, %21
  %15 = integer_literal $Builtin.Int32, 32, scope 1514 // user: %16
  %16 = builtin "cmp_ult_Int32"(%12 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %18
  %17 = integer_literal $Builtin.Int1, -1, scope 1514 // user: %18
  %18 = builtin "xor_Int1"(%16 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %19
  cond_fail %18 : $Builtin.Int1, scope 1514       // id: %19
  %20 = builtin "lshr_Int32"(%8 : $Builtin.Int32, %12 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %21
  %21 = builtin "and_Int32"(%20 : $Builtin.Int32, %14 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // users: %28, %30, %36
  %22 = integer_literal $Builtin.Int32, -1056964609, scope 1514 // user: %23
  %23 = builtin "lshr_Int32"(%22 : $Builtin.Int32, %12 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %24
  %24 = builtin "and_Int32"(%23 : $Builtin.Int32, %14 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // users: %33, %25
  %25 = builtin "cmp_eq_Int32"(%5 : $Builtin.Int32, %24 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %26
  cond_br %25, bb3, bb2, scope 1514               // id: %26

bb2:                                              // Preds: bb1
  br bb6, scope 1514                              // id: %27

bb3:                                              // Preds: bb1
  %28 = builtin "cmp_eq_Int32"(%5 : $Builtin.Int32, %21 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %29
  cond_br %28, bb34, bb4, scope 1514              // id: %29

bb4:                                              // Preds: bb3
  %30 = builtin "cmp_eq_Int32"(%14 : $Builtin.Int32, %21 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %31
  cond_br %30, bb25, bb5, scope 1514              // id: %31

bb5:                                              // Preds: bb4
  br bb6, scope 1514                              // id: %32

bb6:                                              // Preds: bb5 bb2
  %33 = builtin "cmp_eq_Int32"(%14 : $Builtin.Int32, %24 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %34
  cond_br %33, bb8, bb7, scope 1514               // id: %34

bb7:                                              // Preds: bb6
  br bb10, scope 1514                             // id: %35

bb8:                                              // Preds: bb6
  %36 = builtin "cmp_eq_Int32"(%5 : $Builtin.Int32, %21 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %37
  cond_br %36, bb11, bb9, scope 1514              // id: %37

bb9:                                              // Preds: bb8
  br bb10, scope 1514                             // id: %38

bb10:                                             // Preds: bb9 bb7
  %39 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %41
  %40 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %41
  br bb40(%39 : $Optional<UInt32>, %40 : $Builtin.Int8), scope 1514 // id: %41

bb11:                                             // Preds: bb8
  %42 = integer_literal $Builtin.Int32, 12295, scope 1514 // user: %43
  %43 = builtin "and_Int32"(%3 : $Builtin.Int32, %42 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %44
  %44 = builtin "cmp_eq_Int32"(%43 : $Builtin.Int32, %5 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %46
  %45 = integer_literal $Builtin.Int1, 0, scope 1514 // users: %63, %56, %46
  %46 = builtin "int_expect_Int1"(%44 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %47
  cond_br %46, bb24, bb12, scope 1514             // id: %47

bb12:                                             // Preds: bb11
  %48 = integer_literal $Builtin.Int32, 4, scope 1514 // users: %76, %50, %49
  %49 = builtin "and_Int32"(%3 : $Builtin.Int32, %48 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %50
  %50 = builtin "cmp_eq_Int32"(%49 : $Builtin.Int32, %48 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %51
  cond_br %50, bb14, bb13, scope 1514             // id: %51

bb13:                                             // Preds: bb12
  br bb16, scope 1514                             // id: %52

bb14:                                             // Preds: bb12
  %53 = integer_literal $Builtin.Int32, 12291, scope 1514 // user: %54
  %54 = builtin "and_Int32"(%3 : $Builtin.Int32, %53 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %55
  %55 = builtin "cmp_ne_Int32"(%54 : $Builtin.Int32, %5 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %56
  %56 = builtin "int_expect_Int1"(%55 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %57
  cond_br %56, bb23, bb15, scope 1514             // id: %57

bb15:                                             // Preds: bb14
  br bb16, scope 1514                             // id: %58

bb16:                                             // Preds: bb15 bb13
  %59 = integer_literal $Builtin.Int32, -1061109512, scope 1514 // user: %60
  %60 = builtin "and_Int32"(%3 : $Builtin.Int32, %59 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %62
  %61 = integer_literal $Builtin.Int32, -2139062032, scope 1514 // user: %62
  %62 = builtin "cmp_ne_Int32"(%60 : $Builtin.Int32, %61 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %63
  %63 = builtin "int_expect_Int1"(%62 : $Builtin.Int1, %45 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %64
  cond_br %63, bb18, bb17, scope 1514             // id: %64

bb17:                                             // Preds: bb16
  %65 = integer_literal $Builtin.Int32, 1056964608, scope 1514 // user: %66
  %66 = builtin "and_Int32"(%3 : $Builtin.Int32, %65 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %68
  %67 = integer_literal $Builtin.Int32, 24, scope 1514 // user: %68
  %68 = builtin "lshr_Int32"(%66 : $Builtin.Int32, %67 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %73
  %69 = integer_literal $Builtin.Int32, 4128768, scope 1514 // user: %70
  %70 = builtin "and_Int32"(%3 : $Builtin.Int32, %69 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %72
  %71 = integer_literal $Builtin.Int32, 10, scope 1514 // user: %72
  %72 = builtin "lshr_Int32"(%70 : $Builtin.Int32, %71 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %73
  %73 = builtin "or_Int32"(%68 : $Builtin.Int32, %72 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %77
  %74 = integer_literal $Builtin.Int32, 16128, scope 1514 // user: %75
  %75 = builtin "and_Int32"(%3 : $Builtin.Int32, %74 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %76
  %76 = builtin "shl_Int32"(%75 : $Builtin.Int32, %48 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %77
  %77 = builtin "or_Int32"(%73 : $Builtin.Int32, %76 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %82
  %78 = integer_literal $Builtin.Int32, 7, scope 1514 // user: %79
  %79 = builtin "and_Int32"(%3 : $Builtin.Int32, %78 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %81
  %80 = integer_literal $Builtin.Int32, 18, scope 1514 // user: %81
  %81 = builtin "shl_Int32"(%79 : $Builtin.Int32, %80 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %82
  %82 = builtin "or_Int32"(%77 : $Builtin.Int32, %81 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %83
  %83 = struct $UInt32 (%82 : $Builtin.Int32), scope 1514 // users: %85, %84
  debug_value %83 : $UInt32, scope 1514           // id: %84
  %85 = enum $Optional<UInt32>, #Optional.some!enumelt.1, %83 : $UInt32, scope 1514 // user: %87
  %86 = integer_literal $Builtin.Int8, 4, scope 1514 // user: %87
  br bb40(%85 : $Optional<UInt32>, %86 : $Builtin.Int8), scope 1514 // id: %87

bb18:                                             // Preds: bb16
  %88 = integer_literal $Builtin.Int32, 49152, scope 1514 // user: %89
  %89 = builtin "and_Int32"(%3 : $Builtin.Int32, %88 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %91
  %90 = integer_literal $Builtin.Int32, 32768, scope 1514 // user: %91
  %91 = builtin "cmp_ne_Int32"(%89 : $Builtin.Int32, %90 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %92
  cond_br %91, bb22, bb19, scope 1514             // id: %92

bb19:                                             // Preds: bb18
  %93 = integer_literal $Builtin.Int32, 12582912, scope 1514 // user: %94
  %94 = builtin "and_Int32"(%3 : $Builtin.Int32, %93 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %96
  %95 = integer_literal $Builtin.Int32, 8388608, scope 1514 // user: %96
  %96 = builtin "cmp_ne_Int32"(%94 : $Builtin.Int32, %95 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %97
  cond_br %96, bb21, bb20, scope 1514             // id: %97

bb20:                                             // Preds: bb19
  %98 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %100
  %99 = integer_literal $Builtin.Int8, 3, scope 1514 // user: %100
  br bb40(%98 : $Optional<UInt32>, %99 : $Builtin.Int8), scope 1514 // id: %100

bb21:                                             // Preds: bb19
  %101 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %102
  br bb40(%101 : $Optional<UInt32>, %13 : $Builtin.Int8), scope 1514 // id: %102

bb22:                                             // Preds: bb18
  %103 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %105
  %104 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %105
  br bb40(%103 : $Optional<UInt32>, %104 : $Builtin.Int8), scope 1514 // id: %105

bb23:                                             // Preds: bb14
  %106 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %108
  %107 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %108
  br bb40(%106 : $Optional<UInt32>, %107 : $Builtin.Int8), scope 1514 // id: %108

bb24:                                             // Preds: bb11
  %109 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %111
  %110 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %111
  br bb40(%109 : $Optional<UInt32>, %110 : $Builtin.Int8), scope 1514 // id: %111

bb25:                                             // Preds: bb4
  %112 = integer_literal $Builtin.Int32, 8207, scope 1514 // user: %113
  %113 = builtin "and_Int32"(%3 : $Builtin.Int32, %112 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // users: %119, %114
  %114 = builtin "cmp_eq_Int32"(%113 : $Builtin.Int32, %5 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %116
  %115 = integer_literal $Builtin.Int1, 0, scope 1514 // users: %126, %120, %116
  %116 = builtin "int_expect_Int1"(%114 : $Builtin.Int1, %115 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %117
  cond_br %116, bb33, bb26, scope 1514            // id: %117

bb26:                                             // Preds: bb25
  %118 = integer_literal $Builtin.Int32, 8205, scope 1514 // user: %119
  %119 = builtin "cmp_eq_Int32"(%113 : $Builtin.Int32, %118 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %120
  %120 = builtin "int_expect_Int1"(%119 : $Builtin.Int1, %115 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %121
  cond_br %120, bb32, bb27, scope 1514            // id: %121

bb27:                                             // Preds: bb26
  %122 = integer_literal $Builtin.Int32, 12632304, scope 1514 // user: %123
  %123 = builtin "and_Int32"(%3 : $Builtin.Int32, %122 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %125
  %124 = integer_literal $Builtin.Int32, 8421600, scope 1514 // user: %125
  %125 = builtin "cmp_ne_Int32"(%123 : $Builtin.Int32, %124 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %126
  %126 = builtin "int_expect_Int1"(%125 : $Builtin.Int1, %115 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %127
  cond_br %126, bb29, bb28, scope 1514            // id: %127

bb28:                                             // Preds: bb27
  %128 = integer_literal $Builtin.Int32, 4128768, scope 1514 // user: %129
  %129 = builtin "and_Int32"(%3 : $Builtin.Int32, %128 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %131
  %130 = integer_literal $Builtin.Int32, 16, scope 1514 // user: %131
  %131 = builtin "lshr_Int32"(%129 : $Builtin.Int32, %130 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %136
  %132 = integer_literal $Builtin.Int32, 16128, scope 1514 // user: %133
  %133 = builtin "and_Int32"(%3 : $Builtin.Int32, %132 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %135
  %134 = integer_literal $Builtin.Int32, 2, scope 1514 // user: %135
  %135 = builtin "lshr_Int32"(%133 : $Builtin.Int32, %134 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %136
  %136 = builtin "or_Int32"(%131 : $Builtin.Int32, %135 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %141
  %137 = integer_literal $Builtin.Int32, 15, scope 1514 // user: %138
  %138 = builtin "and_Int32"(%3 : $Builtin.Int32, %137 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %140
  %139 = integer_literal $Builtin.Int32, 12, scope 1514 // user: %140
  %140 = builtin "shl_Int32"(%138 : $Builtin.Int32, %139 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %141
  %141 = builtin "or_Int32"(%136 : $Builtin.Int32, %140 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %142
  %142 = struct $UInt32 (%141 : $Builtin.Int32), scope 1514 // users: %144, %143
  debug_value %142 : $UInt32, scope 1514          // id: %143
  %144 = enum $Optional<UInt32>, #Optional.some!enumelt.1, %142 : $UInt32, scope 1514 // user: %146
  %145 = integer_literal $Builtin.Int8, 3, scope 1514 // user: %146
  br bb40(%144 : $Optional<UInt32>, %145 : $Builtin.Int8), scope 1514 // id: %146

bb29:                                             // Preds: bb27
  %147 = integer_literal $Builtin.Int32, 49152, scope 1514 // user: %148
  %148 = builtin "and_Int32"(%3 : $Builtin.Int32, %147 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %150
  %149 = integer_literal $Builtin.Int32, 32768, scope 1514 // user: %150
  %150 = builtin "cmp_ne_Int32"(%148 : $Builtin.Int32, %149 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %151
  cond_br %150, bb31, bb30, scope 1514            // id: %151

bb30:                                             // Preds: bb29
  %152 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %153
  br bb40(%152 : $Optional<UInt32>, %13 : $Builtin.Int8), scope 1514 // id: %153

bb31:                                             // Preds: bb29
  %154 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %156
  %155 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %156
  br bb40(%154 : $Optional<UInt32>, %155 : $Builtin.Int8), scope 1514 // id: %156

bb32:                                             // Preds: bb26
  %157 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %159
  %158 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %159
  br bb40(%157 : $Optional<UInt32>, %158 : $Builtin.Int8), scope 1514 // id: %159

bb33:                                             // Preds: bb25
  %160 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %162
  %161 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %162
  br bb40(%160 : $Optional<UInt32>, %161 : $Builtin.Int8), scope 1514 // id: %162

bb34:                                             // Preds: bb3
  %163 = integer_literal $Builtin.Int32, 49376, scope 1514 // user: %164
  %164 = builtin "and_Int32"(%3 : $Builtin.Int32, %163 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %166
  %165 = integer_literal $Builtin.Int32, 32960, scope 1514 // user: %166
  %166 = builtin "cmp_ne_Int32"(%164 : $Builtin.Int32, %165 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %168
  %167 = integer_literal $Builtin.Int1, 0, scope 1514 // users: %173, %168
  %168 = builtin "int_expect_Int1"(%166 : $Builtin.Int1, %167 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %169
  cond_br %168, bb38, bb35, scope 1514            // id: %169

bb35:                                             // Preds: bb34
  %170 = integer_literal $Builtin.Int32, 30, scope 1514 // user: %171
  %171 = builtin "and_Int32"(%3 : $Builtin.Int32, %170 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %172
  %172 = builtin "cmp_eq_Int32"(%171 : $Builtin.Int32, %5 : $Builtin.Int32) : $Builtin.Int1, scope 1514 // user: %173
  %173 = builtin "int_expect_Int1"(%172 : $Builtin.Int1, %167 : $Builtin.Int1) : $Builtin.Int1, scope 1514 // user: %174
  cond_br %173, bb37, bb36, scope 1514            // id: %174

bb36:                                             // Preds: bb35
  %175 = integer_literal $Builtin.Int32, 16128, scope 1514 // user: %176
  %176 = builtin "and_Int32"(%3 : $Builtin.Int32, %175 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %178
  %177 = integer_literal $Builtin.Int32, 8, scope 1514 // user: %178
  %178 = builtin "lshr_Int32"(%176 : $Builtin.Int32, %177 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %182
  %179 = builtin "and_Int32"(%3 : $Builtin.Int32, %11 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %181
  %180 = integer_literal $Builtin.Int32, 6, scope 1514 // user: %181
  %181 = builtin "shl_Int32"(%179 : $Builtin.Int32, %180 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %182
  %182 = builtin "or_Int32"(%178 : $Builtin.Int32, %181 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %183
  %183 = struct $UInt32 (%182 : $Builtin.Int32), scope 1514 // users: %185, %184
  debug_value %183 : $UInt32, scope 1514          // id: %184
  %185 = enum $Optional<UInt32>, #Optional.some!enumelt.1, %183 : $UInt32, scope 1514 // user: %186
  br bb40(%185 : $Optional<UInt32>, %13 : $Builtin.Int8), scope 1514 // id: %186

bb37:                                             // Preds: bb35
  %187 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %189
  %188 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %189
  br bb40(%187 : $Optional<UInt32>, %188 : $Builtin.Int8), scope 1514 // id: %189

bb38:                                             // Preds: bb34
  %190 = enum $Optional<UInt32>, #Optional.none!enumelt, scope 1514 // user: %192
  %191 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %192
  br bb40(%190 : $Optional<UInt32>, %191 : $Builtin.Int8), scope 1514 // id: %192

bb39:                                             // Preds: bb0
  %193 = integer_literal $Builtin.Int32, 255, scope 1514 // user: %194
  %194 = builtin "and_Int32"(%3 : $Builtin.Int32, %193 : $Builtin.Int32) : $Builtin.Int32, scope 1514 // user: %195
  %195 = struct $UInt32 (%194 : $Builtin.Int32), scope 1514 // users: %197, %196
  debug_value %195 : $UInt32, scope 1514          // id: %196
  %197 = enum $Optional<UInt32>, #Optional.some!enumelt.1, %195 : $UInt32, scope 1514 // user: %199
  %198 = integer_literal $Builtin.Int8, 1, scope 1514 // user: %199
  br bb40(%197 : $Optional<UInt32>, %198 : $Builtin.Int8), scope 1514 // id: %199

// %200                                           // user: %203
// %201                                           // user: %202
bb40(%200 : $Optional<UInt32>, %201 : $Builtin.Int8): // Preds: bb39 bb38 bb37 bb36 bb33 bb32 bb31 bb30 bb28 bb24 bb23 bb22 bb21 bb20 bb17 bb10
  %202 = struct $UInt8 (%201 : $Builtin.Int8), scope 1514 // user: %203
  %203 = tuple (%200 : $Optional<UInt32>, %202 : $UInt8), scope 1514 // user: %204
  return %203 : $(Optional<UInt32>, UInt8), scope 1514 // id: %204
}

sil_scope 1515 {  parent @_TTSfq4g_d___TFSSCft19stringInterpolationGSaSS__SS : $@convention(thin) (@guaranteed Array<String>) -> @owned String }

// specialized String.init(stringInterpolation : [String]...) -> String
sil public_external [fragile] [readonly] @_TTSfq4g_d___TFSSCft19stringInterpolationGSaSS__SS : $@convention(thin) (@guaranteed Array<String>) -> @owned String {
// %0                                             // users: %134, %100, %67, %60, %16, %15, %12, %2
bb0(%0 : $Array<String>):
  %1 = alloc_stack $_StringCore, scope 1515       // users: %138, %136, %125, %119, %63, %61, %11
  debug_value %0 : $Array<String>, scope 1515     // id: %2
  %3 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 1515 // user: %10
  %4 = global_addr @_Tvs19_emptyStringStorageVs6UInt32 : $*UInt32, scope 1515 // user: %5
  %5 = address_to_pointer %4 : $*UInt32 to $Builtin.RawPointer, scope 1515 // user: %6
  %6 = struct $UnsafeMutableRawPointer (%5 : $Builtin.RawPointer), scope 1515 // user: %7
  %7 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %6 : $UnsafeMutableRawPointer, scope 1515 // user: %10
  %8 = integer_literal $Builtin.Int64, 0, scope 1515 // users: %115, %101, %65, %57, %9
  %9 = struct $UInt (%8 : $Builtin.Int64), scope 1515 // user: %10
  %10 = struct $_StringCore (%7 : $Optional<UnsafeMutableRawPointer>, %9 : $UInt, %3 : $Optional<AnyObject>), scope 1515 // user: %11
  store %10 to %1 : $*_StringCore, scope 1515     // id: %11
  %12 = struct_extract %0 : $Array<String>, #Array._buffer, scope 1515 // users: %69, %68, %18, %17, %13
  %13 = struct_extract %12 : $_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 1515 // users: %70, %19, %14
  %14 = struct_extract %13 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1515 // users: %22, %20
  debug_value %0 : $Array<String>, scope 1515     // id: %15
  debug_value %0 : $Array<String>, scope 1515     // id: %16
  debug_value %12 : $_ArrayBuffer<String>, scope 1515 // id: %17
  debug_value %12 : $_ArrayBuffer<String>, scope 1515 // id: %18
  debug_value %13 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1515 // id: %19
  %20 = unchecked_ref_cast %14 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1515 // user: %51
  %21 = builtin "onFastPath"() : $(), scope 1515
  %22 = ref_to_raw_pointer %14 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1515 // users: %98, %49
  %23 = builtin "onFastPath"() : $(), scope 1515
  %24 = metatype $@thick HeapObject.Type, scope 1515 // user: %25
  %25 = builtin "sizeof"<HeapObject>(%24 : $@thick HeapObject.Type) : $Builtin.Word, scope 1515 // user: %26
  %26 = builtin "zextOrBitCast_Word_Int64"(%25 : $Builtin.Word) : $Builtin.Int64, scope 1515 // user: %31
  %27 = metatype $@thick _ArrayBody.Type, scope 1515 // users: %74, %28
  %28 = builtin "alignof"<_ArrayBody>(%27 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1515 // user: %29
  %29 = builtin "zextOrBitCast_Word_Int64"(%28 : $Builtin.Word) : $Builtin.Int64, scope 1515 // users: %39, %31
  %30 = integer_literal $Builtin.Int1, -1, scope 1515 // users: %129, %83, %76, %31
  %31 = builtin "uadd_with_overflow_Int64"(%26 : $Builtin.Int64, %29 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // users: %33, %32
  %32 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %37
  %33 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 1, scope 1515 // user: %34
  cond_fail %33 : $Builtin.Int1, scope 1515       // id: %34
  %35 = integer_literal $Builtin.Int64, 1, scope 1515 // users: %129, %89, %87, %39, %37
  %36 = integer_literal $Builtin.Int1, 0, scope 1515 // users: %89, %87, %39, %37
  %37 = builtin "usub_with_overflow_Int64"(%32 : $Builtin.Int64, %35 : $Builtin.Int64, %36 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // user: %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %43
  %39 = builtin "usub_with_overflow_Int64"(%29 : $Builtin.Int64, %35 : $Builtin.Int64, %36 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // user: %40
  %40 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %42
  %41 = integer_literal $Builtin.Int64, -1, scope 1515 // users: %91, %42
  %42 = builtin "xor_Int64"(%40 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int64, scope 1515 // user: %43
  %43 = builtin "and_Int64"(%38 : $Builtin.Int64, %42 : $Builtin.Int64) : $Builtin.Int64, scope 1515 // user: %44
  %44 = builtin "u_to_s_checked_conversion_Int64"(%43 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1515 // users: %46, %45
  %45 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // users: %76, %48
  %46 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 1, scope 1515 // user: %47
  cond_fail %46 : $Builtin.Int1, scope 1515       // id: %47
  %48 = builtin "truncOrBitCast_Int64_Word"(%45 : $Builtin.Int64) : $Builtin.Word, scope 1515 // user: %49
  %49 = index_raw_pointer %22 : $Builtin.RawPointer, %48 : $Builtin.Word, scope 1515 // user: %50
  %50 = pointer_to_address %49 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1515 // user: %51
  %51 = mark_dependence %50 : $*_ArrayBody on %20 : $Builtin.NativeObject, scope 1515 // user: %52
  %52 = struct_element_addr %51 : $*_ArrayBody, #_ArrayBody._storage, scope 1515 // user: %53
  %53 = struct_element_addr %52 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1515 // user: %54
  %54 = struct_element_addr %53 : $*Int, #Int._value, scope 1515 // user: %55
  %55 = load %54 : $*Builtin.Int64, scope 1515    // user: %56
  %56 = builtin "assumeNonNegative_Int64"(%55 : $Builtin.Int64) : $Builtin.Int64, scope 1515 // users: %131, %65, %57
  %57 = builtin "cmp_eq_Int64"(%8 : $Builtin.Int64, %56 : $Builtin.Int64) : $Builtin.Int1, scope 1515 // user: %58
  cond_br %57, bb1, bb2, scope 1515               // id: %58

bb1:                                              // Preds: bb0
  br bb9, scope 1515                              // id: %59

bb2:                                              // Preds: bb0
  debug_value %0 : $Array<String>, scope 1515     // id: %60
  %61 = struct_element_addr %1 : $*_StringCore, #_StringCore._countAndFlags, scope 1515 // user: %62
  %62 = struct_element_addr %61 : $*UInt, #UInt._value, scope 1515 // user: %113
  %63 = struct_element_addr %1 : $*_StringCore, #_StringCore._owner, scope 1515 // user: %124
  %64 = integer_literal $Builtin.Int64, 4611686018427387903, scope 1515 // user: %114
  %65 = builtin "cmp_sge_Int64"(%8 : $Builtin.Int64, %56 : $Builtin.Int64) : $Builtin.Int1, scope 1515 // user: %66
  cond_fail %65 : $Builtin.Int1, scope 1515       // id: %66
  debug_value %0 : $Array<String>, scope 1515     // id: %67
  debug_value %12 : $_ArrayBuffer<String>, scope 1515 // id: %68
  debug_value %12 : $_ArrayBuffer<String>, scope 1515 // id: %69
  debug_value %13 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1515 // id: %70
  %71 = builtin "onFastPath"() : $(), scope 1515
  %72 = builtin "onFastPath"() : $(), scope 1515
  %73 = builtin "onFastPath"() : $(), scope 1515
  %74 = builtin "sizeof"<_ArrayBody>(%27 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1515 // user: %75
  %75 = builtin "zextOrBitCast_Word_Int64"(%74 : $Builtin.Word) : $Builtin.Int64, scope 1515 // user: %76
  %76 = builtin "sadd_with_overflow_Int64"(%45 : $Builtin.Int64, %75 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // users: %78, %77
  %77 = tuple_extract %76 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %83
  %78 = tuple_extract %76 : $(Builtin.Int64, Builtin.Int1), 1, scope 1515 // user: %79
  cond_fail %78 : $Builtin.Int1, scope 1515       // id: %79
  %80 = metatype $@thick String.Type, scope 1515  // user: %81
  %81 = builtin "alignof"<String>(%80 : $@thick String.Type) : $Builtin.Word, scope 1515 // user: %82
  %82 = builtin "zextOrBitCast_Word_Int64"(%81 : $Builtin.Word) : $Builtin.Int64, scope 1515 // users: %89, %83
  %83 = builtin "uadd_with_overflow_Int64"(%77 : $Builtin.Int64, %82 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // users: %85, %84
  %84 = tuple_extract %83 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %87
  %85 = tuple_extract %83 : $(Builtin.Int64, Builtin.Int1), 1, scope 1515 // user: %86
  cond_fail %85 : $Builtin.Int1, scope 1515       // id: %86
  %87 = builtin "usub_with_overflow_Int64"(%84 : $Builtin.Int64, %35 : $Builtin.Int64, %36 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // user: %88
  %88 = tuple_extract %87 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %92
  %89 = builtin "usub_with_overflow_Int64"(%82 : $Builtin.Int64, %35 : $Builtin.Int64, %36 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // user: %90
  %90 = tuple_extract %89 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %91
  %91 = builtin "xor_Int64"(%90 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int64, scope 1515 // user: %92
  %92 = builtin "and_Int64"(%88 : $Builtin.Int64, %91 : $Builtin.Int64) : $Builtin.Int64, scope 1515 // user: %93
  %93 = builtin "u_to_s_checked_conversion_Int64"(%92 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1515 // users: %95, %94
  %94 = tuple_extract %93 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // user: %97
  %95 = tuple_extract %93 : $(Builtin.Int64, Builtin.Int1), 1, scope 1515 // user: %96
  cond_fail %95 : $Builtin.Int1, scope 1515       // id: %96
  %97 = builtin "truncOrBitCast_Int64_Word"(%94 : $Builtin.Int64) : $Builtin.Word, scope 1515 // user: %98
  %98 = index_raw_pointer %22 : $Builtin.RawPointer, %97 : $Builtin.Word, scope 1515 // user: %99
  %99 = pointer_to_address %98 : $Builtin.RawPointer to [strict] $*String, scope 1515 // user: %104
  retain_value %0 : $Array<String>, scope 1515    // id: %100
  br bb3(%8 : $Builtin.Int64), scope 1515         // id: %101

// %102                                           // users: %129, %103
bb3(%102 : $Builtin.Int64):                       // Preds: bb7 bb2
  %103 = builtin "truncOrBitCast_Int64_Word"(%102 : $Builtin.Int64) : $Builtin.Word, scope 1515 // user: %104
  %104 = index_addr %99 : $*String, %103 : $Builtin.Word, scope 1515 // user: %105
  %105 = struct_element_addr %104 : $*String, #String._core, scope 1515 // users: %111, %108, %106
  %106 = struct_element_addr %105 : $*_StringCore, #_StringCore._baseAddress, scope 1515 // user: %107
  %107 = load %106 : $*Optional<UnsafeMutableRawPointer>, scope 1515 // users: %123, %119
  %108 = struct_element_addr %105 : $*_StringCore, #_StringCore._countAndFlags, scope 1515 // user: %109
  %109 = struct_element_addr %108 : $*UInt, #UInt._value, scope 1515 // user: %110
  %110 = load %109 : $*Builtin.Int64, scope 1515  // users: %122, %119
  %111 = struct_element_addr %105 : $*_StringCore, #_StringCore._owner, scope 1515 // user: %112
  %112 = load %111 : $*Optional<AnyObject>, scope 1515 // users: %120, %126, %118, %123, %119
  %113 = load %62 : $*Builtin.Int64, scope 1515   // user: %114
  %114 = builtin "and_Int64"(%113 : $Builtin.Int64, %64 : $Builtin.Int64) : $Builtin.Int64, scope 1515 // user: %115
  %115 = builtin "cmp_eq_Int64"(%114 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int1, scope 1515 // user: %116
  cond_br %115, bb5, bb4, scope 1515              // id: %116

bb4:                                              // Preds: bb3
  // function_ref specialized _StringCore.append(_StringCore) -> ()
  %117 = function_ref @_TTSfq4gs_n___TFVs11_StringCore6appendfS_T_ : $@convention(method) (Optional<UnsafeMutableRawPointer>, Builtin.Int64, @guaranteed Optional<AnyObject>, @inout _StringCore) -> (), scope 1515 // user: %119
  retain_value %112 : $Optional<AnyObject>, scope 1515 // id: %118
  %119 = apply %117(%107, %110, %112, %1) : $@convention(method) (Optional<UnsafeMutableRawPointer>, Builtin.Int64, @guaranteed Optional<AnyObject>, @inout _StringCore) -> (), scope 1515
  release_value %112 : $Optional<AnyObject>, scope 1515 // id: %120
  br bb6, scope 1515                              // id: %121

bb5:                                              // Preds: bb3
  %122 = struct $UInt (%110 : $Builtin.Int64), scope 1515 // user: %123
  %123 = struct $_StringCore (%107 : $Optional<UnsafeMutableRawPointer>, %122 : $UInt, %112 : $Optional<AnyObject>), scope 1515 // user: %125
  %124 = load %63 : $*Optional<AnyObject>, scope 1515 // user: %127
  store %123 to %1 : $*_StringCore, scope 1515    // id: %125
  retain_value %112 : $Optional<AnyObject>, scope 1515 // id: %126
  release_value %124 : $Optional<AnyObject>, scope 1515 // id: %127
  br bb6, scope 1515                              // id: %128

bb6:                                              // Preds: bb5 bb4
  %129 = builtin "sadd_with_overflow_Int64"(%102 : $Builtin.Int64, %35 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1515 // user: %130
  %130 = tuple_extract %129 : $(Builtin.Int64, Builtin.Int1), 0, scope 1515 // users: %133, %131
  %131 = builtin "cmp_eq_Int64"(%130 : $Builtin.Int64, %56 : $Builtin.Int64) : $Builtin.Int1, scope 1515 // user: %132
  cond_br %131, bb8, bb7, scope 1515              // id: %132

bb7:                                              // Preds: bb6
  br bb3(%130 : $Builtin.Int64), scope 1515       // id: %133

bb8:                                              // Preds: bb6
  release_value %0 : $Array<String>, scope 1515   // id: %134
  br bb9, scope 1515                              // id: %135

bb9:                                              // Preds: bb1 bb8
  %136 = load %1 : $*_StringCore, scope 1515      // user: %137
  %137 = struct $String (%136 : $_StringCore), scope 1515 // user: %139
  dealloc_stack %1 : $*_StringCore, scope 1515    // id: %138
  return %137 : $String, scope 1515               // id: %139
}

sil_scope 1516 {  parent @_TTSfq4gs_n___TFVs11_StringCore6appendfS_T_ : $@convention(method) (Optional<UnsafeMutableRawPointer>, Builtin.Int64, @guaranteed Optional<AnyObject>, @inout _StringCore) -> () }
sil_scope 1517 {  parent @_TTSfq4n_s___TFVs11_StringCore8_pointerfT11toElementAtSi_Sv : $@convention(thin) (Int, Optional<UnsafeMutableRawPointer>, Builtin.Int64) -> UnsafeMutableRawPointer }
sil_scope 1518 {  parent 1516 }
sil_scope 1519 {  parent 1517 inlined_at 1518 }

// specialized _StringCore.append(_StringCore) -> ()
sil hidden_external [fragile] [noinline] @_TTSfq4gs_n___TFVs11_StringCore6appendfS_T_ : $@convention(method) (Optional<UnsafeMutableRawPointer>, Builtin.Int64, @guaranteed Optional<AnyObject>, @inout _StringCore) -> () {
// %0                                             // users: %107, %106, %25, %19
// %1                                             // users: %118, %58, %30, %14
// %2                                             // users: %132, %130, %126, %123
// %3                                             // users: %84, %83, %69, %65, %5, %4
bb0(%0 : $Optional<UnsafeMutableRawPointer>, %1 : $Builtin.Int64, %2 : $Optional<AnyObject>, %3 : $*_StringCore):
  debug_value_addr %3 : $*_StringCore, scope 1516 // id: %4
  %5 = struct_element_addr %3 : $*_StringCore, #_StringCore._countAndFlags, scope 1516 // user: %6
  %6 = struct_element_addr %5 : $*UInt, #UInt._value, scope 1516 // users: %109, %86, %81, %55, %7
  %7 = load %6 : $*Builtin.Int64, scope 1516      // user: %9
  %8 = integer_literal $Builtin.Int64, 63, scope 1516 // users: %91, %110, %14, %9
  %9 = builtin "lshr_Int64"(%7 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %12
  %10 = integer_literal $Builtin.Int64, 1, scope 1516 // users: %118, %111, %47, %20, %15, %12
  %11 = integer_literal $Builtin.Int1, 0, scope 1516 // users: %111, %15, %12
  %12 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1516 // user: %13
  %13 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 0, scope 1516 // users: %51, %17
  %14 = builtin "lshr_Int64"(%1 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%14 : $Builtin.Int64, %10 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1516 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 1516 // users: %108, %20, %17
  %17 = builtin "cmp_sge_Int64"(%13 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int1, scope 1516 // user: %18
  cond_br %17, bb10, bb1, scope 1516              // id: %18

bb1:                                              // Preds: bb0
  switch_enum %0 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb8, case #Optional.some!enumelt.1: bb2, scope 1516 // id: %19

bb2:                                              // Preds: bb1
  %20 = builtin "cmp_eq_Int64"(%16 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 1516 // user: %22
  %21 = integer_literal $Builtin.Int1, -1, scope 1516 // user: %22
  %22 = builtin "int_expect_Int1"(%20 : $Builtin.Int1, %21 : $Builtin.Int1) : $Builtin.Int1, scope 1516 // user: %23
  cond_br %22, bb3, bb4, scope 1516               // id: %23

bb3:                                              // Preds: bb2
  br bb7, scope 1516                              // id: %24

bb4:                                              // Preds: bb2
  %25 = unchecked_enum_data %0 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1516 // user: %26
  %26 = struct_extract %25 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1516 // user: %27
  %27 = struct $UnsafePointer<UInt16> (%26 : $Builtin.RawPointer), scope 1516 // user: %28
  %28 = enum $Optional<UnsafePointer<UInt16>>, #Optional.some!enumelt.1, %27 : $UnsafePointer<UInt16>, scope 1516 // user: %33
  %29 = integer_literal $Builtin.Int64, 4611686018427387903, scope 1516 // user: %30
  %30 = builtin "and_Int64"(%1 : $Builtin.Int64, %29 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64), scope 1516 // user: %33
  // function_ref specialized specialized UnsafeBufferPointer.init(start : UnsafePointer<A>?, count : Int) -> UnsafeBufferPointer<A>
  %32 = function_ref @_TTSfq4n_n_d___TTSgq5Vs6UInt16___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt16>>, Int) -> UnsafeBufferPointer<UInt16>, scope 1516 // user: %33
  %33 = apply %32(%28, %31) : $@convention(thin) (Optional<UnsafePointer<UInt16>>, Int) -> UnsafeBufferPointer<UInt16>, scope 1516 // users: %36, %34
  debug_value %33 : $UnsafeBufferPointer<UInt16>, scope 1516 // id: %34
  %35 = alloc_stack $UnsafeBufferPointer<UInt16>, scope 1516 // users: %43, %41, %36
  store %33 to %35 : $*UnsafeBufferPointer<UInt16>, scope 1516 // id: %36
  // function_ref _StringCore.(isRepresentableAsASCII() -> Bool).(closure #1)
  %37 = function_ref @_TFFVs11_StringCore22isRepresentableAsASCIIFT_SbU_FVs6UInt16Sb : $@convention(thin) (UInt16) -> Bool, scope 1516 // user: %38
  %38 = thin_to_thick_function %37 : $@convention(thin) (UInt16) -> Bool to $@callee_owned (UInt16) -> Bool, scope 1516 // user: %39
  %39 = convert_function %38 : $@callee_owned (UInt16) -> Bool to $@callee_owned (UInt16) -> (Bool, @error Error), scope 1516 // user: %41
  // function_ref specialized specialized specialized Sequence.contains(where : (A.Iterator.Element) throws -> Bool) throws -> Bool
  %40 = function_ref @_TTSfq4n_g___TTSfq1cl53_TTRXFo_dVs6UInt16_dSbzoPs5Error__XFo_iS__dSbzoPS0___XFo_dVs6UInt16_dSbzoPs5Error___n___TTSgq5GSRVs6UInt16_GSRS__s8Sequences___TFEsPs8Sequence8containsfzT5whereFzWx8Iterator7Element_Sb_Sb : $@convention(thin) (@in_guaranteed UnsafeBufferPointer<UInt16>, @guaranteed @callee_owned (UInt16) -> (Bool, @error Error)) -> (Bool, @error Error), scope 1516 // user: %41
  %41 = apply [nothrow] %40(%35, %39) : $@convention(thin) (@in_guaranteed UnsafeBufferPointer<UInt16>, @guaranteed @callee_owned (UInt16) -> (Bool, @error Error)) -> (Bool, @error Error), scope 1516 // user: %42
  %42 = struct_extract %41 : $Bool, #Bool._value, scope 1516 // user: %44
  dealloc_stack %35 : $*UnsafeBufferPointer<UInt16>, scope 1516 // id: %43
  cond_br %42, bb6, bb5, scope 1516               // id: %44

bb5:                                              // Preds: bb4
  br bb7, scope 1516                              // id: %45

bb6:                                              // Preds: bb4
  br bb9, scope 1516                              // id: %46

bb7:                                              // Preds: bb5 bb3
  br bb11(%10 : $Builtin.Int64), scope 1516       // id: %47

bb8:                                              // Preds: bb1
  br bb9, scope 1516                              // id: %48

bb9:                                              // Preds: bb6 bb8
  %49 = integer_literal $Builtin.Int64, 2, scope 1516 // user: %50
  br bb11(%49 : $Builtin.Int64), scope 1516       // id: %50

bb10:                                             // Preds: bb0
  br bb11(%13 : $Builtin.Int64), scope 1516       // id: %51

// %52                                            // user: %53
bb11(%52 : $Builtin.Int64):                       // Preds: bb10 bb9 bb7
  %53 = struct $Int (%52 : $Builtin.Int64), scope 1516 // users: %83, %69, %67, %54
  debug_value %53 : $Int, scope 1516              // id: %54
  %55 = load %6 : $*Builtin.Int64, scope 1516     // user: %57
  %56 = integer_literal $Builtin.Int64, 4611686018427387903, scope 1516 // users: %90, %58, %57
  %57 = builtin "and_Int64"(%55 : $Builtin.Int64, %56 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %60
  %58 = builtin "and_Int64"(%1 : $Builtin.Int64, %56 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // users: %114, %60
  %59 = integer_literal $Builtin.Int1, -1, scope 1516 // users: %124, %121, %94, %88, %60
  %60 = builtin "sadd_with_overflow_Int64"(%57 : $Builtin.Int64, %58 : $Builtin.Int64, %59 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1516 // users: %62, %61
  %61 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 0, scope 1516 // user: %64
  %62 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 1, scope 1516 // user: %63
  cond_fail %62 : $Builtin.Int1, scope 1516       // id: %63
  %64 = struct $Int (%61 : $Builtin.Int64), scope 1516 // users: %83, %69, %66
  debug_value_addr %3 : $*_StringCore, scope 1516 // id: %65
  debug_value %64 : $Int, scope 1516              // id: %66
  debug_value %53 : $Int, scope 1516              // id: %67
  // function_ref _StringCore._claimCapacity(Int, minElementWidth : Int) -> (Int, UnsafeMutableRawPointer?)
  %68 = function_ref @_TFVs11_StringCore14_claimCapacityfTSi15minElementWidthSi_TSiGSqSv__ : $@convention(method) (Int, Int, @inout _StringCore) -> (Int, Optional<UnsafeMutableRawPointer>), scope 1516 // user: %69
  %69 = apply %68(%64, %53, %3) : $@convention(method) (Int, Int, @inout _StringCore) -> (Int, Optional<UnsafeMutableRawPointer>), scope 1516 // users: %71, %70
  %70 = tuple_extract %69 : $(Int, Optional<UnsafeMutableRawPointer>), 0, scope 1516 // users: %83, %72
  %71 = tuple_extract %69 : $(Int, Optional<UnsafeMutableRawPointer>), 1, scope 1516 // users: %79, %78, %77, %76, %75, %74, %73
  debug_value %70 : $Int, scope 1516              // id: %72
  debug_value %71 : $Optional<UnsafeMutableRawPointer>, scope 1516 // id: %73
  debug_value %71 : $Optional<UnsafeMutableRawPointer>, scope 1516 // id: %74
  debug_value %71 : $Optional<UnsafeMutableRawPointer>, scope 1516 // id: %75
  debug_value %71 : $Optional<UnsafeMutableRawPointer>, scope 1516 // id: %76
  debug_value %71 : $Optional<UnsafeMutableRawPointer>, scope 1516 // id: %77
  switch_enum %71 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb13, case #Optional.some!enumelt.1: bb12, scope 1516 // id: %78

bb12:                                             // Preds: bb11
  %79 = unchecked_enum_data %71 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1516 // user: %80
  br bb16(%79 : $UnsafeMutableRawPointer), scope 1516 // id: %80

bb13:                                             // Preds: bb11
  %81 = load %6 : $*Builtin.Int64, scope 1516     // user: %90
  // function_ref _StringCore._copyInPlace(newSize : Int, newCapacity : Int, minElementWidth : Int) -> ()
  %82 = function_ref @_TFVs11_StringCore12_copyInPlacefT7newSizeSi11newCapacitySi15minElementWidthSi_T_ : $@convention(method) (Int, Int, Int, @inout _StringCore) -> (), scope 1516 // user: %83
  %83 = apply %82(%64, %70, %53, %3) : $@convention(method) (Int, Int, Int, @inout _StringCore) -> (), scope 1516
  %84 = struct_element_addr %3 : $*_StringCore, #_StringCore._baseAddress, scope 1516 // user: %85
  %85 = load %84 : $*Optional<UnsafeMutableRawPointer>, scope 1516 // users: %87, %96
  %86 = load %6 : $*Builtin.Int64, scope 1516     // user: %91
  switch_enum %85 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb14, case #Optional.some!enumelt.1: bb15, scope 1519 // id: %87

bb14:                                             // Preds: bb13
  cond_fail %59 : $Builtin.Int1, scope 1519       // id: %88
  unreachable, scope 1519                         // id: %89

bb15:                                             // Preds: bb13
  %90 = builtin "and_Int64"(%81 : $Builtin.Int64, %56 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %97
  %91 = builtin "lshr_Int64"(%86 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int64, scope 1519 // users: %97, %93
  %92 = integer_literal $Builtin.Int64, 64, scope 1519 // user: %93
  %93 = builtin "cmp_ult_Int64"(%91 : $Builtin.Int64, %92 : $Builtin.Int64) : $Builtin.Int1, scope 1519 // user: %94
  %94 = builtin "xor_Int1"(%93 : $Builtin.Int1, %59 : $Builtin.Int1) : $Builtin.Int1, scope 1519 // user: %95
  cond_fail %94 : $Builtin.Int1, scope 1519       // id: %95
  %96 = unchecked_enum_data %85 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1519 // users: %99, %98
  %97 = builtin "shl_Int64"(%90 : $Builtin.Int64, %91 : $Builtin.Int64) : $Builtin.Int64, scope 1519 // user: %100
  %98 = struct_extract %96 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1519 // user: %101
  debug_value %96 : $UnsafeMutableRawPointer, scope 1519 // id: %99
  %100 = builtin "truncOrBitCast_Int64_Word"(%97 : $Builtin.Int64) : $Builtin.Word, scope 1519 // user: %101
  %101 = index_raw_pointer %98 : $Builtin.RawPointer, %100 : $Builtin.Word, scope 1519 // user: %102
  %102 = struct $UnsafeMutableRawPointer (%101 : $Builtin.RawPointer), scope 1519 // user: %103
  br bb16(%102 : $UnsafeMutableRawPointer), scope 1516 // id: %103

// %104                                           // users: %127, %116, %105
bb16(%104 : $UnsafeMutableRawPointer):            // Preds: bb15 bb12
  debug_value %104 : $UnsafeMutableRawPointer, scope 1516 // id: %105
  switch_enum %0 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb18, case #Optional.some!enumelt.1: bb17, scope 1516 // id: %106

bb17:                                             // Preds: bb16
  %107 = unchecked_enum_data %0 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1516 // user: %116
  %108 = struct $Int (%16 : $Builtin.Int64), scope 1516 // user: %116
  %109 = load %6 : $*Builtin.Int64, scope 1516    // user: %110
  %110 = builtin "lshr_Int64"(%109 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %111
  %111 = builtin "sadd_with_overflow_Int64"(%110 : $Builtin.Int64, %10 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1516 // user: %112
  %112 = tuple_extract %111 : $(Builtin.Int64, Builtin.Int1), 0, scope 1516 // user: %113
  %113 = struct $Int (%112 : $Builtin.Int64), scope 1516 // user: %116
  %114 = struct $Int (%58 : $Builtin.Int64), scope 1516 // user: %116
  // function_ref specialized static _StringCore._copyElements(UnsafeMutableRawPointer, srcElementWidth : Int, dstStart : UnsafeMutableRawPointer, dstElementWidth : Int, count : Int) -> ()
  %115 = function_ref @_TTSfq4n_n_n_n_n_d___TZFVs11_StringCore13_copyElementsfTSv15srcElementWidthSi8dstStartSv15dstElementWidthSi5countSi_T_ : $@convention(thin) (UnsafeMutableRawPointer, Int, UnsafeMutableRawPointer, Int, Int) -> (), scope 1516 // user: %116
  %116 = apply %115(%107, %108, %104, %113, %114) : $@convention(thin) (UnsafeMutableRawPointer, Int, UnsafeMutableRawPointer, Int, Int) -> (), scope 1516
  br bb21, scope 1516                             // id: %117

bb18:                                             // Preds: bb16
  %118 = builtin "shl_Int64"(%1 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int64, scope 1516 // user: %120
  %119 = integer_literal $Builtin.Int64, 0, scope 1516 // user: %120
  %120 = builtin "cmp_slt_Int64"(%118 : $Builtin.Int64, %119 : $Builtin.Int64) : $Builtin.Int1, scope 1516 // user: %121
  %121 = builtin "xor_Int1"(%120 : $Builtin.Int1, %59 : $Builtin.Int1) : $Builtin.Int1, scope 1516 // user: %122
  cond_fail %121 : $Builtin.Int1, scope 1516      // id: %122
  switch_enum %2 : $Optional<AnyObject>, case #Optional.some!enumelt.1: bb20, case #Optional.none!enumelt: bb19, scope 1516 // id: %123

bb19:                                             // Preds: bb18
  cond_fail %59 : $Builtin.Int1, scope 1516       // id: %124
  unreachable, scope 1516                         // id: %125

bb20:                                             // Preds: bb18
  %126 = unchecked_enum_data %2 : $Optional<AnyObject>, #Optional.some!enumelt.1, scope 1516 // user: %131
  %127 = struct_extract %104 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1516 // user: %128
  %128 = struct $UnsafeMutablePointer<UInt16> (%127 : $Builtin.RawPointer), scope 1516 // user: %131
  // function_ref specialized _cocoaStringReadAll(AnyObject, UnsafeMutablePointer<UInt16>) -> ()
  %129 = function_ref @_TTSfq4g_n___TFs19_cocoaStringReadAllFTPs9AnyObject_GSpVs6UInt16__T_ : $@convention(thin) (@guaranteed AnyObject, UnsafeMutablePointer<UInt16>) -> (), scope 1516 // user: %131
  retain_value %2 : $Optional<AnyObject>, scope 1516 // id: %130
  %131 = apply %129(%126, %128) : $@convention(thin) (@guaranteed AnyObject, UnsafeMutablePointer<UInt16>) -> (), scope 1516
  release_value %2 : $Optional<AnyObject>, scope 1516 // id: %132
  br bb21, scope 1516                             // id: %133

bb21:                                             // Preds: bb20 bb17
  %134 = tuple (), scope 1516                     // user: %135
  return %134 : $(), scope 1516                   // id: %135
}

sil_scope 1520 {  parent @_TFSaCfT19_uninitializedCountSi_GSax_ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> }

// Array.init(_uninitializedCount : Int) -> [A]
sil hidden_external [fragile] @_TFSaCfT19_uninitializedCountSi_GSax_ : $@convention(method) <Element> (Int, @thin Array<Element>.Type) -> @owned Array<Element> {
// %0                                             // users: %23, %19, %5, %3
bb0(%0 : $Int, %1 : $@thin Array<Element>.Type):
  %2 = alloc_stack $_ArrayBuffer<Element>, scope 1520 // users: %27, %25, %23, %20, %13
  debug_value %0 : $Int, scope 1520               // id: %3
  %4 = integer_literal $Builtin.Int64, 0, scope 1520 // users: %14, %6
  %5 = struct_extract %0 : $Int, #Int._value, scope 1520 // users: %14, %6
  %6 = builtin "cmp_sge_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 1520 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 1520 // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1, scope 1520 // user: %9
  cond_fail %8 : $Builtin.Int1, scope 1520        // id: %9
  // function_ref _ArrayBuffer.init() -> _ArrayBuffer<A>
  %10 = function_ref @_TFVs12_ArrayBufferCfT_GS_x_ : $@convention(method) <τ_0_0> (@thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1520 // user: %12
  %11 = metatype $@thin _ArrayBuffer<Element>.Type, scope 1520 // user: %12
  %12 = apply %10<Element>(%11) : $@convention(method) <τ_0_0> (@thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1520 // users: %21, %13
  store %12 to %2 : $*_ArrayBuffer<Element>, scope 1520 // id: %13
  %14 = builtin "cmp_sgt_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 1520 // user: %15
  cond_br %14, bb2, bb1, scope 1520               // id: %15

bb1:                                              // Preds: bb0
  br bb3, scope 1520                              // id: %16

bb2:                                              // Preds: bb0
  // function_ref static Array._allocateBufferUninitialized(minimumCapacity : Int) -> _ArrayBuffer<A>
  %17 = function_ref @_TZFSa28_allocateBufferUninitializedfT15minimumCapacitySi_GVs12_ArrayBufferx_ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1520 // user: %19
  %18 = metatype $@thin Array<Element>.Type, scope 1520 // user: %19
  %19 = apply %17<Element>(%0, %18) : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1520 // user: %20
  store %19 to %2 : $*_ArrayBuffer<Element>, scope 1520 // id: %20
  release_value %12 : $_ArrayBuffer<Element>, scope 1520 // id: %21
  // function_ref _ArrayBuffer.count.setter
  %22 = function_ref @_TFVs12_ArrayBuffers5countSi : $@convention(method) <τ_0_0> (Int, @inout _ArrayBuffer<τ_0_0>) -> (), scope 1520 // user: %23
  %23 = apply %22<Element>(%0, %2) : $@convention(method) <τ_0_0> (Int, @inout _ArrayBuffer<τ_0_0>) -> (), scope 1520
  br bb3, scope 1520                              // id: %24

bb3:                                              // Preds: bb1 bb2
  %25 = load %2 : $*_ArrayBuffer<Element>, scope 1520 // user: %26
  %26 = struct $Array<Element> (%25 : $_ArrayBuffer<Element>), scope 1520 // user: %28
  dealloc_stack %2 : $*_ArrayBuffer<Element>, scope 1520 // id: %27
  return %26 : $Array<Element>, scope 1520        // id: %28
}

sil_scope 1521 {  parent @_TFVs12_ArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ArrayBuffer.firstElementAddress.getter
sil public_external [fragile] @_TFVs12_ArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
// %0                                             // users: %3, %1
bb0(%0 : $_ArrayBuffer<Element>):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1521 // id: %1
  // function_ref _ArrayBuffer._native.getter
  %2 = function_ref @_TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1521 // user: %3
  %3 = apply %2<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1521 // users: %6, %5
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %4 = function_ref @_TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1521 // user: %5
  %5 = apply %4<Element>(%3) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1521 // user: %7
  release_value %3 : $_ContiguousArrayBuffer<Element>, scope 1521 // id: %6
  return %5 : $UnsafeMutablePointer<Element>, scope 1521 // id: %7
}

sil_scope 1522 {  parent @_TZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassfTPMPs9AnyObject_8creatingSb_T_ : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Bool, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> () }

// static ManagedBufferPointer._sanityCheckValidBufferClass(AnyObject.Type, creating : Bool) -> ()
sil hidden_external [fragile] @_TZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassfTPMPs9AnyObject_8creatingSb_T_ : $@convention(method) <Header, Element> (@thick AnyObject.Type, Bool, @thin ManagedBufferPointer<Header, Element>.Type) -> () {
bb0(%0 : $@thick AnyObject.Type, %1 : $Bool, %2 : $@thin ManagedBufferPointer<Header, Element>.Type):
  %3 = tuple (), scope 1522                       // user: %4
  return %3 : $(), scope 1522                     // id: %4
}

sil_scope 1523 {  parent @_TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int }

// static ManagedBufferPointer._elementOffset.getter
sil hidden_external [fragile] @_TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) <Header, Element> (@thin ManagedBufferPointer<Header, Element>.Type) -> Int {
// %0                                             // users: %4, %1
bb0(%0 : $@thin ManagedBufferPointer<Header, Element>.Type):
  debug_value %0 : $@thin ManagedBufferPointer<Header, Element>.Type, scope 1523 // id: %1
  %2 = builtin "onFastPath"() : $(), scope 1523
  // function_ref static ManagedBufferPointer._headerOffset.getter
  %3 = function_ref @_TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1523 // user: %4
  %4 = apply %3<Header, Element>(%0) : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1523 // user: %8
  %5 = metatype $@thick Header.Type, scope 1523   // user: %6
  %6 = builtin "sizeof"<Header>(%5 : $@thick Header.Type) : $Builtin.Word, scope 1523 // user: %7
  %7 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64, scope 1523 // user: %10
  %8 = struct_extract %4 : $Int, #Int._value, scope 1523 // user: %10
  %9 = integer_literal $Builtin.Int1, -1, scope 1523 // users: %17, %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %7 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1523 // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0, scope 1523 // user: %17
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1, scope 1523 // user: %13
  cond_fail %12 : $Builtin.Int1, scope 1523       // id: %13
  %14 = metatype $@thick Element.Type, scope 1523 // user: %15
  %15 = builtin "alignof"<Element>(%14 : $@thick Element.Type) : $Builtin.Word, scope 1523 // user: %16
  %16 = builtin "zextOrBitCast_Word_Int64"(%15 : $Builtin.Word) : $Builtin.Int64, scope 1523 // users: %25, %17
  %17 = builtin "uadd_with_overflow_Int64"(%11 : $Builtin.Int64, %16 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1523 // users: %19, %18
  %18 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 0, scope 1523 // user: %23
  %19 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 1, scope 1523 // user: %20
  cond_fail %19 : $Builtin.Int1, scope 1523       // id: %20
  %21 = integer_literal $Builtin.Int64, 1, scope 1523 // users: %25, %23
  %22 = integer_literal $Builtin.Int1, 0, scope 1523 // users: %25, %23
  %23 = builtin "usub_with_overflow_Int64"(%18 : $Builtin.Int64, %21 : $Builtin.Int64, %22 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1523 // user: %24
  %24 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 0, scope 1523 // user: %29
  %25 = builtin "usub_with_overflow_Int64"(%16 : $Builtin.Int64, %21 : $Builtin.Int64, %22 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1523 // user: %26
  %26 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 0, scope 1523 // user: %28
  %27 = integer_literal $Builtin.Int64, -1, scope 1523 // user: %28
  %28 = builtin "xor_Int64"(%26 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int64, scope 1523 // user: %29
  %29 = builtin "and_Int64"(%24 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 1523 // user: %30
  %30 = builtin "u_to_s_checked_conversion_Int64"(%29 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1523 // users: %32, %31
  %31 = tuple_extract %30 : $(Builtin.Int64, Builtin.Int1), 0, scope 1523 // user: %34
  %32 = tuple_extract %30 : $(Builtin.Int64, Builtin.Int1), 1, scope 1523 // user: %33
  cond_fail %32 : $Builtin.Int1, scope 1523       // id: %33
  %34 = struct $Int (%31 : $Builtin.Int64), scope 1523 // user: %35
  return %34 : $Int, scope 1523                   // id: %35
}

sil_scope 1524 {  parent @_TZFVs20ManagedBufferPointerg14_alignmentMaskSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int }

// static ManagedBufferPointer._alignmentMask.getter
sil hidden_external [fragile] @_TZFVs20ManagedBufferPointerg14_alignmentMaskSi : $@convention(method) <Header, Element> (@thin ManagedBufferPointer<Header, Element>.Type) -> Int {
bb0(%0 : $@thin ManagedBufferPointer<Header, Element>.Type):
  %1 = metatype $@thick Header.Type, scope 1524   // user: %2
  %2 = builtin "alignof"<Header>(%1 : $@thick Header.Type) : $Builtin.Word, scope 1524 // user: %3
  %3 = builtin "zextOrBitCast_Word_Int64"(%2 : $Builtin.Word) : $Builtin.Int64, scope 1524 // users: %9, %7
  %4 = metatype $@thick Element.Type, scope 1524  // user: %5
  %5 = builtin "alignof"<Element>(%4 : $@thick Element.Type) : $Builtin.Word, scope 1524 // user: %6
  %6 = builtin "zextOrBitCast_Word_Int64"(%5 : $Builtin.Word) : $Builtin.Int64, scope 1524 // users: %10, %7
  %7 = builtin "cmp_sge_Int64"(%6 : $Builtin.Int64, %3 : $Builtin.Int64) : $Builtin.Int1, scope 1524 // user: %8
  cond_br %7, bb2, bb1, scope 1524                // id: %8

bb1:                                              // Preds: bb0
  br bb3(%3 : $Builtin.Int64), scope 1524         // id: %9

bb2:                                              // Preds: bb0
  br bb3(%6 : $Builtin.Int64), scope 1524         // id: %10

// %11                                            // users: %18, %15
bb3(%11 : $Builtin.Int64):                        // Preds: bb2 bb1
  %12 = metatype $@thick HeapObject.Type, scope 1524 // user: %13
  %13 = builtin "alignof"<HeapObject>(%12 : $@thick HeapObject.Type) : $Builtin.Word, scope 1524 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 1524 // users: %17, %15
  %15 = builtin "cmp_sge_Int64"(%11 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 1524 // user: %16
  cond_br %15, bb5, bb4, scope 1524               // id: %16

bb4:                                              // Preds: bb3
  br bb6(%14 : $Builtin.Int64), scope 1524        // id: %17

bb5:                                              // Preds: bb3
  br bb6(%11 : $Builtin.Int64), scope 1524        // id: %18

// %19                                            // user: %22
bb6(%19 : $Builtin.Int64):                        // Preds: bb5 bb4
  %20 = integer_literal $Builtin.Int64, 1, scope 1524 // user: %22
  %21 = integer_literal $Builtin.Int1, 0, scope 1524 // user: %22
  %22 = builtin "ssub_with_overflow_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64, %21 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1524 // user: %23
  %23 = tuple_extract %22 : $(Builtin.Int64, Builtin.Int1), 0, scope 1524 // user: %24
  %24 = struct $Int (%23 : $Builtin.Int64), scope 1524 // user: %25
  return %24 : $Int, scope 1524                   // id: %25
}

sil_scope 1525 {  parent @_TFVs22_ContiguousArrayBufferCfT5countSi7storageGCs23_ContiguousArrayStoragex__GS_x_ : $@convention(method) <τ_0_0> (Int, @owned _ContiguousArrayStorage<τ_0_0>, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(count : Int, storage : _ContiguousArrayStorage<A>) -> _ContiguousArrayBuffer<A>
sil hidden_external [fragile] @_TFVs22_ContiguousArrayBufferCfT5countSi7storageGCs23_ContiguousArrayStoragex__GS_x_ : $@convention(method) <Element> (Int, @owned _ContiguousArrayStorage<Element>, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %13, %13, %3
// %1                                             // users: %16, %11, %7, %4
bb0(%0 : $Int, %1 : $_ContiguousArrayStorage<Element>, %2 : $@thin _ContiguousArrayBuffer<Element>.Type):
  debug_value %0 : $Int, scope 1525               // id: %3
  debug_value %1 : $_ContiguousArrayStorage<Element>, scope 1525 // id: %4
  // function_ref ManagedBufferPointer.init(_uncheckedUnsafeBufferObject : AnyObject) -> ManagedBufferPointer<A, B>
  %5 = function_ref @_TFVs20ManagedBufferPointerCfT28_uncheckedUnsafeBufferObjectPs9AnyObject__GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1525 // user: %8
  %6 = metatype $@thin ManagedBufferPointer<_ArrayBody, Element>.Type, scope 1525 // user: %8
  %7 = init_existential_ref %1 : $_ContiguousArrayStorage<Element> : $_ContiguousArrayStorage<Element>, $AnyObject, scope 1525 // user: %8
  %8 = apply %5<_ArrayBody, Element>(%7, %6) : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1525 // users: %14, %12, %15, %10
  // function_ref _ContiguousArrayBuffer._initStorageHeader(count : Int, capacity : Int) -> ()
  %9 = function_ref @_TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1525 // user: %13
  %10 = struct $_ContiguousArrayBuffer<Element> (%8 : $ManagedBufferPointer<_ArrayBody, Element>), scope 1525 // users: %17, %13
  strong_retain %1 : $_ContiguousArrayStorage<Element>, scope 1525 // id: %11
  retain_value %8 : $ManagedBufferPointer<_ArrayBody, Element>, scope 1525 // id: %12
  %13 = apply %9<Element>(%0, %0, %10) : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1525
  release_value %8 : $ManagedBufferPointer<_ArrayBody, Element>, scope 1525 // id: %14
  fix_lifetime %8 : $ManagedBufferPointer<_ArrayBody, Element>, scope 1525 // id: %15
  strong_release %1 : $_ContiguousArrayStorage<Element>, scope 1525 // id: %16
  return %10 : $_ContiguousArrayBuffer<Element>, scope 1525 // id: %17
}

sil_scope 1526 {  parent @_TFSaCfT7_bufferGVs12_ArrayBufferx__GSax_ : $@convention(method) <τ_0_0> (@owned _ArrayBuffer<τ_0_0>, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> }

// Array.init(_buffer : _ArrayBuffer<A>) -> [A]
sil public_external [fragile] @_TFSaCfT7_bufferGVs12_ArrayBufferx__GSax_ : $@convention(method) <Element> (@owned _ArrayBuffer<Element>, @thin Array<Element>.Type) -> @owned Array<Element> {
// %0                                             // users: %3, %2
bb0(%0 : $_ArrayBuffer<Element>, %1 : $@thin Array<Element>.Type):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1526 // id: %2
  %3 = struct $Array<Element> (%0 : $_ArrayBuffer<Element>), scope 1526 // user: %4
  return %3 : $Array<Element>, scope 1526         // id: %4
}

sil_scope 1527 {  parent @_TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer.init(_ContiguousArrayBuffer<A>, shiftedToStartIndex : Int) -> _ArrayBuffer<A>
sil public_external [fragile] @_TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) <Element> (@owned _ContiguousArrayBuffer<Element>, Int, @thin _ArrayBuffer<Element>.Type) -> @owned _ArrayBuffer<Element> {
// %0                                             // users: %6, %5, %3
bb0(%0 : $_ContiguousArrayBuffer<Element>, %1 : $Int, %2 : $@thin _ArrayBuffer<Element>.Type):
  debug_value %0 : $_ContiguousArrayBuffer<Element>, scope 1527 // id: %3
  // function_ref _ContiguousArrayBuffer._storage.getter
  %4 = function_ref @_TFVs22_ContiguousArrayBufferg8_storageCs27_ContiguousArrayStorageBase : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayStorageBase, scope 1527 // user: %5
  %5 = apply %4<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayStorageBase, scope 1527 // users: %8, %7
  release_value %0 : $_ContiguousArrayBuffer<Element>, scope 1527 // id: %6
  debug_value %5 : $_ContiguousArrayStorageBase, scope 1527 // id: %7
  %8 = unchecked_ref_cast %5 : $_ContiguousArrayStorageBase to $Builtin.BridgeObject, scope 1527 // user: %9
  %9 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%8 : $Builtin.BridgeObject), scope 1527 // user: %10
  %10 = struct $_ArrayBuffer<Element> (%9 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1527 // user: %11
  return %10 : $_ArrayBuffer<Element>, scope 1527 // id: %11
}

sil_scope 1528 {  parent @_TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0> }

// _ContiguousArrayBuffer.firstElementAddress.getter
sil public_external [fragile] @_TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> UnsafeMutablePointer<Element> {
// %0                                             // users: %2, %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  debug_value %0 : $_ContiguousArrayBuffer<Element>, scope 1528 // id: %1
  %2 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1528 // user: %4
  // function_ref ManagedBufferPointer._elementPointer.getter
  %3 = function_ref @_TFVs20ManagedBufferPointerg15_elementPointerGSpq__ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_1>, scope 1528 // user: %4
  %4 = apply %3<_ArrayBody, Element>(%2) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_1>, scope 1528 // user: %5
  return %4 : $UnsafeMutablePointer<Element>, scope 1528 // id: %5
}


// _print_unlocked<A, B where ...> (A, inout B) -> ()
sil [fragile] [noinline] [_semantics "stdlib_binary_only"] @_TFs15_print_unlockedu0_R_s16TextOutputStreamrFTxRq__T_ : $@convention(thin) <τ_0_0, τ_0_1 where τ_0_1 : TextOutputStream> (@in τ_0_0, @inout τ_0_1) -> ()


// _IteratorBox.next() -> A.Element?
sil hidden_external [fragile] @_TFCs12_IteratorBox4nextfT_GSqwx7Element_ : $@convention(method) <Base where Base : IteratorProtocol> (@guaranteed _IteratorBox<Base>) -> @out Optional<Base.Element>


// _IteratorBox.init(A) -> _IteratorBox<A>
sil hidden_external [fragile] @_TFCs12_IteratorBoxcfxGS_x_ : $@convention(method) <Base where Base : IteratorProtocol> (@in Base, @owned _IteratorBox<Base>) -> @owned _IteratorBox<Base>


// _IteratorBox.__deallocating_deinit
sil hidden_external [fragile] @_TFCs12_IteratorBoxD : $@convention(method) <Base where Base : IteratorProtocol> (@owned _IteratorBox<Base>) -> ()


// _AnyIteratorBoxBase.init() -> _AnyIteratorBoxBase<A>
sil hidden_external [fragile] @_TFCs19_AnyIteratorBoxBasecfT_GS_x_ : $@convention(method) <Element> (@owned _AnyIteratorBoxBase<Element>) -> @owned _AnyIteratorBoxBase<Element>


// protocol witness for static Comparable.< infix(A, A) -> Bool in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis10ComparablesZFS_oi1lfTxx_Sb : $@convention(witness_method) (@in Int, @in Int, @thick Int.Type) -> Bool


// protocol witness for static Comparable.<= infix(A, A) -> Bool in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis10ComparablesZFS_oi2lefTxx_Sb : $@convention(witness_method) (@in Int, @in Int, @thick Int.Type) -> Bool


// protocol witness for static Comparable.>= infix(A, A) -> Bool in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis10ComparablesZFS_oi2gefTxx_Sb : $@convention(witness_method) (@in Int, @in Int, @thick Int.Type) -> Bool


// protocol witness for static Comparable.> infix(A, A) -> Bool in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis10ComparablesZFS_oi1gfTxx_Sb : $@convention(witness_method) (@in Int, @in Int, @thick Int.Type) -> Bool

sil_scope 1529 {  parent @_TFSa40_makeUniqueAndReserveCapacityIfNotUniquefT_T_ : $@convention(method) <τ_0_0> (@inout Array<τ_0_0>) -> () }

// Array._makeUniqueAndReserveCapacityIfNotUnique() -> ()
sil hidden_external [fragile] [_semantics "array.make_mutable"] @_TFSa40_makeUniqueAndReserveCapacityIfNotUniquefT_T_ : $@convention(method) <Element> (@inout Array<Element>) -> () {
// %0                                             // users: %16, %3, %1
bb0(%0 : $*Array<Element>):
  debug_value_addr %0 : $*Array<Element>, scope 1529 // id: %1
  // function_ref _ArrayBuffer.isMutableAndUniquelyReferenced() -> Bool
  %2 = function_ref @_TFVs12_ArrayBuffer30isMutableAndUniquelyReferencedfT_Sb : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 1529 // user: %4
  %3 = struct_element_addr %0 : $*Array<Element>, #Array._buffer, scope 1529 // users: %11, %4
  %4 = apply %2<Element>(%3) : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 1529 // user: %5
  %5 = struct_extract %4 : $Bool, #Bool._value, scope 1529 // user: %7
  %6 = integer_literal $Builtin.Int1, -1, scope 1529 // user: %7
  %7 = builtin "int_expect_Int1"(%5 : $Builtin.Int1, %6 : $Builtin.Int1) : $Builtin.Int1, scope 1529 // user: %8
  cond_br %7, bb1, bb2, scope 1529                // id: %8

bb1:                                              // Preds: bb0
  br bb3, scope 1529                              // id: %9

bb2:                                              // Preds: bb0
  // function_ref Array._copyToNewBuffer(oldCount : Int) -> ()
  %10 = function_ref @_TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> (), scope 1529 // user: %16
  %11 = load %3 : $*_ArrayBuffer<Element>, scope 1529 // users: %15, %13, %14
  // function_ref _ArrayBuffer.count.getter
  %12 = function_ref @_TFVs12_ArrayBufferg5countSi : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 1529 // user: %14
  retain_value %11 : $_ArrayBuffer<Element>, scope 1529 // id: %13
  %14 = apply %12<Element>(%11) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 1529 // user: %16
  release_value %11 : $_ArrayBuffer<Element>, scope 1529 // id: %15
  %16 = apply %10<Element>(%14, %0) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> (), scope 1529
  br bb3, scope 1529                              // id: %17

bb3:                                              // Preds: bb1 bb2
  %18 = tuple (), scope 1529                      // user: %19
  return %18 : $(), scope 1529                    // id: %19
}

sil_scope 1530 {  parent @_TFSa9_getCountfT_Si : $@convention(method) <τ_0_0> (@guaranteed Array<τ_0_0>) -> Int }

// Array._getCount() -> Int
sil hidden_external [fragile] [_semantics "array.get_count"] @_TFSa9_getCountfT_Si : $@convention(method) <Element> (@guaranteed Array<Element>) -> Int {
// %0                                             // users: %6, %4, %2, %1
bb0(%0 : $Array<Element>):
  debug_value %0 : $Array<Element>, scope 1530    // id: %1
  %2 = struct_extract %0 : $Array<Element>, #Array._buffer, scope 1530 // user: %5
  // function_ref _ArrayBuffer.count.getter
  %3 = function_ref @_TFVs12_ArrayBufferg5countSi : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 1530 // user: %5
  retain_value %0 : $Array<Element>, scope 1530   // id: %4
  %5 = apply %3<Element>(%2) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 1530 // user: %7
  release_value %0 : $Array<Element>, scope 1530  // id: %6
  return %5 : $Int, scope 1530                    // id: %7
}

sil_scope 1531 {  parent @_TFSa36_reserveCapacityAssumingUniqueBufferfT8oldCountSi_T_ : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () }

// Array._reserveCapacityAssumingUniqueBuffer(oldCount : Int) -> ()
sil hidden_external [fragile] [_semantics "array.mutate_unknown"] @_TFSa36_reserveCapacityAssumingUniqueBufferfT8oldCountSi_T_ : $@convention(method) <Element> (Int, @inout Array<Element>) -> () {
// %0                                             // users: %24, %5, %3
// %1                                             // users: %24, %11, %2
bb0(%0 : $Int, %1 : $*Array<Element>):
  debug_value_addr %1 : $*Array<Element>, scope 1531 // id: %2
  debug_value %0 : $Int, scope 1531               // id: %3
  %4 = integer_literal $Builtin.Int64, 1, scope 1531 // user: %7
  %5 = struct_extract %0 : $Int, #Int._value, scope 1531 // user: %7
  %6 = integer_literal $Builtin.Int1, -1, scope 1531 // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1531 // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0, scope 1531 // user: %18
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1, scope 1531 // user: %10
  cond_fail %9 : $Builtin.Int1, scope 1531        // id: %10
  %11 = struct_element_addr %1 : $*Array<Element>, #Array._buffer, scope 1531 // user: %12
  %12 = load %11 : $*_ArrayBuffer<Element>, scope 1531 // users: %16, %14, %15
  // function_ref _ArrayBuffer.capacity.getter
  %13 = function_ref @_TFVs12_ArrayBufferg8capacitySi : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 1531 // user: %15
  retain_value %12 : $_ArrayBuffer<Element>, scope 1531 // id: %14
  %15 = apply %13<Element>(%12) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int, scope 1531 // user: %17
  release_value %12 : $_ArrayBuffer<Element>, scope 1531 // id: %16
  %17 = struct_extract %15 : $Int, #Int._value, scope 1531 // user: %18
  %18 = builtin "cmp_sgt_Int64"(%8 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int1, scope 1531 // user: %20
  %19 = integer_literal $Builtin.Int1, 0, scope 1531 // user: %20
  %20 = builtin "int_expect_Int1"(%18 : $Builtin.Int1, %19 : $Builtin.Int1) : $Builtin.Int1, scope 1531 // user: %21
  cond_br %20, bb2, bb1, scope 1531               // id: %21

bb1:                                              // Preds: bb0
  br bb3, scope 1531                              // id: %22

bb2:                                              // Preds: bb0
  // function_ref Array._copyToNewBuffer(oldCount : Int) -> ()
  %23 = function_ref @_TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> (), scope 1531 // user: %24
  %24 = apply %23<Element>(%0, %1) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> (), scope 1531
  br bb3, scope 1531                              // id: %25

bb3:                                              // Preds: bb1 bb2
  %26 = tuple (), scope 1531                      // user: %27
  return %26 : $(), scope 1531                    // id: %27
}

sil_scope 1532 {  parent @_TFSa37_appendElementAssumeUniqueAndCapacityfTSi10newElementx_T_ : $@convention(method) <τ_0_0> (Int, @in τ_0_0, @inout Array<τ_0_0>) -> () }

// Array._appendElementAssumeUniqueAndCapacity(Int, newElement : A) -> ()
sil hidden_external [fragile] [_semantics "array.mutate_unknown"] @_TFSa37_appendElementAssumeUniqueAndCapacityfTSi10newElementx_T_ : $@convention(method) <Element> (Int, @in Element, @inout Array<Element>) -> () {
// %0                                             // users: %7, %4
// %1                                             // users: %35, %5
// %2                                             // users: %14, %3
bb0(%0 : $Int, %1 : $*Element, %2 : $*Array<Element>):
  debug_value_addr %2 : $*Array<Element>, scope 1532 // id: %3
  debug_value %0 : $Int, scope 1532               // id: %4
  debug_value_addr %1 : $*Element, scope 1532     // id: %5
  %6 = integer_literal $Builtin.Int64, 1, scope 1532 // user: %9
  %7 = struct_extract %0 : $Int, #Int._value, scope 1532 // users: %28, %9
  %8 = integer_literal $Builtin.Int1, -1, scope 1532 // user: %9
  %9 = builtin "sadd_with_overflow_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1532 // users: %11, %10
  %10 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 0, scope 1532 // user: %13
  %11 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 1, scope 1532 // user: %12
  cond_fail %11 : $Builtin.Int1, scope 1532       // id: %12
  %13 = struct $Int (%10 : $Builtin.Int64), scope 1532 // user: %16
  %14 = struct_element_addr %2 : $*Array<Element>, #Array._buffer, scope 1532 // users: %18, %16
  // function_ref _ArrayBuffer.count.setter
  %15 = function_ref @_TFVs12_ArrayBuffers5countSi : $@convention(method) <τ_0_0> (Int, @inout _ArrayBuffer<τ_0_0>) -> (), scope 1532 // user: %16
  %16 = apply %15<Element>(%13, %14) : $@convention(method) <τ_0_0> (Int, @inout _ArrayBuffer<τ_0_0>) -> (), scope 1532
  // function_ref UnsafeMutablePointer.initialize(to : A, count : Int) -> ()
  %17 = function_ref @_TFSp10initializefT2tox5countSi_T_ : $@convention(method) <τ_0_0> (@in τ_0_0, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 1532 // user: %35
  %18 = load %14 : $*_ArrayBuffer<Element>, scope 1532 // users: %22, %20, %21
  // function_ref _ArrayBuffer.firstElementAddress.getter
  %19 = function_ref @_TFVs12_ArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1532 // user: %21
  retain_value %18 : $_ArrayBuffer<Element>, scope 1532 // id: %20
  %21 = apply %19<Element>(%18) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1532 // user: %23
  release_value %18 : $_ArrayBuffer<Element>, scope 1532 // id: %22
  %23 = struct_extract %21 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue, scope 1532 // user: %31
  %24 = metatype $@thick Element.Type, scope 1532 // user: %25
  %25 = builtin "strideof_nonzero"<Element>(%24 : $@thick Element.Type) : $Builtin.Word, scope 1532 // user: %26
  %26 = builtin "zextOrBitCast_Word_Int64"(%25 : $Builtin.Word) : $Builtin.Int64, scope 1532 // user: %28
  %27 = integer_literal $Builtin.Int1, 0, scope 1532 // user: %28
  %28 = builtin "smul_with_overflow_Int64"(%7 : $Builtin.Int64, %26 : $Builtin.Int64, %27 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1532 // user: %29
  %29 = tuple_extract %28 : $(Builtin.Int64, Builtin.Int1), 0, scope 1532 // user: %30
  %30 = builtin "truncOrBitCast_Int64_Word"(%29 : $Builtin.Int64) : $Builtin.Word, scope 1532 // user: %31
  %31 = index_raw_pointer %23 : $Builtin.RawPointer, %30 : $Builtin.Word, scope 1532 // user: %32
  %32 = struct $UnsafeMutablePointer<Element> (%31 : $Builtin.RawPointer), scope 1532 // user: %35
  // function_ref UnsafeMutablePointer.(initialize(to : A, count : Int) -> ()).(default argument 1)
  %33 = function_ref @_TIFSp10initializeFT2tox5countSi_T_A0_ : $@convention(thin) <τ_0_0> () -> Int, scope 1532 // user: %34
  %34 = apply %33<Element>() : $@convention(thin) <τ_0_0> () -> Int, scope 1532 // user: %35
  %35 = apply %17<Element>(%1, %34, %32) : $@convention(method) <τ_0_0> (@in τ_0_0, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 1532
  %36 = tuple (), scope 1532                      // user: %37
  return %36 : $(), scope 1532                    // id: %37
}

sil_scope 1533 {  parent @_TFVSS9UTF16Viewg9subscriptFVS_5IndexVs6UInt16 : $@convention(method) (String.UTF16View.Index, @guaranteed String.UTF16View) -> UInt16 }
sil_scope 1534 {  parent 1533 }
sil_scope 1535 {  parent 1517 inlined_at 1534 }
sil_scope 1536 {  parent 1533 }
sil_scope 1537 {  parent 1517 inlined_at 1536 }
sil_scope 1538 {  parent 1533 }
sil_scope 1539 {  parent 1517 inlined_at 1538 }

// String.UTF16View.subscript.getter
sil public_external [fragile] @_TFVSS9UTF16Viewg9subscriptFVS_5IndexVs6UInt16 : $@convention(method) (String.UTF16View.Index, @guaranteed String.UTF16View) -> UInt16 {
// %0                                             // users: %4, %2
// %1                                             // users: %95, %182, %267, %265, %180, %93, %19, %18, %16, %11, %3
bb0(%0 : $String.UTF16View.Index, %1 : $String.UTF16View):
  debug_value %0 : $String.UTF16View.Index, scope 1533 // id: %2
  debug_value %1 : $String.UTF16View, scope 1533  // id: %3
  %4 = struct_extract %0 : $String.UTF16View.Index, #String.UTF16View.Index._offset, scope 1533 // users: %17, %7, %5
  debug_value %4 : $Int, scope 1533               // id: %5
  %6 = integer_literal $Builtin.Int64, 0, scope 1533 // users: %111, %122, %207, %29, %8
  %7 = struct_extract %4 : $Int, #Int._value, scope 1533 // users: %21, %13, %8
  %8 = builtin "cmp_sge_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %10
  %9 = integer_literal $Builtin.Int1, -1, scope 1533 // users: %54, %141, %226, %21, %30, %37, %81, %85, %104, %115, %123, %126, %168, %172, %188, %196, %208, %211, %253, %257, %274, %14, %10
  %10 = builtin "xor_Int1"(%8 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %15
  %11 = struct_extract %1 : $String.UTF16View, #String.UTF16View._length, scope 1533 // user: %12
  %12 = struct_extract %11 : $Int, #Int._value, scope 1533 // user: %13
  %13 = builtin "cmp_slt_Int64"(%7 : $Builtin.Int64, %12 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %14
  %14 = builtin "xor_Int1"(%13 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %15
  %15 = builtin "or_Int1"(%10 : $Builtin.Int1, %14 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %39
  %16 = struct_extract %1 : $String.UTF16View, #String.UTF16View._core, scope 1533 // users: %178, %263, %246, %245, %220, %209, %206, %200, %161, %160, %135, %124, %121, %91, %74, %73, %48, %41, %32, %31, %28
  debug_value %4 : $Int, scope 1533               // id: %17
  debug_value %1 : $String.UTF16View, scope 1533  // id: %18
  %19 = struct_extract %1 : $String.UTF16View, #String.UTF16View._offset, scope 1533 // user: %20
  %20 = struct_extract %19 : $Int, #Int._value, scope 1533 // user: %21
  %21 = builtin "sadd_with_overflow_Int64"(%20 : $Builtin.Int64, %7 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1533 // users: %23, %22
  %22 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 0, scope 1533 // users: %57, %196, %115, %111, %36, %29, %25
  %23 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 1, scope 1533 // user: %24
  cond_fail %23 : $Builtin.Int1, scope 1533       // id: %24
  %25 = struct $Int (%22 : $Builtin.Int64), scope 1533 // users: %49, %94, %47, %27, %26
  debug_value %25 : $Int, scope 1533              // id: %26
  debug_value %25 : $Int, scope 1533              // id: %27
  debug_value %16 : $_StringCore, scope 1533      // id: %28
  %29 = builtin "cmp_sge_Int64"(%22 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %30
  %30 = builtin "xor_Int1"(%29 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %38
  debug_value %16 : $_StringCore, scope 1533      // id: %31
  %32 = struct_extract %16 : $_StringCore, #_StringCore._countAndFlags, scope 1533 // user: %34
  %33 = integer_literal $Builtin.Int64, 4611686018427387903, scope 1533 // user: %35
  %34 = struct_extract %32 : $UInt, #UInt._value, scope 1533 // users: %51, %138, %181, %266, %223, %94, %35
  %35 = builtin "and_Int64"(%34 : $Builtin.Int64, %33 : $Builtin.Int64) : $Builtin.Int64, scope 1533 // users: %125, %201, %210, %36
  %36 = builtin "cmp_sle_Int64"(%22 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %37
  %37 = builtin "xor_Int1"(%36 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %38
  %38 = builtin "or_Int1"(%30 : $Builtin.Int1, %37 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %39
  %39 = builtin "or_Int1"(%15 : $Builtin.Int1, %38 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %40
  cond_fail %39 : $Builtin.Int1, scope 1533       // id: %40
  %41 = struct_extract %16 : $_StringCore, #_StringCore._baseAddress, scope 1533 // users: %56, %143, %228, %218, %217, %216, %215, %214, %133, %132, %131, %130, %129, %46, %45, %44, %43, %42
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %42
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %43
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %44
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %45
  switch_enum %41 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb2, case #Optional.some!enumelt.1: bb1, scope 1533 // id: %46

bb1:                                              // Preds: bb0
  debug_value %25 : $Int, scope 1533              // id: %47
  debug_value %16 : $_StringCore, scope 1533      // id: %48
  debug_value %25 : $Int, scope 1535              // id: %49
  %50 = integer_literal $Builtin.Int64, 63, scope 1535 // user: %51
  %51 = builtin "lshr_Int64"(%34 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int64, scope 1535 // users: %75, %57, %53
  %52 = integer_literal $Builtin.Int64, 64, scope 1535 // user: %53
  %53 = builtin "cmp_ult_Int64"(%51 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int1, scope 1535 // user: %54
  %54 = builtin "xor_Int1"(%53 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1535 // user: %55
  cond_fail %54 : $Builtin.Int1, scope 1535       // id: %55
  %56 = unchecked_enum_data %41 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1535 // users: %59, %58
  %57 = builtin "shl_Int64"(%22 : $Builtin.Int64, %51 : $Builtin.Int64) : $Builtin.Int64, scope 1535 // user: %60
  %58 = struct_extract %56 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1535 // user: %61
  debug_value %56 : $UnsafeMutableRawPointer, scope 1535 // id: %59
  %60 = builtin "truncOrBitCast_Int64_Word"(%57 : $Builtin.Int64) : $Builtin.Word, scope 1535 // user: %61
  %61 = index_raw_pointer %58 : $Builtin.RawPointer, %60 : $Builtin.Word, scope 1535 // users: %68, %62
  %62 = pointer_to_address %61 : $Builtin.RawPointer to [strict] $*UInt8, scope 1533 // user: %63
  %63 = struct_element_addr %62 : $*UInt8, #UInt8._value, scope 1533 // user: %64
  %64 = load %63 : $*Builtin.Int8, scope 1533     // user: %65
  %65 = builtin "zext_Int8_Int16"(%64 : $Builtin.Int8) : $Builtin.Int16, scope 1533 // user: %85
  %66 = metatype $@thick UInt8.Type, scope 1533   // user: %67
  %67 = builtin "strideof_nonzero"<UInt8>(%66 : $@thick UInt8.Type) : $Builtin.Word, scope 1533 // user: %68
  %68 = index_raw_pointer %61 : $Builtin.RawPointer, %67 : $Builtin.Word, scope 1533 // user: %69
  %69 = pointer_to_address %68 : $Builtin.RawPointer to [strict] $*UInt8, scope 1533 // user: %70
  %70 = struct_element_addr %69 : $*UInt8, #UInt8._value, scope 1533 // user: %71
  %71 = load %70 : $*Builtin.Int8, scope 1533     // user: %72
  %72 = builtin "zext_Int8_Int16"(%71 : $Builtin.Int8) : $Builtin.Int16, scope 1533 // user: %81
  debug_value %16 : $_StringCore, scope 1533      // id: %73
  debug_value %16 : $_StringCore, scope 1533      // id: %74
  %75 = builtin "s_to_u_checked_trunc_Int64_Int16"(%51 : $Builtin.Int64) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %77, %76
  %76 = tuple_extract %75 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %80
  %77 = tuple_extract %75 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %78
  cond_fail %77 : $Builtin.Int1, scope 1533       // id: %78
  %79 = integer_literal $Builtin.Int16, 8, scope 1533 // user: %80
  %80 = builtin "shl_Int16"(%76 : $Builtin.Int16, %79 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %81
  %81 = builtin "umul_with_overflow_Int16"(%72 : $Builtin.Int16, %80 : $Builtin.Int16, %9 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %83, %82
  %82 = tuple_extract %81 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %85
  %83 = tuple_extract %81 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %84
  cond_fail %83 : $Builtin.Int1, scope 1533       // id: %84
  %85 = builtin "uadd_with_overflow_Int16"(%65 : $Builtin.Int16, %82 : $Builtin.Int16, %9 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %87, %86
  %86 = tuple_extract %85 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %89
  %87 = tuple_extract %85 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %88
  cond_fail %87 : $Builtin.Int1, scope 1533       // id: %88
  %89 = struct $UInt16 (%86 : $Builtin.Int16), scope 1533 // user: %90
  br bb3(%89 : $UInt16), scope 1533               // id: %90

bb2:                                              // Preds: bb0
  %91 = struct_extract %16 : $_StringCore, #_StringCore._owner, scope 1533 // user: %94
  // function_ref specialized _cocoaStringSubscript(_StringCore, Int) -> UInt16
  %92 = function_ref @_TTSfq4gs_n___TFs21_cocoaStringSubscriptFTVs11_StringCoreSi_Vs6UInt16 : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16, scope 1533 // user: %94
  retain_value %1 : $String.UTF16View, scope 1533 // id: %93
  %94 = apply %92(%34, %91, %25) : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16, scope 1533 // user: %96
  release_value %1 : $String.UTF16View, scope 1533 // id: %95
  br bb3(%94 : $UInt16), scope 1533               // id: %96

// %97                                            // users: %281, %280, %194, %100, %98
bb3(%97 : $UInt16):                               // Preds: bb2 bb1
  debug_value %97 : $UInt16, scope 1533           // id: %98
  %99 = integer_literal $Builtin.Int16, 11, scope 1533 // user: %101
  %100 = struct_extract %97 : $UInt16, #UInt16._value, scope 1533 // users: %107, %101
  %101 = builtin "lshr_Int16"(%100 : $Builtin.Int16, %99 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %103
  %102 = integer_literal $Builtin.Int16, 27, scope 1533 // user: %103
  %103 = builtin "cmp_ne_Int16"(%101 : $Builtin.Int16, %102 : $Builtin.Int16) : $Builtin.Int1, scope 1533 // user: %104
  %104 = builtin "int_expect_Int1"(%103 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %105
  cond_br %104, bb23, bb4, scope 1533             // id: %105

bb4:                                              // Preds: bb3
  %106 = integer_literal $Builtin.Int16, 10, scope 1533 // users: %271, %186, %107
  %107 = builtin "lshr_Int16"(%100 : $Builtin.Int16, %106 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %109
  %108 = integer_literal $Builtin.Int16, 54, scope 1533 // users: %187, %109
  %109 = builtin "cmp_eq_Int16"(%107 : $Builtin.Int16, %108 : $Builtin.Int16) : $Builtin.Int1, scope 1533 // user: %110
  cond_br %109, bb14, bb5, scope 1533             // id: %110

bb5:                                              // Preds: bb4
  %111 = builtin "cmp_ne_Int64"(%22 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %112
  cond_br %111, bb7, bb6, scope 1533              // id: %112

bb6:                                              // Preds: bb5
  br bb12, scope 1533                             // id: %113

bb7:                                              // Preds: bb5
  %114 = integer_literal $Builtin.Int64, 1, scope 1533 // user: %115
  %115 = builtin "ssub_with_overflow_Int64"(%22 : $Builtin.Int64, %114 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1533 // users: %117, %116
  %116 = tuple_extract %115 : $(Builtin.Int64, Builtin.Int1), 0, scope 1533 // users: %144, %125, %122, %119
  %117 = tuple_extract %115 : $(Builtin.Int64, Builtin.Int1), 1, scope 1533 // user: %118
  cond_fail %117 : $Builtin.Int1, scope 1533      // id: %118
  %119 = struct $Int (%116 : $Builtin.Int64), scope 1533 // users: %136, %181, %134, %120
  debug_value %119 : $Int, scope 1533             // id: %120
  debug_value %16 : $_StringCore, scope 1533      // id: %121
  %122 = builtin "cmp_sge_Int64"(%116 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %123
  %123 = builtin "xor_Int1"(%122 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %127
  debug_value %16 : $_StringCore, scope 1533      // id: %124
  %125 = builtin "cmp_sle_Int64"(%116 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %126
  %126 = builtin "xor_Int1"(%125 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %127
  %127 = builtin "or_Int1"(%123 : $Builtin.Int1, %126 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %128
  cond_fail %127 : $Builtin.Int1, scope 1533      // id: %128
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %129
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %130
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %131
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %132
  switch_enum %41 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb9, case #Optional.some!enumelt.1: bb8, scope 1533 // id: %133

bb8:                                              // Preds: bb7
  debug_value %119 : $Int, scope 1533             // id: %134
  debug_value %16 : $_StringCore, scope 1533      // id: %135
  debug_value %119 : $Int, scope 1537             // id: %136
  %137 = integer_literal $Builtin.Int64, 63, scope 1537 // user: %138
  %138 = builtin "lshr_Int64"(%34 : $Builtin.Int64, %137 : $Builtin.Int64) : $Builtin.Int64, scope 1537 // users: %162, %144, %140
  %139 = integer_literal $Builtin.Int64, 64, scope 1537 // user: %140
  %140 = builtin "cmp_ult_Int64"(%138 : $Builtin.Int64, %139 : $Builtin.Int64) : $Builtin.Int1, scope 1537 // user: %141
  %141 = builtin "xor_Int1"(%140 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1537 // user: %142
  cond_fail %141 : $Builtin.Int1, scope 1537      // id: %142
  %143 = unchecked_enum_data %41 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1537 // users: %146, %145
  %144 = builtin "shl_Int64"(%116 : $Builtin.Int64, %138 : $Builtin.Int64) : $Builtin.Int64, scope 1537 // user: %147
  %145 = struct_extract %143 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1537 // user: %148
  debug_value %143 : $UnsafeMutableRawPointer, scope 1537 // id: %146
  %147 = builtin "truncOrBitCast_Int64_Word"(%144 : $Builtin.Int64) : $Builtin.Word, scope 1537 // user: %148
  %148 = index_raw_pointer %145 : $Builtin.RawPointer, %147 : $Builtin.Word, scope 1537 // users: %155, %149
  %149 = pointer_to_address %148 : $Builtin.RawPointer to [strict] $*UInt8, scope 1533 // user: %150
  %150 = struct_element_addr %149 : $*UInt8, #UInt8._value, scope 1533 // user: %151
  %151 = load %150 : $*Builtin.Int8, scope 1533   // user: %152
  %152 = builtin "zext_Int8_Int16"(%151 : $Builtin.Int8) : $Builtin.Int16, scope 1533 // user: %172
  %153 = metatype $@thick UInt8.Type, scope 1533  // user: %154
  %154 = builtin "strideof_nonzero"<UInt8>(%153 : $@thick UInt8.Type) : $Builtin.Word, scope 1533 // user: %155
  %155 = index_raw_pointer %148 : $Builtin.RawPointer, %154 : $Builtin.Word, scope 1533 // user: %156
  %156 = pointer_to_address %155 : $Builtin.RawPointer to [strict] $*UInt8, scope 1533 // user: %157
  %157 = struct_element_addr %156 : $*UInt8, #UInt8._value, scope 1533 // user: %158
  %158 = load %157 : $*Builtin.Int8, scope 1533   // user: %159
  %159 = builtin "zext_Int8_Int16"(%158 : $Builtin.Int8) : $Builtin.Int16, scope 1533 // user: %168
  debug_value %16 : $_StringCore, scope 1533      // id: %160
  debug_value %16 : $_StringCore, scope 1533      // id: %161
  %162 = builtin "s_to_u_checked_trunc_Int64_Int16"(%138 : $Builtin.Int64) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %164, %163
  %163 = tuple_extract %162 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %167
  %164 = tuple_extract %162 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %165
  cond_fail %164 : $Builtin.Int1, scope 1533      // id: %165
  %166 = integer_literal $Builtin.Int16, 8, scope 1533 // user: %167
  %167 = builtin "shl_Int16"(%163 : $Builtin.Int16, %166 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %168
  %168 = builtin "umul_with_overflow_Int16"(%159 : $Builtin.Int16, %167 : $Builtin.Int16, %9 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %170, %169
  %169 = tuple_extract %168 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %172
  %170 = tuple_extract %168 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %171
  cond_fail %170 : $Builtin.Int1, scope 1533      // id: %171
  %172 = builtin "uadd_with_overflow_Int16"(%152 : $Builtin.Int16, %169 : $Builtin.Int16, %9 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %174, %173
  %173 = tuple_extract %172 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %176
  %174 = tuple_extract %172 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %175
  cond_fail %174 : $Builtin.Int1, scope 1533      // id: %175
  %176 = struct $UInt16 (%173 : $Builtin.Int16), scope 1533 // user: %177
  br bb10(%176 : $UInt16), scope 1533             // id: %177

bb9:                                              // Preds: bb7
  %178 = struct_extract %16 : $_StringCore, #_StringCore._owner, scope 1533 // user: %181
  // function_ref specialized _cocoaStringSubscript(_StringCore, Int) -> UInt16
  %179 = function_ref @_TTSfq4gs_n___TFs21_cocoaStringSubscriptFTVs11_StringCoreSi_Vs6UInt16 : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16, scope 1533 // user: %181
  retain_value %1 : $String.UTF16View, scope 1533 // id: %180
  %181 = apply %179(%34, %178, %119) : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16, scope 1533 // user: %183
  release_value %1 : $String.UTF16View, scope 1533 // id: %182
  br bb10(%181 : $UInt16), scope 1533             // id: %183

// %184                                           // user: %185
bb10(%184 : $UInt16):                             // Preds: bb9 bb8
  %185 = struct_extract %184 : $UInt16, #UInt16._value, scope 1533 // user: %186
  %186 = builtin "lshr_Int16"(%185 : $Builtin.Int16, %106 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %187
  %187 = builtin "cmp_eq_Int16"(%186 : $Builtin.Int16, %108 : $Builtin.Int16) : $Builtin.Int1, scope 1533 // user: %188
  %188 = builtin "int_expect_Int1"(%187 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %189
  cond_br %188, bb13, bb11, scope 1533            // id: %189

bb11:                                             // Preds: bb10
  br bb12, scope 1533                             // id: %190

bb12:                                             // Preds: bb11 bb6
  %191 = integer_literal $Builtin.Int16, -3, scope 1533 // user: %192
  %192 = struct $UInt16 (%191 : $Builtin.Int16), scope 1533 // user: %193
  br bb24(%192 : $UInt16), scope 1533             // id: %193

bb13:                                             // Preds: bb10
  br bb24(%97 : $UInt16), scope 1533              // id: %194

bb14:                                             // Preds: bb4
  %195 = integer_literal $Builtin.Int64, 1, scope 1533 // user: %196
  %196 = builtin "sadd_with_overflow_Int64"(%22 : $Builtin.Int64, %195 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1533 // users: %198, %197
  %197 = tuple_extract %196 : $(Builtin.Int64, Builtin.Int1), 0, scope 1533 // users: %229, %210, %207, %204, %201
  %198 = tuple_extract %196 : $(Builtin.Int64, Builtin.Int1), 1, scope 1533 // user: %199
  cond_fail %198 : $Builtin.Int1, scope 1533      // id: %199
  debug_value %16 : $_StringCore, scope 1533      // id: %200
  %201 = builtin "cmp_slt_Int64"(%197 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %202
  cond_br %201, bb16, bb15, scope 1533            // id: %202

bb15:                                             // Preds: bb14
  br bb21, scope 1533                             // id: %203

bb16:                                             // Preds: bb14
  %204 = struct $Int (%197 : $Builtin.Int64), scope 1533 // users: %221, %266, %219, %205
  debug_value %204 : $Int, scope 1533             // id: %205
  debug_value %16 : $_StringCore, scope 1533      // id: %206
  %207 = builtin "cmp_sge_Int64"(%197 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %208
  %208 = builtin "xor_Int1"(%207 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %212
  debug_value %16 : $_StringCore, scope 1533      // id: %209
  %210 = builtin "cmp_sle_Int64"(%197 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1, scope 1533 // user: %211
  %211 = builtin "xor_Int1"(%210 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %212
  %212 = builtin "or_Int1"(%208 : $Builtin.Int1, %211 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %213
  cond_fail %212 : $Builtin.Int1, scope 1533      // id: %213
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %214
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %215
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %216
  debug_value %41 : $Optional<UnsafeMutableRawPointer>, scope 1533 // id: %217
  switch_enum %41 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb18, case #Optional.some!enumelt.1: bb17, scope 1533 // id: %218

bb17:                                             // Preds: bb16
  debug_value %204 : $Int, scope 1533             // id: %219
  debug_value %16 : $_StringCore, scope 1533      // id: %220
  debug_value %204 : $Int, scope 1539             // id: %221
  %222 = integer_literal $Builtin.Int64, 63, scope 1539 // user: %223
  %223 = builtin "lshr_Int64"(%34 : $Builtin.Int64, %222 : $Builtin.Int64) : $Builtin.Int64, scope 1539 // users: %247, %229, %225
  %224 = integer_literal $Builtin.Int64, 64, scope 1539 // user: %225
  %225 = builtin "cmp_ult_Int64"(%223 : $Builtin.Int64, %224 : $Builtin.Int64) : $Builtin.Int1, scope 1539 // user: %226
  %226 = builtin "xor_Int1"(%225 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1539 // user: %227
  cond_fail %226 : $Builtin.Int1, scope 1539      // id: %227
  %228 = unchecked_enum_data %41 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1539 // users: %231, %230
  %229 = builtin "shl_Int64"(%197 : $Builtin.Int64, %223 : $Builtin.Int64) : $Builtin.Int64, scope 1539 // user: %232
  %230 = struct_extract %228 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1539 // user: %233
  debug_value %228 : $UnsafeMutableRawPointer, scope 1539 // id: %231
  %232 = builtin "truncOrBitCast_Int64_Word"(%229 : $Builtin.Int64) : $Builtin.Word, scope 1539 // user: %233
  %233 = index_raw_pointer %230 : $Builtin.RawPointer, %232 : $Builtin.Word, scope 1539 // users: %240, %234
  %234 = pointer_to_address %233 : $Builtin.RawPointer to [strict] $*UInt8, scope 1533 // user: %235
  %235 = struct_element_addr %234 : $*UInt8, #UInt8._value, scope 1533 // user: %236
  %236 = load %235 : $*Builtin.Int8, scope 1533   // user: %237
  %237 = builtin "zext_Int8_Int16"(%236 : $Builtin.Int8) : $Builtin.Int16, scope 1533 // user: %257
  %238 = metatype $@thick UInt8.Type, scope 1533  // user: %239
  %239 = builtin "strideof_nonzero"<UInt8>(%238 : $@thick UInt8.Type) : $Builtin.Word, scope 1533 // user: %240
  %240 = index_raw_pointer %233 : $Builtin.RawPointer, %239 : $Builtin.Word, scope 1533 // user: %241
  %241 = pointer_to_address %240 : $Builtin.RawPointer to [strict] $*UInt8, scope 1533 // user: %242
  %242 = struct_element_addr %241 : $*UInt8, #UInt8._value, scope 1533 // user: %243
  %243 = load %242 : $*Builtin.Int8, scope 1533   // user: %244
  %244 = builtin "zext_Int8_Int16"(%243 : $Builtin.Int8) : $Builtin.Int16, scope 1533 // user: %253
  debug_value %16 : $_StringCore, scope 1533      // id: %245
  debug_value %16 : $_StringCore, scope 1533      // id: %246
  %247 = builtin "s_to_u_checked_trunc_Int64_Int16"(%223 : $Builtin.Int64) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %249, %248
  %248 = tuple_extract %247 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %252
  %249 = tuple_extract %247 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %250
  cond_fail %249 : $Builtin.Int1, scope 1533      // id: %250
  %251 = integer_literal $Builtin.Int16, 8, scope 1533 // user: %252
  %252 = builtin "shl_Int16"(%248 : $Builtin.Int16, %251 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %253
  %253 = builtin "umul_with_overflow_Int16"(%244 : $Builtin.Int16, %252 : $Builtin.Int16, %9 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %255, %254
  %254 = tuple_extract %253 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %257
  %255 = tuple_extract %253 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %256
  cond_fail %255 : $Builtin.Int1, scope 1533      // id: %256
  %257 = builtin "uadd_with_overflow_Int16"(%237 : $Builtin.Int16, %254 : $Builtin.Int16, %9 : $Builtin.Int1) : $(Builtin.Int16, Builtin.Int1), scope 1533 // users: %259, %258
  %258 = tuple_extract %257 : $(Builtin.Int16, Builtin.Int1), 0, scope 1533 // user: %261
  %259 = tuple_extract %257 : $(Builtin.Int16, Builtin.Int1), 1, scope 1533 // user: %260
  cond_fail %259 : $Builtin.Int1, scope 1533      // id: %260
  %261 = struct $UInt16 (%258 : $Builtin.Int16), scope 1533 // user: %262
  br bb19(%261 : $UInt16), scope 1533             // id: %262

bb18:                                             // Preds: bb16
  %263 = struct_extract %16 : $_StringCore, #_StringCore._owner, scope 1533 // user: %266
  // function_ref specialized _cocoaStringSubscript(_StringCore, Int) -> UInt16
  %264 = function_ref @_TTSfq4gs_n___TFs21_cocoaStringSubscriptFTVs11_StringCoreSi_Vs6UInt16 : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16, scope 1533 // user: %266
  retain_value %1 : $String.UTF16View, scope 1533 // id: %265
  %266 = apply %264(%34, %263, %204) : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16, scope 1533 // user: %268
  release_value %1 : $String.UTF16View, scope 1533 // id: %267
  br bb19(%266 : $UInt16), scope 1533             // id: %268

// %269                                           // user: %270
bb19(%269 : $UInt16):                             // Preds: bb18 bb17
  %270 = struct_extract %269 : $UInt16, #UInt16._value, scope 1533 // user: %271
  %271 = builtin "lshr_Int16"(%270 : $Builtin.Int16, %106 : $Builtin.Int16) : $Builtin.Int16, scope 1533 // user: %273
  %272 = integer_literal $Builtin.Int16, 55, scope 1533 // user: %273
  %273 = builtin "cmp_eq_Int16"(%271 : $Builtin.Int16, %272 : $Builtin.Int16) : $Builtin.Int1, scope 1533 // user: %274
  %274 = builtin "int_expect_Int1"(%273 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1533 // user: %275
  cond_br %274, bb22, bb20, scope 1533            // id: %275

bb20:                                             // Preds: bb19
  br bb21, scope 1533                             // id: %276

bb21:                                             // Preds: bb20 bb15
  %277 = integer_literal $Builtin.Int16, -3, scope 1533 // user: %278
  %278 = struct $UInt16 (%277 : $Builtin.Int16), scope 1533 // user: %279
  br bb24(%278 : $UInt16), scope 1533             // id: %279

bb22:                                             // Preds: bb19
  br bb24(%97 : $UInt16), scope 1533              // id: %280

bb23:                                             // Preds: bb3
  br bb24(%97 : $UInt16), scope 1533              // id: %281

// %282                                           // user: %283
bb24(%282 : $UInt16):                             // Preds: bb23 bb22 bb21 bb13 bb12
  return %282 : $UInt16, scope 1533               // id: %283
}


// specialized _cocoaStringSubscript(_StringCore, Int) -> UInt16
sil [fragile] [noinline] [_semantics "stdlib_binary_only"] @_TTSfq4gs_n___TFs21_cocoaStringSubscriptFTVs11_StringCoreSi_Vs6UInt16 : $@convention(thin) (Builtin.Int64, @guaranteed Optional<AnyObject>, Int) -> UInt16

sil_scope 1540 {  parent @_TFVs12_ArrayBuffer30isMutableAndUniquelyReferencedfT_Sb : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer.isMutableAndUniquelyReferenced() -> Bool
sil public_external [fragile] @_TFVs12_ArrayBuffer30isMutableAndUniquelyReferencedfT_Sb : $@convention(method) <Element> (@inout _ArrayBuffer<Element>) -> Bool {
// %0                                             // users: %3, %1
bb0(%0 : $*_ArrayBuffer<Element>):
  debug_value_addr %0 : $*_ArrayBuffer<Element>, scope 1540 // id: %1
  // function_ref _ArrayBuffer.isUniquelyReferenced() -> Bool
  %2 = function_ref @_TFVs12_ArrayBuffer20isUniquelyReferencedfT_Sb : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 1540 // user: %3
  %3 = apply %2<Element>(%0) : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool, scope 1540 // user: %4
  return %3 : $Bool, scope 1540                   // id: %4
}

sil_scope 1541 {  parent @_TTSg5V4Main8Employee___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> () }
sil_scope 1542 {  parent @_TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols_GVs14_IgnorePointerS1__GS3_S1__s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, @inout _ContiguousArrayBuffer<Employee>, Int, Int, _IgnorePointer<Employee>) -> () }
sil_scope 1543 {  parent 1541 }
sil_scope 1544 {  parent 1542 inlined_at 1543 }

// specialized Array._copyToNewBuffer(oldCount : Int) -> ()
sil shared [noinline] @_TTSg5V4Main8Employee___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> () {
// %0                                             // users: %21, %16, %6, %4
// %1                                             // users: %14, %2
bb0(%0 : $Int, %1 : $*Array<Employee>):
  debug_value_addr %1 : $*Array<Employee>, scope 1541 // id: %2
  %3 = alloc_stack $_ContiguousArrayBuffer<Employee>, scope 1541 // users: %21, %27, %22, %17
  debug_value %0 : $Int, scope 1541               // id: %4
  %5 = integer_literal $Builtin.Int64, 1, scope 1541 // user: %8
  %6 = struct_extract %0 : $Int, #Int._value, scope 1541 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 1541 // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %5 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1541 // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0, scope 1541 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1, scope 1541 // user: %11
  cond_fail %10 : $Builtin.Int1, scope 1541       // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64), scope 1541 // users: %16, %13
  debug_value %12 : $Int, scope 1541              // id: %13
  %14 = struct_element_addr %1 : $*Array<Employee>, #Array._buffer, scope 1541 // users: %21, %16
  // function_ref specialized _forceCreateUniqueMutableBuffer<A where ...> (inout A, countForNewBuffer : Int, minNewCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
  %15 = function_ref @_TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols___TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, Int, Int) -> @owned _ContiguousArrayBuffer<Employee>, scope 1541 // user: %16
  %16 = apply %15(%14, %0, %12) : $@convention(thin) (@inout _ArrayBuffer<Employee>, Int, Int) -> @owned _ContiguousArrayBuffer<Employee>, scope 1541 // user: %17
  store %16 to %3 : $*_ContiguousArrayBuffer<Employee>, scope 1541 // id: %17
  %18 = integer_literal $Builtin.Int64, 0, scope 1541 // user: %19
  %19 = struct $Int (%18 : $Builtin.Int64), scope 1541 // user: %21
  // function_ref specialized specialized _arrayOutOfPlaceUpdate<A, B where ...> (inout A, inout _ContiguousArrayBuffer<A.Element>, Int, Int, B) -> ()
  %20 = function_ref @_TTSf4n_n_n_n_d___TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols_GVs14_IgnorePointerS1__GS3_S1__s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, @inout _ContiguousArrayBuffer<Employee>, Int, Int) -> (), scope 1544 // user: %21
  %21 = apply %20(%14, %3, %0, %19) : $@convention(thin) (@inout _ArrayBuffer<Employee>, @inout _ContiguousArrayBuffer<Employee>, Int, Int) -> (), scope 1544
  %22 = struct_element_addr %3 : $*_ContiguousArrayBuffer<Employee>, #_ContiguousArrayBuffer.__bufferPointer, scope 1541 // user: %23
  %23 = struct_element_addr %22 : $*ManagedBufferPointer<_ArrayBody, Employee>, #ManagedBufferPointer._nativeBuffer, scope 1541 // user: %24
  %24 = load %23 : $*Builtin.NativeObject, scope 1541 // user: %25
  strong_release %24 : $Builtin.NativeObject, scope 1541 // id: %25
  %26 = tuple (), scope 1541                      // user: %28
  dealloc_stack %3 : $*_ContiguousArrayBuffer<Employee>, scope 1541 // id: %27
  return %26 : $(), scope 1541                    // id: %28
}

sil_scope 1545 {  parent @_TTSg5SS___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<String>) -> () }
sil_scope 1546 {  parent @_TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols_GVs14_IgnorePointerSS_GS1_SS_s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<String>, @inout _ContiguousArrayBuffer<String>, Int, Int, _IgnorePointer<String>) -> () }
sil_scope 1547 {  parent 1545 }
sil_scope 1548 {  parent 1546 inlined_at 1547 }

// specialized Array._copyToNewBuffer(oldCount : Int) -> ()
sil shared [noinline] @_TTSg5SS___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<String>) -> () {
// %0                                             // users: %21, %16, %6, %4
// %1                                             // users: %14, %2
bb0(%0 : $Int, %1 : $*Array<String>):
  debug_value_addr %1 : $*Array<String>, scope 1545 // id: %2
  %3 = alloc_stack $_ContiguousArrayBuffer<String>, scope 1545 // users: %21, %27, %22, %17
  debug_value %0 : $Int, scope 1545               // id: %4
  %5 = integer_literal $Builtin.Int64, 1, scope 1545 // user: %8
  %6 = struct_extract %0 : $Int, #Int._value, scope 1545 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 1545 // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %5 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1545 // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0, scope 1545 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1, scope 1545 // user: %11
  cond_fail %10 : $Builtin.Int1, scope 1545       // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64), scope 1545 // users: %16, %13
  debug_value %12 : $Int, scope 1545              // id: %13
  %14 = struct_element_addr %1 : $*Array<String>, #Array._buffer, scope 1545 // users: %21, %16
  // function_ref specialized _forceCreateUniqueMutableBuffer<A where ...> (inout A, countForNewBuffer : Int, minNewCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
  %15 = function_ref @_TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols___TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<String>, Int, Int) -> @owned _ContiguousArrayBuffer<String>, scope 1545 // user: %16
  %16 = apply %15(%14, %0, %12) : $@convention(thin) (@inout _ArrayBuffer<String>, Int, Int) -> @owned _ContiguousArrayBuffer<String>, scope 1545 // user: %17
  store %16 to %3 : $*_ContiguousArrayBuffer<String>, scope 1545 // id: %17
  %18 = integer_literal $Builtin.Int64, 0, scope 1545 // user: %19
  %19 = struct $Int (%18 : $Builtin.Int64), scope 1545 // user: %21
  // function_ref specialized specialized _arrayOutOfPlaceUpdate<A, B where ...> (inout A, inout _ContiguousArrayBuffer<A.Element>, Int, Int, B) -> ()
  %20 = function_ref @_TTSf4n_n_n_n_d___TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols_GVs14_IgnorePointerSS_GS1_SS_s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<String>, @inout _ContiguousArrayBuffer<String>, Int, Int) -> (), scope 1548 // user: %21
  %21 = apply %20(%14, %3, %0, %19) : $@convention(thin) (@inout _ArrayBuffer<String>, @inout _ContiguousArrayBuffer<String>, Int, Int) -> (), scope 1548
  %22 = struct_element_addr %3 : $*_ContiguousArrayBuffer<String>, #_ContiguousArrayBuffer.__bufferPointer, scope 1545 // user: %23
  %23 = struct_element_addr %22 : $*ManagedBufferPointer<_ArrayBody, String>, #ManagedBufferPointer._nativeBuffer, scope 1545 // user: %24
  %24 = load %23 : $*Builtin.NativeObject, scope 1545 // user: %25
  strong_release %24 : $Builtin.NativeObject, scope 1545 // id: %25
  %26 = tuple (), scope 1545                      // user: %28
  dealloc_stack %3 : $*_ContiguousArrayBuffer<String>, scope 1545 // id: %27
  return %26 : $(), scope 1545                    // id: %28
}

sil_scope 1549 {  parent @_TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () }

// Array._copyToNewBuffer(oldCount : Int) -> ()
sil hidden_external [fragile] [noinline] @_TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) <Element> (Int, @inout Array<Element>) -> () {
// %0                                             // users: %26, %16, %6, %4
// %1                                             // users: %15, %2
bb0(%0 : $Int, %1 : $*Array<Element>):
  debug_value_addr %1 : $*Array<Element>, scope 1549 // id: %2
  %3 = alloc_stack $_ContiguousArrayBuffer<Element>, scope 1549 // users: %33, %28, %26, %17
  debug_value %0 : $Int, scope 1549               // id: %4
  %5 = integer_literal $Builtin.Int64, 1, scope 1549 // user: %8
  %6 = struct_extract %0 : $Int, #Int._value, scope 1549 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 1549 // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %5 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1549 // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0, scope 1549 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1, scope 1549 // user: %11
  cond_fail %10 : $Builtin.Int1, scope 1549       // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64), scope 1549 // users: %16, %13
  debug_value %12 : $Int, scope 1549              // id: %13
  // function_ref _forceCreateUniqueMutableBuffer<A where ...> (inout A, countForNewBuffer : Int, minNewCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
  %14 = function_ref @_TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout τ_0_0, Int, Int) -> @owned _ContiguousArrayBuffer<τ_0_0.Element>, scope 1549 // user: %16
  %15 = struct_element_addr %1 : $*Array<Element>, #Array._buffer, scope 1549 // users: %26, %16
  %16 = apply %14<_ArrayBuffer<Element>, Element, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, IndexingIterator<_ArrayBuffer<Element>>, Element, _SliceBuffer<Element>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, IndexingIterator<_SliceBuffer<Element>>, Element, _SliceBuffer<Element>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<_SliceBuffer<Element>>, Element, _SliceBuffer<Element>, Int, IndexingIterator<_SliceBuffer<Element>>, Element, _SliceBuffer<Element>, Element, Element, Element, Element>(%15, %0, %12) : $@convention(thin) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout τ_0_0, Int, Int) -> @owned _ContiguousArrayBuffer<τ_0_0.Element>, scope 1549 // user: %17
  store %16 to %3 : $*_ContiguousArrayBuffer<Element>, scope 1549 // id: %17
  // function_ref _arrayOutOfPlaceUpdate<A, B where ...> (inout A, inout _ContiguousArrayBuffer<A.Element>, Int, Int, B) -> ()
  %18 = function_ref @_TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) <τ_0_0, τ_0_1 where τ_0_0 : _ArrayBufferProtocol, τ_0_1 : _PointerFunction, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_1.Element == τ_0_0.Element, τ_0_0.Index == Int> (@inout τ_0_0, @inout _ContiguousArrayBuffer<τ_0_0.Element>, Int, Int, @in τ_0_1) -> (), scope 1549 // user: %26
  %19 = integer_literal $Builtin.Int64, 0, scope 1549 // user: %20
  %20 = struct $Int (%19 : $Builtin.Int64), scope 1549 // user: %26
  // function_ref _IgnorePointer.init() -> _IgnorePointer<A>
  %21 = function_ref @_TFVs14_IgnorePointerCfT_GS_x_ : $@convention(method) <τ_0_0> (@thin _IgnorePointer<τ_0_0>.Type) -> _IgnorePointer<τ_0_0>, scope 1549 // user: %23
  %22 = metatype $@thin _IgnorePointer<Element>.Type, scope 1549 // user: %23
  %23 = apply %21<Element>(%22) : $@convention(method) <τ_0_0> (@thin _IgnorePointer<τ_0_0>.Type) -> _IgnorePointer<τ_0_0>, scope 1549 // user: %25
  %24 = alloc_stack $_IgnorePointer<Element>, scope 1549 // users: %27, %26, %25
  store %23 to %24 : $*_IgnorePointer<Element>, scope 1549 // id: %25
  %26 = apply %18<_ArrayBuffer<Element>, _IgnorePointer<Element>, Element, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, Int, Int, IndexingIterator<_ArrayBuffer<Element>>, Element, _SliceBuffer<Element>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, Int, IndexingIterator<_SliceBuffer<Element>>, Element, _SliceBuffer<Element>, Int, Int, Int, Int, Int, Int, CountableRange<Int>, Int, IndexingIterator<CountableRange<Int>>, Int, CountableRange<Int>, Int, IndexingIterator<_SliceBuffer<Element>>, Element, _SliceBuffer<Element>, Int, IndexingIterator<_SliceBuffer<Element>>, Element, _SliceBuffer<Element>, Element, Element, Element, Element>(%15, %3, %0, %20, %24) : $@convention(thin) <τ_0_0, τ_0_1 where τ_0_0 : _ArrayBufferProtocol, τ_0_1 : _PointerFunction, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_1.Element == τ_0_0.Element, τ_0_0.Index == Int> (@inout τ_0_0, @inout _ContiguousArrayBuffer<τ_0_0.Element>, Int, Int, @in τ_0_1) -> (), scope 1549
  dealloc_stack %24 : $*_IgnorePointer<Element>, scope 1549 // id: %27
  %28 = struct_element_addr %3 : $*_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1549 // user: %29
  %29 = struct_element_addr %28 : $*ManagedBufferPointer<_ArrayBody, Element>, #ManagedBufferPointer._nativeBuffer, scope 1549 // user: %30
  %30 = load %29 : $*Builtin.NativeObject, scope 1549 // user: %31
  strong_release %30 : $Builtin.NativeObject, scope 1549 // id: %31
  %32 = tuple (), scope 1549                      // user: %34
  dealloc_stack %3 : $*_ContiguousArrayBuffer<Element>, scope 1549 // id: %33
  return %32 : $(), scope 1549                    // id: %34
}

sil_scope 1550 {  parent @_TFVs12_ArrayBufferg5countSi : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.count.getter
sil public_external [fragile] [always_inline] @_TFVs12_ArrayBufferg5countSi : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
// %0                                             // users: %16, %9, %3, %1
bb0(%0 : $_ArrayBuffer<Element>):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1550 // id: %1
  // function_ref _ArrayBuffer._isNative.getter
  %2 = function_ref @_TFVs12_ArrayBufferg9_isNativeSb : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 1550 // user: %3
  %3 = apply %2<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 1550 // user: %5
  %4 = integer_literal $Builtin.Int1, -1, scope 1550 // user: %6
  %5 = struct_extract %3 : $Bool, #Bool._value, scope 1550 // user: %6
  %6 = builtin "int_expect_Int1"(%5 : $Builtin.Int1, %4 : $Builtin.Int1) : $Builtin.Int1, scope 1550 // user: %7
  cond_br %6, bb2, bb1, scope 1550                // id: %7

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %8 = function_ref @_TFVs12_ArrayBufferg10_nonNativePs12_NSArrayCore_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _NSArrayCore, scope 1550 // user: %9
  %9 = apply %8<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _NSArrayCore, scope 1550 // users: %13, %10
  %10 = open_existential_ref %9 : $_NSArrayCore to $@opened("2BE07470-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore, scope 1550 // users: %12, %12, %11
  %11 = witness_method [volatile] $@opened("2BE07470-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore, #_NSArrayCore.count!getter.1.foreign, %10 : $@opened("2BE07470-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore : $@convention(objc_method) <τ_0_0 where τ_0_0 : _NSArrayCore> (τ_0_0) -> Int, scope 1550 // user: %12
  %12 = apply %11<@opened("2BE07470-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore>(%10) : $@convention(objc_method) <τ_0_0 where τ_0_0 : _NSArrayCore> (τ_0_0) -> Int, scope 1550 // user: %14
  strong_release %9 : $_NSArrayCore, scope 1550   // id: %13
  br bb3(%12 : $Int), scope 1550                  // id: %14

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %15 = function_ref @_TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1550 // user: %16
  %16 = apply %15<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1550 // users: %19, %18
  // function_ref _ContiguousArrayBuffer.count.getter
  %17 = function_ref @_TFVs22_ContiguousArrayBufferg5countSi : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1550 // user: %18
  %18 = apply %17<Element>(%16) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1550 // user: %20
  release_value %16 : $_ContiguousArrayBuffer<Element>, scope 1550 // id: %19
  br bb3(%18 : $Int), scope 1550                  // id: %20

// %21                                            // user: %22
bb3(%21 : $Int):                                  // Preds: bb2 bb1
  return %21 : $Int, scope 1550                   // id: %22
}

sil_scope 1551 {  parent @_TFVs12_ArrayBufferg8capacitySi : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Int }

// _ArrayBuffer.capacity.getter
sil public_external [fragile] @_TFVs12_ArrayBufferg8capacitySi : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Int {
// %0                                             // users: %16, %9, %3, %1
bb0(%0 : $_ArrayBuffer<Element>):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1551 // id: %1
  // function_ref _ArrayBuffer._isNative.getter
  %2 = function_ref @_TFVs12_ArrayBufferg9_isNativeSb : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 1551 // user: %3
  %3 = apply %2<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 1551 // user: %5
  %4 = integer_literal $Builtin.Int1, -1, scope 1551 // user: %6
  %5 = struct_extract %3 : $Bool, #Bool._value, scope 1551 // user: %6
  %6 = builtin "int_expect_Int1"(%5 : $Builtin.Int1, %4 : $Builtin.Int1) : $Builtin.Int1, scope 1551 // user: %7
  cond_br %6, bb2, bb1, scope 1551                // id: %7

bb1:                                              // Preds: bb0
  // function_ref _ArrayBuffer._nonNative.getter
  %8 = function_ref @_TFVs12_ArrayBufferg10_nonNativePs12_NSArrayCore_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _NSArrayCore, scope 1551 // user: %9
  %9 = apply %8<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _NSArrayCore, scope 1551 // users: %13, %10
  %10 = open_existential_ref %9 : $_NSArrayCore to $@opened("2BE09CA2-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore, scope 1551 // users: %12, %12, %11
  %11 = witness_method [volatile] $@opened("2BE09CA2-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore, #_NSArrayCore.count!getter.1.foreign, %10 : $@opened("2BE09CA2-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore : $@convention(objc_method) <τ_0_0 where τ_0_0 : _NSArrayCore> (τ_0_0) -> Int, scope 1551 // user: %12
  %12 = apply %11<@opened("2BE09CA2-F9C8-11E6-91E8-A8667F09828A") _NSArrayCore>(%10) : $@convention(objc_method) <τ_0_0 where τ_0_0 : _NSArrayCore> (τ_0_0) -> Int, scope 1551 // user: %14
  strong_release %9 : $_NSArrayCore, scope 1551   // id: %13
  br bb3(%12 : $Int), scope 1551                  // id: %14

bb2:                                              // Preds: bb0
  // function_ref _ArrayBuffer._native.getter
  %15 = function_ref @_TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1551 // user: %16
  %16 = apply %15<Element>(%0) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1551 // users: %19, %18
  // function_ref _ContiguousArrayBuffer.capacity.getter
  %17 = function_ref @_TFVs22_ContiguousArrayBufferg8capacitySi : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1551 // user: %18
  %18 = apply %17<Element>(%16) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1551 // user: %20
  release_value %16 : $_ContiguousArrayBuffer<Element>, scope 1551 // id: %19
  br bb3(%18 : $Int), scope 1551                  // id: %20

// %21                                            // user: %22
bb3(%21 : $Int):                                  // Preds: bb2 bb1
  return %21 : $Int, scope 1551                   // id: %22
}

sil_scope 1552 {  parent @_TFVs12_ArrayBuffers5countSi : $@convention(method) <τ_0_0> (Int, @inout _ArrayBuffer<τ_0_0>) -> () }

// _ArrayBuffer.count.setter
sil public_external [fragile] @_TFVs12_ArrayBuffers5countSi : $@convention(method) <Element> (Int, @inout _ArrayBuffer<Element>) -> () {
// %0                                             // users: %10, %3
// %1                                             // users: %4, %2
bb0(%0 : $Int, %1 : $*_ArrayBuffer<Element>):
  debug_value_addr %1 : $*_ArrayBuffer<Element>, scope 1552 // id: %2
  debug_value %0 : $Int, scope 1552               // id: %3
  %4 = load %1 : $*_ArrayBuffer<Element>, scope 1552 // users: %8, %6, %7
  // function_ref _ArrayBuffer._native.getter
  %5 = function_ref @_TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1552 // user: %7
  retain_value %4 : $_ArrayBuffer<Element>, scope 1552 // id: %6
  %7 = apply %5<Element>(%4) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1552 // users: %11, %10
  release_value %4 : $_ArrayBuffer<Element>, scope 1552 // id: %8
  // function_ref _ContiguousArrayBuffer.count.setter
  %9 = function_ref @_TFVs22_ContiguousArrayBuffers5countSi : $@convention(method) <τ_0_0> (Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1552 // user: %10
  %10 = apply %9<Element>(%0, %7) : $@convention(method) <τ_0_0> (Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1552
  release_value %7 : $_ContiguousArrayBuffer<Element>, scope 1552 // id: %11
  %12 = tuple (), scope 1552                      // user: %13
  return %12 : $(), scope 1552                    // id: %13
}

sil_scope 1553 {  parent @_TFSp10initializefT2tox5countSi_T_ : $@convention(method) <τ_0_0> (@in τ_0_0, Int, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.initialize(to : A, count : Int) -> ()
sil public_external [fragile] @_TFSp10initializefT2tox5countSi_T_ : $@convention(method) <Pointee> (@in Pointee, Int, UnsafeMutablePointer<Pointee>) -> () {
// %0                                             // users: %32, %27, %3
// %1                                             // users: %6, %4
// %2                                             // users: %16, %5
bb0(%0 : $*Pointee, %1 : $Int, %2 : $UnsafeMutablePointer<Pointee>):
  debug_value_addr %0 : $*Pointee, scope 1553     // id: %3
  debug_value %1 : $Int, scope 1553               // id: %4
  debug_value %2 : $UnsafeMutablePointer<Pointee>, scope 1553 // id: %5
  %6 = struct_extract %1 : $Int, #Int._value, scope 1553 // users: %18, %12, %28, %8
  %7 = integer_literal $Builtin.Int64, 0, scope 1553 // users: %18, %20, %12, %8
  %8 = builtin "cmp_sle_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1553 // user: %10
  %9 = integer_literal $Builtin.Int1, -1, scope 1553 // users: %22, %10
  %10 = builtin "xor_Int1"(%8 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 1553 // user: %11
  cond_fail %10 : $Builtin.Int1, scope 1553       // id: %11
  %12 = builtin "cmp_eq_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1553 // user: %13
  cond_br %12, bb1, bb2, scope 1553               // id: %13

bb1:                                              // Preds: bb0
  br bb6, scope 1553                              // id: %14

bb2:                                              // Preds: bb0
  %15 = integer_literal $Builtin.Int64, 1, scope 1553 // user: %22
  %16 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 1553 // user: %17
  %17 = pointer_to_address %16 : $Builtin.RawPointer to [strict] $*Pointee, scope 1553 // user: %26
  %18 = builtin "cmp_sge_Int64"(%7 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1553 // user: %19
  cond_fail %18 : $Builtin.Int1, scope 1553       // id: %19
  br bb3(%7 : $Builtin.Int64), scope 1553         // id: %20

// %21                                            // users: %22, %25
bb3(%21 : $Builtin.Int64):                        // Preds: bb5 bb2
  %22 = builtin "sadd_with_overflow_Int64"(%21 : $Builtin.Int64, %15 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1553 // user: %23
  %23 = tuple_extract %22 : $(Builtin.Int64, Builtin.Int1), 0, scope 1553 // users: %31, %28, %24
  debug_value %23 : $Builtin.Int64, scope 1553    // id: %24
  %25 = builtin "truncOrBitCast_Int64_Word"(%21 : $Builtin.Int64) : $Builtin.Word, scope 1553 // user: %26
  %26 = index_addr %17 : $*Pointee, %25 : $Builtin.Word, scope 1553 // user: %27
  copy_addr %0 to [initialization] %26 : $*Pointee, scope 1553 // id: %27
  %28 = builtin "cmp_eq_Int64"(%23 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1, scope 1553 // user: %29
  cond_br %28, bb4, bb5, scope 1553               // id: %29

bb4:                                              // Preds: bb3
  br bb6, scope 1553                              // id: %30

bb5:                                              // Preds: bb3
  br bb3(%23 : $Builtin.Int64), scope 1553        // id: %31

bb6:                                              // Preds: bb4 bb1
  destroy_addr %0 : $*Pointee, scope 1553         // id: %32
  %33 = tuple (), scope 1553                      // user: %34
  return %33 : $(), scope 1553                    // id: %34
}

sil_scope 1554 {  parent @_TIFSp10initializeFT2tox5countSi_T_A0_ : $@convention(thin) <τ_0_0> () -> Int }

// UnsafeMutablePointer.(initialize(to : A, count : Int) -> ()).(default argument 1)
sil public_external [fragile] @_TIFSp10initializeFT2tox5countSi_T_A0_ : $@convention(thin) <Pointee> () -> Int {
bb0:
  %0 = integer_literal $Builtin.Int64, 1, scope 1554 // user: %1
  %1 = struct $Int (%0 : $Builtin.Int64), scope 1554 // user: %2
  return %1 : $Int, scope 1554                    // id: %2
}

sil_scope 1555 {  parent @_TFVs12_ArrayBufferCfT_GS_x_ : $@convention(method) <τ_0_0> (@thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// _ArrayBuffer.init() -> _ArrayBuffer<A>
sil public_external [fragile] @_TFVs12_ArrayBufferCfT_GS_x_ : $@convention(method) <Element> (@thin _ArrayBuffer<Element>.Type) -> @owned _ArrayBuffer<Element> {
bb0(%0 : $@thin _ArrayBuffer<Element>.Type):
  %1 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 1555 // user: %2
  %2 = address_to_pointer %1 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 1555 // user: %3
  %3 = raw_pointer_to_ref %2 : $Builtin.RawPointer to $_EmptyArrayStorage, scope 1555 // users: %7, %4
  %4 = unchecked_ref_cast %3 : $_EmptyArrayStorage to $Builtin.BridgeObject, scope 1555 // user: %5
  %5 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%4 : $Builtin.BridgeObject), scope 1555 // user: %6
  %6 = struct $_ArrayBuffer<Element> (%5 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1555 // user: %8
  strong_retain %3 : $_EmptyArrayStorage, scope 1555 // id: %7
  return %6 : $_ArrayBuffer<Element>, scope 1555  // id: %8
}

sil_scope 1556 {  parent @_TZFSa28_allocateBufferUninitializedfT15minimumCapacitySi_GVs12_ArrayBufferx_ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> }

// static Array._allocateBufferUninitialized(minimumCapacity : Int) -> _ArrayBuffer<A>
sil hidden_external [fragile] [noinline] @_TZFSa28_allocateBufferUninitializedfT15minimumCapacitySi_GVs12_ArrayBufferx_ : $@convention(method) <Element> (Int, @thin Array<Element>.Type) -> @owned _ArrayBuffer<Element> {
// %0                                             // users: %7, %2
bb0(%0 : $Int, %1 : $@thin Array<Element>.Type):
  debug_value %0 : $Int, scope 1556               // id: %2
  // function_ref _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
  %3 = function_ref @_TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1556 // user: %7
  %4 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 1556 // user: %7
  %5 = integer_literal $Builtin.Int64, 0, scope 1556 // user: %6
  %6 = struct $Int (%5 : $Builtin.Int64), scope 1556 // users: %11, %7
  %7 = apply %3<Element>(%6, %0, %4) : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1556 // users: %11, %8
  debug_value %7 : $_ContiguousArrayBuffer<Element>, scope 1556 // id: %8
  // function_ref _ArrayBuffer.init(_ContiguousArrayBuffer<A>, shiftedToStartIndex : Int) -> _ArrayBuffer<A>
  %9 = function_ref @_TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1556 // user: %11
  %10 = metatype $@thin _ArrayBuffer<Element>.Type, scope 1556 // user: %11
  %11 = apply %9<Element>(%7, %6, %10) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayBuffer<τ_0_0>, Int, @thin _ArrayBuffer<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0>, scope 1556 // user: %12
  return %11 : $_ArrayBuffer<Element>, scope 1556 // id: %12
}

sil_scope 1557 {  parent @_TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ArrayBuffer._native.getter
sil public_external [fragile] @_TFVs12_ArrayBufferg7_nativeGVs22_ContiguousArrayBufferx_ : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %21, %12, %7, %1
bb0(%0 : $_ArrayBuffer<Element>):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1557 // id: %1
  // function_ref _isClassOrObjCExistential<A> (A.Type) -> Bool
  %2 = function_ref @_TFs25_isClassOrObjCExistentialurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1557 // user: %4
  %3 = metatype $@thick Element.Type, scope 1557  // user: %4
  %4 = apply %2<Element>(%3) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1557 // user: %5
  %5 = struct_extract %4 : $Bool, #Bool._value, scope 1557 // user: %6
  cond_br %5, bb2, bb1, scope 1557                // id: %6

bb1:                                              // Preds: bb0
  %7 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 1557 // users: %9, %8
  %8 = struct_extract %7 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1557 // user: %10
  debug_value %7 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1557 // id: %9
  %10 = unchecked_ref_cast %8 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase, scope 1557 // user: %11
  br bb3(%10 : $_ContiguousArrayStorageBase), scope 1557 // id: %11

bb2:                                              // Preds: bb0
  %12 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 1557 // users: %14, %13
  %13 = struct_extract %12 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1557 // user: %15
  debug_value %12 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1557 // id: %14
  %15 = bridge_object_to_ref %13 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase, scope 1557 // user: %16
  br bb3(%15 : $_ContiguousArrayStorageBase), scope 1557 // id: %16

// %17                                            // user: %20
bb3(%17 : $_ContiguousArrayStorageBase):          // Preds: bb2 bb1
  // function_ref _ContiguousArrayBuffer.init(_ContiguousArrayStorageBase) -> _ContiguousArrayBuffer<A>
  %18 = function_ref @_TFVs22_ContiguousArrayBufferCfCs27_ContiguousArrayStorageBaseGS_x_ : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1557 // user: %20
  %19 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 1557 // user: %20
  %20 = apply %18<Element>(%17, %19) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1557 // user: %22
  retain_value %0 : $_ArrayBuffer<Element>, scope 1557 // id: %21
  return %20 : $_ContiguousArrayBuffer<Element>, scope 1557 // id: %22
}

sil_scope 1558 {  parent @_TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int }

// static ManagedBufferPointer._headerOffset.getter
sil hidden_external [fragile] @_TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) <Header, Element> (@thin ManagedBufferPointer<Header, Element>.Type) -> Int {
bb0(%0 : $@thin ManagedBufferPointer<Header, Element>.Type):
  %1 = builtin "onFastPath"() : $(), scope 1558
  %2 = metatype $@thick HeapObject.Type, scope 1558 // user: %3
  %3 = builtin "sizeof"<HeapObject>(%2 : $@thick HeapObject.Type) : $Builtin.Word, scope 1558 // user: %4
  %4 = builtin "zextOrBitCast_Word_Int64"(%3 : $Builtin.Word) : $Builtin.Int64, scope 1558 // user: %9
  %5 = metatype $@thick Header.Type, scope 1558   // user: %6
  %6 = builtin "alignof"<Header>(%5 : $@thick Header.Type) : $Builtin.Word, scope 1558 // user: %7
  %7 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64, scope 1558 // users: %17, %9
  %8 = integer_literal $Builtin.Int1, -1, scope 1558 // user: %9
  %9 = builtin "uadd_with_overflow_Int64"(%4 : $Builtin.Int64, %7 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1558 // users: %11, %10
  %10 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 0, scope 1558 // user: %15
  %11 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 1, scope 1558 // user: %12
  cond_fail %11 : $Builtin.Int1, scope 1558       // id: %12
  %13 = integer_literal $Builtin.Int64, 1, scope 1558 // users: %17, %15
  %14 = integer_literal $Builtin.Int1, 0, scope 1558 // users: %17, %15
  %15 = builtin "usub_with_overflow_Int64"(%10 : $Builtin.Int64, %13 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1558 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 1558 // user: %21
  %17 = builtin "usub_with_overflow_Int64"(%7 : $Builtin.Int64, %13 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1558 // user: %18
  %18 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 0, scope 1558 // user: %20
  %19 = integer_literal $Builtin.Int64, -1, scope 1558 // user: %20
  %20 = builtin "xor_Int64"(%18 : $Builtin.Int64, %19 : $Builtin.Int64) : $Builtin.Int64, scope 1558 // user: %21
  %21 = builtin "and_Int64"(%16 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 1558 // user: %22
  %22 = builtin "u_to_s_checked_conversion_Int64"(%21 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1558 // users: %24, %23
  %23 = tuple_extract %22 : $(Builtin.Int64, Builtin.Int1), 0, scope 1558 // user: %26
  %24 = tuple_extract %22 : $(Builtin.Int64, Builtin.Int1), 1, scope 1558 // user: %25
  cond_fail %24 : $Builtin.Int1, scope 1558       // id: %25
  %26 = struct $Int (%23 : $Builtin.Int64), scope 1558 // user: %27
  return %26 : $Int, scope 1558                   // id: %27
}

sil_scope 1559 {  parent @_TFVs20ManagedBufferPointerCfT28_uncheckedUnsafeBufferObjectPs9AnyObject__GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1> }

// ManagedBufferPointer.init(_uncheckedUnsafeBufferObject : AnyObject) -> ManagedBufferPointer<A, B>
sil public_external [fragile] @_TFVs20ManagedBufferPointerCfT28_uncheckedUnsafeBufferObjectPs9AnyObject__GS_xq__ : $@convention(method) <Header, Element> (@owned AnyObject, @thin ManagedBufferPointer<Header, Element>.Type) -> @owned ManagedBufferPointer<Header, Element> {
// %0                                             // users: %9, %5, %2
bb0(%0 : $AnyObject, %1 : $@thin ManagedBufferPointer<Header, Element>.Type):
  debug_value %0 : $AnyObject, scope 1559         // id: %2
  // function_ref static ManagedBufferPointer._sanityCheckValidBufferClass(AnyObject.Type, creating : Bool) -> ()
  %3 = function_ref @_TZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassfTPMPs9AnyObject_8creatingSb_T_ : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Bool, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> (), scope 1559 // user: %8
  %4 = metatype $@thin ManagedBufferPointer<Header, Element>.Type, scope 1559 // user: %8
  %5 = existential_metatype $@thick AnyObject.Type, %0 : $AnyObject, scope 1559 // user: %8
  // function_ref static ManagedBufferPointer.(_sanityCheckValidBufferClass(AnyObject.Type, creating : Bool) -> ()).(default argument 1)
  %6 = function_ref @_TIZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassFTPMPs9AnyObject_8creatingSb_T_A0_ : $@convention(thin) <τ_0_0, τ_0_1> () -> Bool, scope 1559 // user: %7
  %7 = apply %6<Header, Element>() : $@convention(thin) <τ_0_0, τ_0_1> () -> Bool, scope 1559 // user: %8
  %8 = apply %3<Header, Element>(%5, %7, %4) : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Bool, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> (), scope 1559
  %9 = open_existential_ref %0 : $AnyObject to $@opened("2BDFB292-F9C8-11E6-91E8-A8667F09828A") AnyObject, scope 1559 // user: %10
  %10 = unchecked_ref_cast %9 : $@opened("2BDFB292-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.NativeObject, scope 1559 // user: %11
  %11 = struct $ManagedBufferPointer<Header, Element> (%10 : $Builtin.NativeObject), scope 1559 // user: %12
  return %11 : $ManagedBufferPointer<Header, Element>, scope 1559 // id: %12
}

sil_scope 1560 {  parent @_TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> () }
sil_scope 1561 {  parent 1560 }
sil_scope 1562 {  parent 81 inlined_at 1561 }

// _ContiguousArrayBuffer._initStorageHeader(count : Int, capacity : Int) -> ()
sil hidden_external [fragile] @_TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) <Element> (Int, Int, @guaranteed _ContiguousArrayBuffer<Element>) -> () {
// %0                                             // users: %31, %13, %3
// %1                                             // users: %16, %14, %4
// %2                                             // users: %10, %5
bb0(%0 : $Int, %1 : $Int, %2 : $_ContiguousArrayBuffer<Element>):
  debug_value %0 : $Int, scope 1560               // id: %3
  debug_value %1 : $Int, scope 1560               // id: %4
  debug_value %2 : $_ContiguousArrayBuffer<Element>, scope 1560 // id: %5
  // function_ref _isBridgedVerbatimToObjectiveC<A> (A.Type) -> Bool
  %6 = function_ref @_TFs30_isBridgedVerbatimToObjectiveCurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1560 // user: %8
  %7 = metatype $@thick Element.Type, scope 1560  // user: %8
  %8 = apply %6<Element>(%7) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1560 // users: %21, %15, %9
  debug_value %8 : $Bool, scope 1560              // id: %9
  %10 = struct_extract %2 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1560 // user: %12
  // function_ref ManagedBufferPointer._headerPointer.getter
  %11 = function_ref @_TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0>, scope 1560 // user: %12
  %12 = apply %11<_ArrayBody, Element>(%10) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0>, scope 1560 // users: %35, %34
  debug_value %0 : $Int, scope 1560               // id: %13
  debug_value %1 : $Int, scope 1560               // id: %14
  debug_value %8 : $Bool, scope 1560              // id: %15
  %16 = struct_extract %1 : $Int, #Int._value, scope 1560 // user: %17
  %17 = builtin "s_to_u_checked_conversion_Int64"(%16 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1560 // users: %27, %18
  %18 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 1, scope 1560 // user: %19
  cond_fail %18 : $Builtin.Int1, scope 1560       // id: %19
  %20 = integer_literal $Builtin.Int64, 1, scope 1560 // users: %28, %25
  %21 = struct_extract %8 : $Bool, #Bool._value, scope 1560 // user: %22
  cond_br %21, bb2, bb1, scope 1560               // id: %22

bb1:                                              // Preds: bb0
  %23 = integer_literal $Builtin.Int64, 0, scope 1560 // user: %24
  br bb3(%23 : $Builtin.Int64), scope 1560        // id: %24

bb2:                                              // Preds: bb0
  br bb3(%20 : $Builtin.Int64), scope 1560        // id: %25

// %26                                            // user: %29
bb3(%26 : $Builtin.Int64):                        // Preds: bb2 bb1
  %27 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 0, scope 1560 // user: %28
  %28 = builtin "shl_Int64"(%27 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 1560 // user: %29
  %29 = builtin "or_Int64"(%28 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int64, scope 1560 // user: %30
  %30 = struct $UInt (%29 : $Builtin.Int64), scope 1560 // user: %31
  %31 = struct $_SwiftArrayBodyStorage (%0 : $Int, %30 : $UInt), scope 1560 // user: %32
  %32 = struct $_ArrayBody (%31 : $_SwiftArrayBodyStorage), scope 1560 // users: %37, %33
  debug_value %32 : $_ArrayBody, scope 1562       // id: %33
  debug_value %12 : $UnsafeMutablePointer<_ArrayBody>, scope 1562 // id: %34
  %35 = struct_extract %12 : $UnsafeMutablePointer<_ArrayBody>, #UnsafeMutablePointer._rawValue, scope 1562 // user: %36
  %36 = pointer_to_address %35 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1562 // user: %37
  store %32 to %36 : $*_ArrayBody, scope 1562     // id: %37
  %38 = tuple (), scope 1560                      // user: %39
  return %38 : $(), scope 1560                    // id: %39
}

sil_scope 1563 {  parent @_TFVs22_ContiguousArrayBufferg8_storageCs27_ContiguousArrayStorageBase : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> @owned _ContiguousArrayStorageBase }

// _ContiguousArrayBuffer._storage.getter
sil hidden_external [fragile] @_TFVs22_ContiguousArrayBufferg8_storageCs27_ContiguousArrayStorageBase : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> @owned _ContiguousArrayStorageBase {
// %0                                             // users: %5, %2, %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  debug_value %0 : $_ContiguousArrayBuffer<Element>, scope 1563 // id: %1
  %2 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1563 // user: %3
  %3 = struct_extract %2 : $ManagedBufferPointer<_ArrayBody, Element>, #ManagedBufferPointer._nativeBuffer, scope 1563 // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $_ContiguousArrayStorageBase, scope 1563 // user: %6
  retain_value %0 : $_ContiguousArrayBuffer<Element>, scope 1563 // id: %5
  return %4 : $_ContiguousArrayStorageBase, scope 1563 // id: %6
}

sil_scope 1564 {  parent @_TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0> }

// ManagedBufferPointer._headerPointer.getter
sil hidden_external [fragile] @_TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> UnsafeMutablePointer<Header> {
// %0                                             // users: %4, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1564 // id: %1
  %2 = builtin "onFastPath"() : $(), scope 1564
  // function_ref ManagedBufferPointer._address.getter
  %3 = function_ref @_TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer, scope 1564 // user: %4
  %4 = apply %3<Header, Element>(%0) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer, scope 1564 // users: %9, %8
  %5 = metatype $@thin ManagedBufferPointer<Header, Element>.Type, scope 1564 // user: %7
  // function_ref static ManagedBufferPointer._headerOffset.getter
  %6 = function_ref @_TZFVs20ManagedBufferPointerg13_headerOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1564 // user: %7
  %7 = apply %6<Header, Element>(%5) : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1564 // users: %11, %10
  %8 = struct_extract %4 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1564 // user: %13
  debug_value %4 : $UnsafeMutableRawPointer, scope 1564 // id: %9
  %10 = struct_extract %7 : $Int, #Int._value, scope 1564 // user: %12
  debug_value %7 : $Int, scope 1564               // id: %11
  %12 = builtin "truncOrBitCast_Int64_Word"(%10 : $Builtin.Int64) : $Builtin.Word, scope 1564 // user: %13
  %13 = index_raw_pointer %8 : $Builtin.RawPointer, %12 : $Builtin.Word, scope 1564 // user: %14
  %14 = struct $UnsafeMutablePointer<Header> (%13 : $Builtin.RawPointer), scope 1564 // user: %15
  return %14 : $UnsafeMutablePointer<Header>, scope 1564 // id: %15
}

sil_scope 1565 {  parent @_TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer }

// ManagedBufferPointer._address.getter
sil hidden_external [fragile] @_TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> UnsafeMutableRawPointer {
// %0                                             // users: %2, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1565 // id: %1
  %2 = struct_extract %0 : $ManagedBufferPointer<Header, Element>, #ManagedBufferPointer._nativeBuffer, scope 1565 // user: %3
  %3 = ref_to_raw_pointer %2 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1565 // user: %4
  %4 = struct $UnsafeMutableRawPointer (%3 : $Builtin.RawPointer), scope 1565 // user: %5
  return %4 : $UnsafeMutableRawPointer, scope 1565 // id: %5
}

sil_scope 1566 {  parent @_TFs25_isClassOrObjCExistentialurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool }

// _isClassOrObjCExistential<A> (A.Type) -> Bool
sil public_external [fragile] [always_inline] @_TFs25_isClassOrObjCExistentialurFMxSb : $@convention(thin) <T> (@thick T.Type) -> Bool {
// %0                                             // users: %11, %1
bb0(%0 : $@thick T.Type):
  debug_value %0 : $@thick T.Type, scope 1566     // id: %1
  %2 = metatype $@thick T.Type, scope 1566        // user: %3
  %3 = builtin "canBeClass"<T>(%2 : $@thick T.Type) : $Builtin.Int8, scope 1566 // users: %8, %5
  %4 = integer_literal $Builtin.Int8, 0, scope 1566 // user: %5
  %5 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %4 : $Builtin.Int8) : $Builtin.Int1, scope 1566 // user: %6
  cond_br %5, bb4, bb1, scope 1566                // id: %6

bb1:                                              // Preds: bb0
  %7 = integer_literal $Builtin.Int8, 1, scope 1566 // user: %8
  %8 = builtin "cmp_eq_Int8"(%3 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 1566 // user: %9
  cond_br %8, bb3, bb2, scope 1566                // id: %9

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %10 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1566 // user: %11
  %11 = apply %10<T>(%0) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1566 // user: %12
  br bb5(%11 : $Bool), scope 1566                 // id: %12

bb3:                                              // Preds: bb1
  %13 = integer_literal $Builtin.Int1, -1, scope 1566 // user: %14
  %14 = struct $Bool (%13 : $Builtin.Int1), scope 1566 // user: %15
  br bb5(%14 : $Bool), scope 1566                 // id: %15

bb4:                                              // Preds: bb0
  %16 = integer_literal $Builtin.Int1, 0, scope 1566 // user: %17
  %17 = struct $Bool (%16 : $Builtin.Int1), scope 1566 // user: %18
  br bb5(%17 : $Bool), scope 1566                 // id: %18

// %19                                            // user: %20
bb5(%19 : $Bool):                                 // Preds: bb4 bb3 bb2
  return %19 : $Bool, scope 1566                  // id: %20
}

sil_scope 1567 {  parent @_TFSp12deinitializefT5countSi_Sv : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer }

// UnsafeMutablePointer.deinitialize(count : Int) -> UnsafeMutableRawPointer
sil public_external [fragile] @_TFSp12deinitializefT5countSi_Sv : $@convention(method) <Pointee> (Int, UnsafeMutablePointer<Pointee>) -> UnsafeMutableRawPointer {
// %0                                             // users: %6, %2
// %1                                             // users: %5, %3
bb0(%0 : $Int, %1 : $UnsafeMutablePointer<Pointee>):
  debug_value %0 : $Int, scope 1567               // id: %2
  debug_value %1 : $UnsafeMutablePointer<Pointee>, scope 1567 // id: %3
  %4 = metatype $@thick Pointee.Type, scope 1567  // user: %8
  %5 = struct_extract %1 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 1567 // users: %9, %8
  %6 = struct_extract %0 : $Int, #Int._value, scope 1567 // user: %7
  %7 = builtin "truncOrBitCast_Int64_Word"(%6 : $Builtin.Int64) : $Builtin.Word, scope 1567 // user: %8
  %8 = builtin "destroyArray"<Pointee>(%4 : $@thick Pointee.Type, %5 : $Builtin.RawPointer, %7 : $Builtin.Word) : $(), scope 1567
  %9 = struct $UnsafeMutableRawPointer (%5 : $Builtin.RawPointer), scope 1567 // user: %10
  return %9 : $UnsafeMutableRawPointer, scope 1567 // id: %10
}

sil_scope 1568 {  parent @_TIZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassFTPMPs9AnyObject_8creatingSb_T_A0_ : $@convention(thin) <τ_0_0, τ_0_1> () -> Bool }

// static ManagedBufferPointer.(_sanityCheckValidBufferClass(AnyObject.Type, creating : Bool) -> ()).(default argument 1)
sil hidden_external [fragile] @_TIZFVs20ManagedBufferPointer28_sanityCheckValidBufferClassFTPMPs9AnyObject_8creatingSb_T_A0_ : $@convention(thin) <Header, Element> () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, 0, scope 1568 // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1), scope 1568 // user: %2
  return %1 : $Bool, scope 1568                   // id: %2
}


// _swift_isClassOrObjCExistentialType
sil @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool

sil_scope 1569 {  parent @_TTSfq4n_n_n_d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferCfTPMPs9AnyObject_xSi_GS_xq__ : $@convention(thin) (@thick AnyObject.Type, _StringBufferIVars, Int) -> @owned _HeapBuffer<_StringBufferIVars, UInt16> }
sil_scope 1570 {  parent @_TTSgq5Vs18_StringBufferIVars___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (_StringBufferIVars, Int, UnsafeMutablePointer<_StringBufferIVars>) -> () }
sil_scope 1571 {  parent 1569 }
sil_scope 1572 {  parent 1570 inlined_at 1571 }

// specialized specialized _HeapBuffer.init(AnyObject.Type, A, Int) -> _HeapBuffer<A, B>
sil shared_external [fragile] @_TTSfq4n_n_n_d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferCfTPMPs9AnyObject_xSi_GS_xq__ : $@convention(thin) (@thick AnyObject.Type, _StringBufferIVars, Int) -> @owned _HeapBuffer<_StringBufferIVars, UInt16> {
// %0                                             // users: %28, %4
// %1                                             // users: %61, %59, %3
// %2                                             // users: %11, %5
bb0(%0 : $@thick AnyObject.Type, %1 : $_StringBufferIVars, %2 : $Int):
  debug_value %1 : $_StringBufferIVars, scope 1569 // id: %3
  debug_value %0 : $@thick AnyObject.Type, scope 1569 // id: %4
  debug_value %2 : $Int, scope 1569               // id: %5
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %6 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1569 // user: %7
  %7 = apply %6() : $@convention(thin) () -> Int, scope 1569 // user: %17
  %8 = metatype $@thick UInt16.Type, scope 1569   // user: %9
  %9 = builtin "strideof_nonzero"<UInt16>(%8 : $@thick UInt16.Type) : $Builtin.Word, scope 1569 // user: %10
  %10 = builtin "zextOrBitCast_Word_Int64"(%9 : $Builtin.Word) : $Builtin.Int64, scope 1569 // user: %13
  %11 = struct_extract %2 : $Int, #Int._value, scope 1569 // user: %13
  %12 = integer_literal $Builtin.Int1, -1, scope 1569 // users: %39, %18, %13
  %13 = builtin "smul_with_overflow_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1569 // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0, scope 1569 // user: %18
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1, scope 1569 // user: %16
  cond_fail %15 : $Builtin.Int1, scope 1569       // id: %16
  %17 = struct_extract %7 : $Int, #Int._value, scope 1569 // user: %18
  %18 = builtin "sadd_with_overflow_Int64"(%17 : $Builtin.Int64, %14 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1569 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 1569 // user: %22
  %20 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 1, scope 1569 // user: %21
  cond_fail %20 : $Builtin.Int1, scope 1569       // id: %21
  %22 = struct $Int (%19 : $Builtin.Int64), scope 1569 // users: %28, %23
  debug_value %22 : $Int, scope 1569              // id: %23
  // function_ref specialized specialized static _HeapBuffer._requiredAlignMask() -> Int
  %24 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer18_requiredAlignMaskfT_Si : $@convention(thin) () -> Int, scope 1569 // user: %25
  %25 = apply %24() : $@convention(thin) () -> Int, scope 1569 // users: %28, %26
  debug_value %25 : $Int, scope 1569              // id: %26
  // function_ref swift_bufferAllocate
  %27 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1569 // user: %28
  %28 = apply %27(%0, %22, %25) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1569 // users: %30, %29
  debug_value %28 : $AnyObject, scope 1569        // id: %29
  %30 = open_existential_ref %28 : $AnyObject to $@opened("2BDFD254-F9C8-11E6-91E8-A8667F09828A") AnyObject, scope 1569 // users: %56, %31
  %31 = unchecked_ref_cast %30 : $@opened("2BDFD254-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.NativeObject, scope 1569 // user: %32
  %32 = enum $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, %31 : $Builtin.NativeObject, scope 1569 // user: %62
  %33 = metatype $@thick HeapObject.Type, scope 1569 // user: %34
  %34 = builtin "sizeof"<HeapObject>(%33 : $@thick HeapObject.Type) : $Builtin.Word, scope 1569 // user: %35
  %35 = builtin "zextOrBitCast_Word_Int64"(%34 : $Builtin.Word) : $Builtin.Int64, scope 1569 // user: %39
  %36 = metatype $@thick _StringBufferIVars.Type, scope 1569 // user: %37
  %37 = builtin "alignof"<_StringBufferIVars>(%36 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1569 // user: %38
  %38 = builtin "zextOrBitCast_Word_Int64"(%37 : $Builtin.Word) : $Builtin.Int64, scope 1569 // users: %47, %39
  %39 = builtin "uadd_with_overflow_Int64"(%35 : $Builtin.Int64, %38 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1569 // users: %41, %40
  %40 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 0, scope 1569 // user: %45
  %41 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 1, scope 1569 // user: %42
  cond_fail %41 : $Builtin.Int1, scope 1569       // id: %42
  %43 = integer_literal $Builtin.Int64, 1, scope 1569 // users: %47, %45
  %44 = integer_literal $Builtin.Int1, 0, scope 1569 // users: %47, %45
  %45 = builtin "usub_with_overflow_Int64"(%40 : $Builtin.Int64, %43 : $Builtin.Int64, %44 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1569 // user: %46
  %46 = tuple_extract %45 : $(Builtin.Int64, Builtin.Int1), 0, scope 1569 // user: %51
  %47 = builtin "usub_with_overflow_Int64"(%38 : $Builtin.Int64, %43 : $Builtin.Int64, %44 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1569 // user: %48
  %48 = tuple_extract %47 : $(Builtin.Int64, Builtin.Int1), 0, scope 1569 // user: %50
  %49 = integer_literal $Builtin.Int64, -1, scope 1569 // user: %50
  %50 = builtin "xor_Int64"(%48 : $Builtin.Int64, %49 : $Builtin.Int64) : $Builtin.Int64, scope 1569 // user: %51
  %51 = builtin "and_Int64"(%46 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int64, scope 1569 // user: %52
  %52 = builtin "u_to_s_checked_conversion_Int64"(%51 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1569 // users: %54, %53
  %53 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 0, scope 1569 // user: %57
  %54 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 1, scope 1569 // user: %55
  cond_fail %54 : $Builtin.Int1, scope 1569       // id: %55
  %56 = ref_to_raw_pointer %30 : $@opened("2BDFD254-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.RawPointer, scope 1569 // user: %58
  %57 = builtin "truncOrBitCast_Int64_Word"(%53 : $Builtin.Int64) : $Builtin.Word, scope 1569 // user: %58
  %58 = index_raw_pointer %56 : $Builtin.RawPointer, %57 : $Builtin.Word, scope 1569 // user: %60
  debug_value %1 : $_StringBufferIVars, scope 1572 // id: %59
  %60 = pointer_to_address %58 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 1572 // user: %61
  store %1 to %60 : $*_StringBufferIVars, scope 1572 // id: %61
  %62 = struct $_HeapBuffer<_StringBufferIVars, UInt16> (%32 : $Optional<Builtin.NativeObject>), scope 1569 // user: %63
  return %62 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1569 // id: %63
}

sil_scope 1573 {  parent @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer18_requiredAlignMaskfT_Si : $@convention(thin) () -> Int }

// specialized specialized static _HeapBuffer._requiredAlignMask() -> Int
sil shared_external [fragile] @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer18_requiredAlignMaskfT_Si : $@convention(thin) () -> Int {
bb0:
  %0 = metatype $@thick HeapObject.Type, scope 1573 // user: %1
  %1 = builtin "alignof"<HeapObject>(%0 : $@thick HeapObject.Type) : $Builtin.Word, scope 1573 // user: %2
  %2 = builtin "zextOrBitCast_Word_Int64"(%1 : $Builtin.Word) : $Builtin.Int64, scope 1573 // user: %5
  %3 = integer_literal $Builtin.Int64, 1, scope 1573 // users: %19, %12, %5
  %4 = integer_literal $Builtin.Int1, 0, scope 1573 // users: %19, %12, %5
  %5 = builtin "ssub_with_overflow_Int64"(%2 : $Builtin.Int64, %3 : $Builtin.Int64, %4 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1573 // user: %6
  %6 = tuple_extract %5 : $(Builtin.Int64, Builtin.Int1), 0, scope 1573 // users: %25, %23, %7
  %7 = struct $Int (%6 : $Builtin.Int64), scope 1573 // users: %27, %8
  debug_value %7 : $Int, scope 1573               // id: %8
  %9 = metatype $@thick _StringBufferIVars.Type, scope 1573 // user: %10
  %10 = builtin "alignof"<_StringBufferIVars>(%9 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1573 // user: %11
  %11 = builtin "zextOrBitCast_Word_Int64"(%10 : $Builtin.Word) : $Builtin.Int64, scope 1573 // user: %12
  %12 = builtin "ssub_with_overflow_Int64"(%11 : $Builtin.Int64, %3 : $Builtin.Int64, %4 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1573 // user: %13
  %13 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 0, scope 1573 // users: %29, %23, %14
  %14 = struct $Int (%13 : $Builtin.Int64), scope 1573 // users: %31, %15
  debug_value %14 : $Int, scope 1573              // id: %15
  %16 = metatype $@thick UInt16.Type, scope 1573  // user: %17
  %17 = builtin "alignof"<UInt16>(%16 : $@thick UInt16.Type) : $Builtin.Word, scope 1573 // user: %18
  %18 = builtin "zextOrBitCast_Word_Int64"(%17 : $Builtin.Word) : $Builtin.Int64, scope 1573 // user: %19
  %19 = builtin "ssub_with_overflow_Int64"(%18 : $Builtin.Int64, %3 : $Builtin.Int64, %4 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1573 // user: %20
  %20 = tuple_extract %19 : $(Builtin.Int64, Builtin.Int1), 0, scope 1573 // users: %29, %25, %21
  %21 = struct $Int (%20 : $Builtin.Int64), scope 1573 // users: %32, %28, %22
  debug_value %21 : $Int, scope 1573              // id: %22
  %23 = builtin "cmp_slt_Int64"(%6 : $Builtin.Int64, %13 : $Builtin.Int64) : $Builtin.Int1, scope 1573 // user: %24
  cond_br %23, bb4, bb1, scope 1573               // id: %24

bb1:                                              // Preds: bb0
  %25 = builtin "cmp_slt_Int64"(%6 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1, scope 1573 // user: %26
  cond_br %25, bb3, bb2, scope 1573               // id: %26

bb2:                                              // Preds: bb1
  br bb7(%7 : $Int), scope 1573                   // id: %27

bb3:                                              // Preds: bb1
  br bb7(%21 : $Int), scope 1573                  // id: %28

bb4:                                              // Preds: bb0
  %29 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1, scope 1573 // user: %30
  cond_br %29, bb6, bb5, scope 1573               // id: %30

bb5:                                              // Preds: bb4
  br bb7(%14 : $Int), scope 1573                  // id: %31

bb6:                                              // Preds: bb4
  br bb7(%21 : $Int), scope 1573                  // id: %32

// %33                                            // user: %34
bb7(%33 : $Int):                                  // Preds: bb6 bb5 bb3 bb2
  return %33 : $Int, scope 1573                   // id: %34
}


// _swift_stdlib_malloc_size
sil [readnone] [clang _swift_stdlib_malloc_size] @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int

sil_scope 1574 {  parent @_TFVs13_StringBufferg9usedCountSi : $@convention(method) (@guaranteed _StringBuffer) -> Int }
sil_scope 1575 {  parent 1574 }
sil_scope 1576 {  parent 1511 inlined_at 1575 }

// _StringBuffer.usedCount.getter
sil hidden_external [fragile] @_TFVs13_StringBufferg9usedCountSi : $@convention(method) (@guaranteed _StringBuffer) -> Int {
// %0                                             // users: %53, %44, %3, %2, %1
bb0(%0 : $_StringBuffer):
  debug_value %0 : $_StringBuffer, scope 1574     // id: %1
  debug_value %0 : $_StringBuffer, scope 1574     // id: %2
  %3 = struct_extract %0 : $_StringBuffer, #_StringBuffer._storage, scope 1574 // users: %31, %30, %29, %5, %4, %49, %48, %45
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1576 // id: %4
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1576 // id: %5
  %6 = metatype $@thick HeapObject.Type, scope 1576 // user: %7
  %7 = builtin "sizeof"<HeapObject>(%6 : $@thick HeapObject.Type) : $Builtin.Word, scope 1576 // user: %8
  %8 = builtin "zextOrBitCast_Word_Int64"(%7 : $Builtin.Word) : $Builtin.Int64, scope 1576 // user: %13
  %9 = metatype $@thick _StringBufferIVars.Type, scope 1576 // user: %10
  %10 = builtin "alignof"<_StringBufferIVars>(%9 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1576 // user: %11
  %11 = builtin "zextOrBitCast_Word_Int64"(%10 : $Builtin.Word) : $Builtin.Int64, scope 1576 // users: %21, %13
  %12 = integer_literal $Builtin.Int1, -1, scope 1576 // users: %60, %73, %33, %13
  %13 = builtin "uadd_with_overflow_Int64"(%8 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1576 // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0, scope 1576 // user: %19
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1, scope 1576 // user: %16
  cond_fail %15 : $Builtin.Int1, scope 1576       // id: %16
  %17 = integer_literal $Builtin.Int64, 1, scope 1576 // users: %57, %21, %19
  %18 = integer_literal $Builtin.Int1, 0, scope 1576 // users: %21, %19
  %19 = builtin "usub_with_overflow_Int64"(%14 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1576 // user: %20
  %20 = tuple_extract %19 : $(Builtin.Int64, Builtin.Int1), 0, scope 1576 // user: %25
  %21 = builtin "usub_with_overflow_Int64"(%11 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1576 // user: %22
  %22 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 0, scope 1576 // user: %24
  %23 = integer_literal $Builtin.Int64, -1, scope 1576 // user: %24
  %24 = builtin "xor_Int64"(%22 : $Builtin.Int64, %23 : $Builtin.Int64) : $Builtin.Int64, scope 1576 // user: %25
  %25 = builtin "and_Int64"(%20 : $Builtin.Int64, %24 : $Builtin.Int64) : $Builtin.Int64, scope 1576 // user: %26
  %26 = builtin "u_to_s_checked_conversion_Int64"(%25 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1576 // users: %35, %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 1, scope 1576 // user: %28
  cond_fail %27 : $Builtin.Int1, scope 1576       // id: %28
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1576 // id: %29
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1576 // id: %30
  %31 = struct_extract %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1576 // users: %32, %36
  switch_enum %31 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, scope 1576 // id: %32

bb1:                                              // Preds: bb0
  cond_fail %12 : $Builtin.Int1, scope 1576       // id: %33
  unreachable, scope 1576                         // id: %34

bb2:                                              // Preds: bb0
  %35 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 1576 // user: %38
  %36 = unchecked_enum_data %31 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1576 // user: %37
  %37 = ref_to_raw_pointer %36 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1576 // users: %64, %39
  %38 = builtin "truncOrBitCast_Int64_Word"(%35 : $Builtin.Int64) : $Builtin.Word, scope 1576 // user: %39
  %39 = index_raw_pointer %37 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 1576 // user: %40
  %40 = pointer_to_address %39 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 1574 // users: %54, %41
  %41 = struct_element_addr %40 : $*_StringBufferIVars, #_StringBufferIVars.usedEnd, scope 1574 // user: %42
  %42 = load %41 : $*Optional<UnsafeMutableRawPointer>, scope 1574 // users: %50, %43
  switch_enum %42 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb4, case #Optional.some!enumelt.1: bb3, scope 1574 // id: %43

bb3:                                              // Preds: bb2
  debug_value %0 : $_StringBuffer, scope 1574     // id: %44
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1574 // id: %45
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %46 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1574 // user: %47
  %47 = apply %46() : $@convention(thin) () -> Int, scope 1574 // users: %62, %51
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1574 // id: %48
  debug_value %3 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1574 // id: %49
  %50 = unchecked_enum_data %42 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1574 // users: %65, %52
  debug_value %47 : $Int, scope 1574              // id: %51
  debug_value %50 : $UnsafeMutableRawPointer, scope 1574 // id: %52
  debug_value %0 : $_StringBuffer, scope 1574     // id: %53
  %54 = struct_element_addr %40 : $*_StringBufferIVars, #_StringBufferIVars.capacityAndElementShift, scope 1574 // user: %55
  %55 = struct_element_addr %54 : $*Int, #Int._value, scope 1574 // user: %56
  %56 = load %55 : $*Builtin.Int64, scope 1574    // user: %57
  %57 = builtin "and_Int64"(%56 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 1574 // users: %70, %59
  %58 = integer_literal $Builtin.Int64, 64, scope 1574 // user: %59
  %59 = builtin "cmp_ult_Int64"(%57 : $Builtin.Int64, %58 : $Builtin.Int64) : $Builtin.Int1, scope 1574 // user: %60
  %60 = builtin "xor_Int1"(%59 : $Builtin.Int1, %12 : $Builtin.Int1) : $Builtin.Int1, scope 1574 // user: %61
  cond_fail %60 : $Builtin.Int1, scope 1574       // id: %61
  %62 = struct_extract %47 : $Int, #Int._value, scope 1574 // user: %63
  %63 = builtin "truncOrBitCast_Int64_Word"(%62 : $Builtin.Int64) : $Builtin.Word, scope 1574 // user: %64
  %64 = index_raw_pointer %37 : $Builtin.RawPointer, %63 : $Builtin.Word, scope 1574 // user: %67
  %65 = struct_extract %50 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1574 // user: %66
  %66 = builtin "ptrtoint_Word"(%65 : $Builtin.RawPointer) : $Builtin.Word, scope 1574 // user: %68
  %67 = builtin "ptrtoint_Word"(%64 : $Builtin.RawPointer) : $Builtin.Word, scope 1574 // user: %68
  %68 = builtin "sub_Word"(%66 : $Builtin.Word, %67 : $Builtin.Word) : $Builtin.Word, scope 1574 // user: %69
  %69 = builtin "zextOrBitCast_Word_Int64"(%68 : $Builtin.Word) : $Builtin.Int64, scope 1574 // user: %70
  %70 = builtin "ashr_Int64"(%69 : $Builtin.Int64, %57 : $Builtin.Int64) : $Builtin.Int64, scope 1574 // user: %71
  %71 = struct $Int (%70 : $Builtin.Int64), scope 1574 // user: %72
  return %71 : $Int, scope 1574                   // id: %72

bb4:                                              // Preds: bb2
  cond_fail %12 : $Builtin.Int1, scope 1574       // id: %73
  unreachable, scope 1574                         // id: %74
}

sil_scope 1577 {  parent @_TTSfq4n_n_d___TTSgq5Vs6UInt16___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt16>>, Int) -> UnsafeBufferPointer<UInt16> }

// specialized specialized UnsafeBufferPointer.init(start : UnsafePointer<A>?, count : Int) -> UnsafeBufferPointer<A>
sil shared_external [fragile] @_TTSfq4n_n_d___TTSgq5Vs6UInt16___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt16>>, Int) -> UnsafeBufferPointer<UInt16> {
// %0                                             // users: %41, %25, %23, %22, %21, %17, %16, %15, %14, %13, %12, %2
// %1                                             // users: %27, %5, %3
bb0(%0 : $Optional<UnsafePointer<UInt16>>, %1 : $Int):
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %2
  debug_value %1 : $Int, scope 1577               // id: %3
  %4 = integer_literal $Builtin.Int64, 0, scope 1577 // users: %10, %6
  %5 = struct_extract %1 : $Int, #Int._value, scope 1577 // users: %33, %10, %6
  %6 = builtin "cmp_sge_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 1577 // user: %8
  %7 = integer_literal $Builtin.Int1, -1, scope 1577 // users: %19, %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1, scope 1577 // user: %9
  cond_fail %8 : $Builtin.Int1, scope 1577        // id: %9
  %10 = builtin "cmp_eq_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 1577 // user: %11
  cond_br %10, bb4, bb1, scope 1577               // id: %11

bb1:                                              // Preds: bb0
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %12
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %13
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %14
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %15
  switch_enum %0 : $Optional<UnsafePointer<UInt16>>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb2, scope 1577 // id: %16

bb2:                                              // Preds: bb1
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %17
  br bb7, scope 1577                              // id: %18

bb3:                                              // Preds: bb1
  cond_fail %7 : $Builtin.Int1, scope 1577        // id: %19
  unreachable, scope 1577                         // id: %20

bb4:                                              // Preds: bb0
  debug_value %0 : $Optional<UnsafePointer<UInt16>>, scope 1577 // id: %21
  switch_enum %0 : $Optional<UnsafePointer<UInt16>>, case #Optional.some!enumelt.1: bb6, case #Optional.none!enumelt: bb5, scope 1577 // id: %22

bb5:                                              // Preds: bb4
  br bb8(%0 : $Optional<UnsafePointer<UInt16>>), scope 1577 // id: %23

bb6:                                              // Preds: bb4
  br bb7, scope 1577                              // id: %24

bb7:                                              // Preds: bb6 bb2
  %25 = unchecked_enum_data %0 : $Optional<UnsafePointer<UInt16>>, #Optional.some!enumelt.1, scope 1577 // users: %28, %26
  debug_value %25 : $UnsafePointer<UInt16>, scope 1577 // id: %26
  debug_value %1 : $Int, scope 1577               // id: %27
  %28 = struct_extract %25 : $UnsafePointer<UInt16>, #UnsafePointer._rawValue, scope 1577 // user: %36
  %29 = metatype $@thick UInt16.Type, scope 1577  // user: %30
  %30 = builtin "strideof_nonzero"<UInt16>(%29 : $@thick UInt16.Type) : $Builtin.Word, scope 1577 // user: %31
  %31 = builtin "zextOrBitCast_Word_Int64"(%30 : $Builtin.Word) : $Builtin.Int64, scope 1577 // user: %33
  %32 = integer_literal $Builtin.Int1, 0, scope 1577 // user: %33
  %33 = builtin "smul_with_overflow_Int64"(%5 : $Builtin.Int64, %31 : $Builtin.Int64, %32 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1577 // user: %34
  %34 = tuple_extract %33 : $(Builtin.Int64, Builtin.Int1), 0, scope 1577 // user: %35
  %35 = builtin "truncOrBitCast_Int64_Word"(%34 : $Builtin.Int64) : $Builtin.Word, scope 1577 // user: %36
  %36 = index_raw_pointer %28 : $Builtin.RawPointer, %35 : $Builtin.Word, scope 1577 // user: %37
  %37 = struct $UnsafePointer<UInt16> (%36 : $Builtin.RawPointer), scope 1577 // user: %38
  %38 = enum $Optional<UnsafePointer<UInt16>>, #Optional.some!enumelt.1, %37 : $UnsafePointer<UInt16>, scope 1577 // user: %39
  br bb8(%38 : $Optional<UnsafePointer<UInt16>>), scope 1577 // id: %39

// %40                                            // user: %41
bb8(%40 : $Optional<UnsafePointer<UInt16>>):      // Preds: bb7 bb5
  %41 = struct $UnsafeBufferPointer<UInt16> (%0 : $Optional<UnsafePointer<UInt16>>, %40 : $Optional<UnsafePointer<UInt16>>), scope 1577 // user: %42
  return %41 : $UnsafeBufferPointer<UInt16>, scope 1577 // id: %42
}

sil_scope 1578 {  parent @_TFFVs11_StringCore22isRepresentableAsASCIIFT_SbU_FVs6UInt16Sb : $@convention(thin) (UInt16) -> Bool }

// _StringCore.(isRepresentableAsASCII() -> Bool).(closure #1)
sil shared_external [fragile] @_TFFVs11_StringCore22isRepresentableAsASCIIFT_SbU_FVs6UInt16Sb : $@convention(thin) (UInt16) -> Bool {
// %0                                             // users: %3, %1
bb0(%0 : $UInt16):
  debug_value %0 : $UInt16, scope 1578            // id: %1
  %2 = integer_literal $Builtin.Int16, 127, scope 1578 // user: %4
  %3 = struct_extract %0 : $UInt16, #UInt16._value, scope 1578 // user: %4
  %4 = builtin "cmp_ugt_Int16"(%3 : $Builtin.Int16, %2 : $Builtin.Int16) : $Builtin.Int1, scope 1578 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1), scope 1578 // user: %6
  return %5 : $Bool, scope 1578                   // id: %6
}

sil_scope 1579 {  parent @_TTSfq4n_g___TTSfq1cl53_TTRXFo_dVs6UInt16_dSbzoPs5Error__XFo_iS__dSbzoPS0___XFo_dVs6UInt16_dSbzoPs5Error___n___TTSgq5GSRVs6UInt16_GSRS__s8Sequences___TFEsPs8Sequence8containsfzT5whereFzWx8Iterator7Element_Sb_Sb : $@convention(thin) (@in_guaranteed UnsafeBufferPointer<UInt16>, @guaranteed @callee_owned (UInt16) -> (Bool, @error Error)) -> (Bool, @error Error) }
sil_scope 1580 {  parent @_TTSgq5GSRVs6UInt16_GSRS__s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt16>>) -> Optional<UInt16> }
sil_scope 1581 {  parent 1579 }
sil_scope 1582 {  parent 1580 inlined_at 1581 }
sil_scope 1583 {  parent @_TTSfq4n_s___TTSgq5Vs6UInt16___TFSRg9subscriptFSix : $@convention(thin) (Int, Optional<UnsafePointer<UInt16>>, Optional<UnsafePointer<UInt16>>) -> UInt16 }
sil_scope 1584 {  parent 1580 }
sil_scope 1585 {  parent 1583 inlined_at 1584 }
sil_scope 1586 {  parent 1585 inlined_at 1581 }

// specialized specialized specialized Sequence.contains(where : (A.Iterator.Element) throws -> Bool) throws -> Bool
sil shared_external [fragile] @_TTSfq4n_g___TTSfq1cl53_TTRXFo_dVs6UInt16_dSbzoPs5Error__XFo_iS__dSbzoPS0___XFo_dVs6UInt16_dSbzoPs5Error___n___TTSgq5GSRVs6UInt16_GSRS__s8Sequences___TFEsPs8Sequence8containsfzT5whereFzWx8Iterator7Element_Sb_Sb : $@convention(thin) (@in_guaranteed UnsafeBufferPointer<UInt16>, @guaranteed @callee_owned (UInt16) -> (Bool, @error Error)) -> (Bool, @error Error) {
// %0                                             // users: %5, %3, %2
// %1                                             // users: %51, %52
bb0(%0 : $*UnsafeBufferPointer<UInt16>, %1 : $@callee_owned (UInt16) -> (Bool, @error Error)):
  debug_value_addr %0 : $*UnsafeBufferPointer<UInt16>, scope 1579 // id: %2
  %3 = struct_element_addr %0 : $*UnsafeBufferPointer<UInt16>, #UnsafeBufferPointer._position, scope 1579 // user: %4
  %4 = load %3 : $*Optional<UnsafePointer<UInt16>>, scope 1579 // users: %7, %39
  %5 = struct_element_addr %0 : $*UnsafeBufferPointer<UInt16>, #UnsafeBufferPointer._end, scope 1579 // user: %6
  %6 = load %5 : $*Optional<UnsafePointer<UInt16>>, scope 1579 // users: %10, %15
  switch_enum %4 : $Optional<UnsafePointer<UInt16>>, case #Optional.some!enumelt.1: bb1, case #Optional.none!enumelt: bb9, scope 1582 // id: %7

// %8                                             // users: %18, %9
bb1(%8 : $UnsafePointer<UInt16>):                 // Preds: bb0
  debug_value %8 : $UnsafePointer<UInt16>, scope 1582 // id: %9
  switch_enum %6 : $Optional<UnsafePointer<UInt16>>, case #Optional.none!enumelt: bb2, case #Optional.some!enumelt.1: bb3, scope 1582 // id: %10

bb2:                                              // Preds: bb1
  %11 = integer_literal $Builtin.Int1, -1, scope 1582 // user: %12
  cond_fail %11 : $Builtin.Int1, scope 1582       // id: %12
  unreachable, scope 1582                         // id: %13

bb3:                                              // Preds: bb1
  %14 = integer_literal $Builtin.Int64, 0, scope 1579 // users: %25, %36
  %15 = unchecked_enum_data %6 : $Optional<UnsafePointer<UInt16>>, #Optional.some!enumelt.1, scope 1582 // user: %16
  %16 = struct_extract %15 : $UnsafePointer<UInt16>, #UnsafePointer._rawValue, scope 1582 // user: %17
  %17 = builtin "ptrtoint_Word"(%16 : $Builtin.RawPointer) : $Builtin.Word, scope 1582 // users: %60, %20
  %18 = struct_extract %8 : $UnsafePointer<UInt16>, #UnsafePointer._rawValue, scope 1582 // user: %19
  %19 = builtin "ptrtoint_Word"(%18 : $Builtin.RawPointer) : $Builtin.Word, scope 1582 // user: %20
  %20 = builtin "sub_Word"(%17 : $Builtin.Word, %19 : $Builtin.Word) : $Builtin.Word, scope 1582 // user: %21
  %21 = builtin "zextOrBitCast_Word_Int64"(%20 : $Builtin.Word) : $Builtin.Int64, scope 1582 // users: %35, %28
  %22 = metatype $@thick UInt16.Type, scope 1582  // user: %23
  %23 = builtin "strideof_nonzero"<UInt16>(%22 : $@thick UInt16.Type) : $Builtin.Word, scope 1582 // user: %24
  %24 = builtin "zextOrBitCast_Word_Int64"(%23 : $Builtin.Word) : $Builtin.Int64, scope 1582 // users: %66, %69, %35, %32, %25
  %25 = builtin "cmp_eq_Int64"(%24 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 1582 // user: %26
  cond_fail %25 : $Builtin.Int1, scope 1582       // id: %26
  %27 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1582 // users: %62, %28
  %28 = builtin "cmp_eq_Int64"(%21 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 1582 // user: %29
  cond_br %28, bb5, bb4, scope 1582               // id: %29

bb4:                                              // Preds: bb3
  br bb6, scope 1579                              // id: %30

bb5:                                              // Preds: bb3
  %31 = integer_literal $Builtin.Int64, -1, scope 1582 // user: %32
  %32 = builtin "cmp_eq_Int64"(%24 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int1, scope 1582 // user: %33
  cond_fail %32 : $Builtin.Int1, scope 1582       // id: %33
  br bb6, scope 1582                              // id: %34

bb6:                                              // Preds: bb4 bb5
  %35 = builtin "sdiv_Int64"(%21 : $Builtin.Int64, %24 : $Builtin.Int64) : $Builtin.Int64, scope 1582 // user: %36
  %36 = builtin "cmp_eq_Int64"(%14 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1, scope 1582 // user: %37
  cond_br %36, bb7, bb8, scope 1582               // id: %37

bb7:                                              // Preds: bb6
  br bb19, scope 1579                             // id: %38

bb8:                                              // Preds: bb6
  %39 = unchecked_enum_data %4 : $Optional<UnsafePointer<UInt16>>, #Optional.some!enumelt.1, scope 1586 // users: %58, %40
  %40 = struct_extract %39 : $UnsafePointer<UInt16>, #UnsafePointer._rawValue, scope 1586 // users: %59, %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*UInt16, scope 1586 // users: %74, %42
  %42 = struct_element_addr %41 : $*UInt16, #UInt16._value, scope 1586 // user: %43
  %43 = load %42 : $*Builtin.Int16, scope 1586    // user: %46
  %44 = integer_literal $Builtin.Int64, 1, scope 1582 // users: %77, %46
  %45 = integer_literal $Builtin.Int1, -1, scope 1579 // users: %84, %77
  br bb10(%43 : $Builtin.Int16, %44 : $Builtin.Int64), scope 1579 // id: %46

bb9:                                              // Preds: bb0
  br bb19, scope 1579                             // id: %47

// %48                                            // user: %50
// %49                                            // users: %70, %73, %77
bb10(%48 : $Builtin.Int16, %49 : $Builtin.Int64): // Preds: bb8 bb18
  %50 = struct $UInt16 (%48 : $Builtin.Int16), scope 1586 // user: %52
  strong_retain %1 : $@callee_owned (UInt16) -> (Bool, @error Error), scope 1579 // id: %51
  try_apply %1(%50) : $@callee_owned (UInt16) -> (Bool, @error Error), normal bb12, error bb11, scope 1579 // id: %52

// %53                                            // user: %54
bb11(%53 : $Error):                               // Preds: bb10
  throw %53 : $Error, scope 1579                  // id: %54

// %55                                            // user: %56
bb12(%55 : $Bool):                                // Preds: bb10
  %56 = struct_extract %55 : $Bool, #Bool._value, scope 1579 // user: %57
  cond_br %56, bb20, bb13, scope 1579             // id: %57

bb13:                                             // Preds: bb12
  debug_value %39 : $UnsafePointer<UInt16>, scope 1579 // id: %58
  %59 = builtin "ptrtoint_Word"(%40 : $Builtin.RawPointer) : $Builtin.Word, scope 1579 // user: %60
  %60 = builtin "sub_Word"(%17 : $Builtin.Word, %59 : $Builtin.Word) : $Builtin.Word, scope 1579 // user: %61
  %61 = builtin "zextOrBitCast_Word_Int64"(%60 : $Builtin.Word) : $Builtin.Int64, scope 1579 // users: %69, %62
  %62 = builtin "cmp_eq_Int64"(%61 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1, scope 1579 // user: %63
  cond_br %62, bb15, bb14, scope 1579             // id: %63

bb14:                                             // Preds: bb13
  br bb16, scope 1579                             // id: %64

bb15:                                             // Preds: bb13
  %65 = integer_literal $Builtin.Int64, -1, scope 1579 // user: %66
  %66 = builtin "cmp_eq_Int64"(%24 : $Builtin.Int64, %65 : $Builtin.Int64) : $Builtin.Int1, scope 1579 // user: %67
  cond_fail %66 : $Builtin.Int1, scope 1579       // id: %67
  br bb16, scope 1579                             // id: %68

bb16:                                             // Preds: bb14 bb15
  %69 = builtin "sdiv_Int64"(%61 : $Builtin.Int64, %24 : $Builtin.Int64) : $Builtin.Int64, scope 1579 // user: %70
  %70 = builtin "cmp_eq_Int64"(%49 : $Builtin.Int64, %69 : $Builtin.Int64) : $Builtin.Int1, scope 1579 // user: %71
  cond_br %70, bb17, bb18, scope 1579             // id: %71

bb17:                                             // Preds: bb16
  br bb19, scope 1579                             // id: %72

bb18:                                             // Preds: bb16
  %73 = builtin "truncOrBitCast_Int64_Word"(%49 : $Builtin.Int64) : $Builtin.Word, scope 1579 // user: %74
  %74 = index_addr %41 : $*UInt16, %73 : $Builtin.Word, scope 1579 // user: %75
  %75 = struct_element_addr %74 : $*UInt16, #UInt16._value, scope 1579 // user: %76
  %76 = load %75 : $*Builtin.Int16, scope 1579    // user: %81
  %77 = builtin "sadd_with_overflow_Int64"(%49 : $Builtin.Int64, %44 : $Builtin.Int64, %45 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1579 // users: %79, %78
  %78 = tuple_extract %77 : $(Builtin.Int64, Builtin.Int1), 0, scope 1579 // user: %81
  %79 = tuple_extract %77 : $(Builtin.Int64, Builtin.Int1), 1, scope 1579 // user: %80
  cond_fail %79 : $Builtin.Int1, scope 1579       // id: %80
  br bb10(%76 : $Builtin.Int16, %78 : $Builtin.Int64), scope 1579 // id: %81

bb19:                                             // Preds: bb17 bb7 bb9
  %82 = integer_literal $Builtin.Int1, 0, scope 1579 // user: %83
  br bb21(%82 : $Builtin.Int1), scope 1579        // id: %83

bb20:                                             // Preds: bb12
  br bb21(%45 : $Builtin.Int1), scope 1579        // id: %84

// %85                                            // user: %86
bb21(%85 : $Builtin.Int1):                        // Preds: bb20 bb19
  %86 = struct $Bool (%85 : $Builtin.Int1), scope 1579 // user: %87
  return %86 : $Bool, scope 1579                  // id: %87
}

sil_scope 1587 {  parent @_TFVs11_StringCore14_claimCapacityfTSi15minElementWidthSi_TSiGSqSv__ : $@convention(method) (Int, Int, @inout _StringCore) -> (Int, Optional<UnsafeMutableRawPointer>) }
sil_scope 1588 {  parent @_TTSfq4n_g__TTSfq4g___TFFVs11_StringCoreg12nativeBufferGSqVs13_StringBuffer_U_FPs9AnyObject_S0_ : $@convention(thin) (@guaranteed AnyObject) -> _StringBuffer }
sil_scope 1589 {  parent 1587 }
sil_scope 1590 {  parent 1588 inlined_at 1589 }
sil_scope 1591 {  parent 1587 }
sil_scope 1592 {  parent 1588 inlined_at 1591 }
sil_scope 1593 {  parent 1587 }
sil_scope 1594 {  parent 1517 inlined_at 1593 }
sil_scope 1595 {  parent 1587 }
sil_scope 1596 {  parent 1517 inlined_at 1595 }
sil_scope 1597 {  parent 1587 }
sil_scope 1598 {  parent 1511 inlined_at 1597 }
sil_scope 1599 {  parent 1587 }
sil_scope 1600 {  parent 1503 inlined_at 1599 }

// _StringCore._claimCapacity(Int, minElementWidth : Int) -> (Int, UnsafeMutableRawPointer?)
sil hidden_external [fragile] @_TFVs11_StringCore14_claimCapacityfTSi15minElementWidthSi_TSiGSqSv__ : $@convention(method) (Int, Int, @inout _StringCore) -> (Int, Optional<UnsafeMutableRawPointer>) {
// %0                                             // users: %217, %172, %129, %78, %5
// %1                                             // users: %36, %6
// %2                                             // users: %171, %51, %10, %7, %3
bb0(%0 : $Int, %1 : $Int, %2 : $*_StringCore):
  debug_value_addr %2 : $*_StringCore, scope 1587 // id: %3
  %4 = alloc_stack $Optional<Builtin.NativeObject>, scope 1587 // users: %221, %187, %184, %149, %50
  debug_value %0 : $Int, scope 1587               // id: %5
  debug_value %1 : $Int, scope 1587               // id: %6
  %7 = struct_element_addr %2 : $*_StringCore, #_StringCore._countAndFlags, scope 1587 // users: %182, %8
  %8 = struct_element_addr %7 : $*UInt, #UInt._value, scope 1587 // users: %173, %9
  %9 = load %8 : $*Builtin.Int64, scope 1587      // users: %68, %32, %13
  %10 = struct_element_addr %2 : $*_StringCore, #_StringCore._owner, scope 1587 // user: %11
  %11 = load %10 : $*Optional<AnyObject>, scope 1587 // users: %41, %21, %19, %18
  %12 = integer_literal $Builtin.Int64, 1, scope 1587 // users: %96, %98, %117, %34, %13
  %13 = builtin "shl_Int64"(%9 : $Builtin.Int64, %12 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %15
  %14 = integer_literal $Builtin.Int64, 0, scope 1587 // users: %62, %53, %15
  %15 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 1587 // user: %16
  cond_br %15, bb1, bb2, scope 1587               // id: %16

bb1:                                              // Preds: bb0
  br bb24, scope 1587                             // id: %17

bb2:                                              // Preds: bb0
  debug_value %11 : $Optional<AnyObject>, scope 1587 // id: %18
  switch_enum %11 : $Optional<AnyObject>, case #Optional.some!enumelt.1: bb4, case #Optional.none!enumelt: bb3, scope 1587 // id: %19

bb3:                                              // Preds: bb2
  br bb24, scope 1587                             // id: %20

bb4:                                              // Preds: bb2
  %21 = unchecked_enum_data %11 : $Optional<AnyObject>, #Optional.some!enumelt.1, scope 1587 // users: %42, %44, %22
  debug_value %21 : $AnyObject, scope 1590        // id: %22
  %23 = metatype $@thick AnyObject.Protocol, scope 1590 // user: %24
  %24 = builtin "sizeof"<AnyObject>(%23 : $@thick AnyObject.Protocol) : $Builtin.Word, scope 1590 // user: %27
  %25 = metatype $@thick _StringBuffer.Type, scope 1590 // user: %26
  %26 = builtin "sizeof"<_StringBuffer>(%25 : $@thick _StringBuffer.Type) : $Builtin.Word, scope 1590 // user: %27
  %27 = builtin "cmp_eq_Word"(%24 : $Builtin.Word, %26 : $Builtin.Word) : $Builtin.Int1, scope 1590 // user: %29
  %28 = integer_literal $Builtin.Int1, -1, scope 1590 // users: %92, %214, %60, %56, %38, %119, %130, %150, %201, %29
  %29 = builtin "xor_Int1"(%27 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, scope 1590 // user: %30
  cond_fail %29 : $Builtin.Int1, scope 1590       // id: %30
  %31 = integer_literal $Builtin.Int64, 63, scope 1587 // user: %32
  %32 = builtin "lshr_Int64"(%9 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // users: %59, %62, %69, %34
  %33 = integer_literal $Builtin.Int1, 0, scope 1587 // users: %96, %98, %138, %34
  %34 = builtin "sadd_with_overflow_Int64"(%32 : $Builtin.Int64, %12 : $Builtin.Int64, %33 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1587 // user: %35
  %35 = tuple_extract %34 : $(Builtin.Int64, Builtin.Int1), 0, scope 1587 // user: %37
  %36 = struct_extract %1 : $Int, #Int._value, scope 1587 // user: %37
  %37 = builtin "cmp_sge_Int64"(%35 : $Builtin.Int64, %36 : $Builtin.Int64) : $Builtin.Int1, scope 1587 // user: %38
  %38 = builtin "int_expect_Int1"(%37 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, scope 1587 // user: %39
  cond_br %38, bb6, bb5, scope 1587               // id: %39

bb5:                                              // Preds: bb4
  br bb24, scope 1587                             // id: %40

bb6:                                              // Preds: bb4
  debug_value %11 : $Optional<AnyObject>, scope 1587 // id: %41
  debug_value %21 : $AnyObject, scope 1592        // id: %42
  %43 = alloc_stack $AnyObject, scope 1592        // users: %49, %45, %44
  store %21 to %43 : $*AnyObject, scope 1592      // id: %44
  %45 = unchecked_addr_cast %43 : $*AnyObject to $*_StringBuffer, scope 1592 // user: %46
  %46 = struct_element_addr %45 : $*_StringBuffer, #_StringBuffer._storage, scope 1592 // user: %47
  %47 = struct_element_addr %46 : $*_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1592 // user: %48
  %48 = load %47 : $*Optional<Builtin.NativeObject>, scope 1592 // users: %140, %148, %109, %50, %81, %83
  dealloc_stack %43 : $*AnyObject, scope 1592     // id: %49
  store %48 to %4 : $*Optional<Builtin.NativeObject>, scope 1587 // id: %50
  %51 = struct_element_addr %2 : $*_StringCore, #_StringCore._baseAddress, scope 1587 // user: %52
  %52 = load %51 : $*Optional<UnsafeMutableRawPointer>, scope 1587 // users: %55, %61
  %53 = struct $Int (%14 : $Builtin.Int64), scope 1587 // users: %54, %186
  debug_value %53 : $Int, scope 1594              // id: %54
  switch_enum %52 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb7, case #Optional.some!enumelt.1: bb8, scope 1594 // id: %55

bb7:                                              // Preds: bb6
  cond_fail %28 : $Builtin.Int1, scope 1594       // id: %56
  unreachable, scope 1592                         // id: %57

bb8:                                              // Preds: bb6
  %58 = integer_literal $Builtin.Int64, 64, scope 1594 // users: %118, %59
  %59 = builtin "cmp_ult_Int64"(%32 : $Builtin.Int64, %58 : $Builtin.Int64) : $Builtin.Int1, scope 1594 // user: %60
  %60 = builtin "xor_Int1"(%59 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, scope 1594 // user: %76
  %61 = unchecked_enum_data %52 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1594 // users: %70, %64, %63
  %62 = builtin "shl_Int64"(%14 : $Builtin.Int64, %32 : $Builtin.Int64) : $Builtin.Int64, scope 1594 // user: %65
  %63 = struct_extract %61 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1594 // users: %72, %66
  debug_value %61 : $UnsafeMutableRawPointer, scope 1594 // id: %64
  %65 = builtin "truncOrBitCast_Int64_Word"(%62 : $Builtin.Int64) : $Builtin.Word, scope 1594 // user: %66
  %66 = index_raw_pointer %63 : $Builtin.RawPointer, %65 : $Builtin.Word, scope 1594 // users: %75, %124
  %67 = integer_literal $Builtin.Int64, 4611686018427387903, scope 1587 // user: %68
  %68 = builtin "and_Int64"(%9 : $Builtin.Int64, %67 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %69
  %69 = builtin "shl_Int64"(%68 : $Builtin.Int64, %32 : $Builtin.Int64) : $Builtin.Int64, scope 1596 // user: %71
  debug_value %61 : $UnsafeMutableRawPointer, scope 1596 // id: %70
  %71 = builtin "truncOrBitCast_Int64_Word"(%69 : $Builtin.Int64) : $Builtin.Word, scope 1596 // user: %72
  %72 = index_raw_pointer %63 : $Builtin.RawPointer, %71 : $Builtin.Word, scope 1596 // users: %75, %155, %73
  %73 = struct $UnsafeMutableRawPointer (%72 : $Builtin.RawPointer), scope 1596 // users: %183, %74
  debug_value %73 : $UnsafeMutableRawPointer, scope 1587 // id: %74
  %75 = builtin "cmp_ult_RawPointer"(%72 : $Builtin.RawPointer, %66 : $Builtin.RawPointer) : $Builtin.Int1, scope 1587 // user: %76
  %76 = builtin "or_Int1"(%60 : $Builtin.Int1, %75 : $Builtin.Int1) : $Builtin.Int1, scope 1587 // user: %77
  cond_fail %76 : $Builtin.Int1, scope 1587       // id: %77
  debug_value %0 : $Int, scope 1587               // id: %78
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %79 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1587 // user: %80
  %80 = apply %79() : $@convention(thin) () -> Int, scope 1587 // users: %142, %121, %82
  switch_enum %48 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb23, case #Optional.some!enumelt.1: bb9, scope 1587 // id: %81

bb9:                                              // Preds: bb8
  debug_value %80 : $Int, scope 1587              // id: %82
  %83 = struct $_HeapBuffer<_StringBufferIVars, UInt16> (%48 : $Optional<Builtin.NativeObject>), scope 1587 // users: %167, %166, %165, %164, %107, %106, %85, %84, %153
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1598 // id: %84
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1598 // id: %85
  %86 = metatype $@thick HeapObject.Type, scope 1598 // user: %87
  %87 = builtin "sizeof"<HeapObject>(%86 : $@thick HeapObject.Type) : $Builtin.Word, scope 1598 // user: %88
  %88 = builtin "zextOrBitCast_Word_Int64"(%87 : $Builtin.Word) : $Builtin.Int64, scope 1598 // user: %92
  %89 = metatype $@thick _StringBufferIVars.Type, scope 1598 // user: %90
  %90 = builtin "alignof"<_StringBufferIVars>(%89 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1598 // user: %91
  %91 = builtin "zextOrBitCast_Word_Int64"(%90 : $Builtin.Word) : $Builtin.Int64, scope 1598 // users: %98, %92
  %92 = builtin "uadd_with_overflow_Int64"(%88 : $Builtin.Int64, %91 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1598 // users: %94, %93
  %93 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 0, scope 1598 // user: %96
  %94 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 1, scope 1598 // user: %95
  cond_fail %94 : $Builtin.Int1, scope 1598       // id: %95
  %96 = builtin "usub_with_overflow_Int64"(%93 : $Builtin.Int64, %12 : $Builtin.Int64, %33 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1598 // user: %97
  %97 = tuple_extract %96 : $(Builtin.Int64, Builtin.Int1), 0, scope 1598 // user: %102
  %98 = builtin "usub_with_overflow_Int64"(%91 : $Builtin.Int64, %12 : $Builtin.Int64, %33 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1598 // user: %99
  %99 = tuple_extract %98 : $(Builtin.Int64, Builtin.Int1), 0, scope 1598 // user: %101
  %100 = integer_literal $Builtin.Int64, -1, scope 1598 // user: %101
  %101 = builtin "xor_Int64"(%99 : $Builtin.Int64, %100 : $Builtin.Int64) : $Builtin.Int64, scope 1598 // user: %102
  %102 = builtin "and_Int64"(%97 : $Builtin.Int64, %101 : $Builtin.Int64) : $Builtin.Int64, scope 1598 // user: %103
  %103 = builtin "u_to_s_checked_conversion_Int64"(%102 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1598 // users: %108, %104
  %104 = tuple_extract %103 : $(Builtin.Int64, Builtin.Int1), 1, scope 1598 // user: %105
  cond_fail %104 : $Builtin.Int1, scope 1598      // id: %105
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1598 // id: %106
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1598 // id: %107
  %108 = tuple_extract %103 : $(Builtin.Int64, Builtin.Int1), 0, scope 1598 // user: %111
  %109 = unchecked_enum_data %48 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1598 // user: %110
  %110 = ref_to_raw_pointer %109 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1598 // users: %123, %112
  %111 = builtin "truncOrBitCast_Int64_Word"(%108 : $Builtin.Int64) : $Builtin.Word, scope 1598 // user: %112
  %112 = index_raw_pointer %110 : $Builtin.RawPointer, %111 : $Builtin.Word, scope 1598 // user: %113
  %113 = pointer_to_address %112 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 1587 // users: %168, %114
  %114 = struct_element_addr %113 : $*_StringBufferIVars, #_StringBufferIVars.capacityAndElementShift, scope 1587 // user: %115
  %115 = struct_element_addr %114 : $*Int, #Int._value, scope 1587 // user: %116
  %116 = load %115 : $*Builtin.Int64, scope 1587  // users: %135, %117
  %117 = builtin "and_Int64"(%116 : $Builtin.Int64, %12 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // users: %143, %136, %128, %118
  %118 = builtin "cmp_ult_Int64"(%117 : $Builtin.Int64, %58 : $Builtin.Int64) : $Builtin.Int1, scope 1587 // user: %119
  %119 = builtin "xor_Int1"(%118 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, scope 1587 // user: %120
  cond_fail %119 : $Builtin.Int1, scope 1587      // id: %120
  %121 = struct_extract %80 : $Int, #Int._value, scope 1587 // user: %122
  %122 = builtin "truncOrBitCast_Int64_Word"(%121 : $Builtin.Int64) : $Builtin.Word, scope 1587 // user: %123
  %123 = index_raw_pointer %110 : $Builtin.RawPointer, %122 : $Builtin.Word, scope 1587 // users: %145, %125
  %124 = builtin "ptrtoint_Word"(%66 : $Builtin.RawPointer) : $Builtin.Word, scope 1587 // user: %126
  %125 = builtin "ptrtoint_Word"(%123 : $Builtin.RawPointer) : $Builtin.Word, scope 1587 // user: %126
  %126 = builtin "sub_Word"(%124 : $Builtin.Word, %125 : $Builtin.Word) : $Builtin.Word, scope 1587 // user: %127
  %127 = builtin "zextOrBitCast_Word_Int64"(%126 : $Builtin.Word) : $Builtin.Int64, scope 1587 // user: %128
  %128 = builtin "ashr_Int64"(%127 : $Builtin.Int64, %117 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %130
  %129 = struct_extract %0 : $Int, #Int._value, scope 1587 // users: %209, %206, %193, %176, %130
  %130 = builtin "sadd_with_overflow_Int64"(%129 : $Builtin.Int64, %128 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1587 // users: %133, %131
  %131 = tuple_extract %130 : $(Builtin.Int64, Builtin.Int1), 1, scope 1587 // user: %132
  cond_fail %131 : $Builtin.Int1, scope 1587      // id: %132
  %133 = tuple_extract %130 : $(Builtin.Int64, Builtin.Int1), 0, scope 1587 // users: %143, %137
  %134 = integer_literal $Builtin.Int64, -2, scope 1587 // user: %135
  %135 = builtin "and_Int64"(%116 : $Builtin.Int64, %134 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %136
  %136 = builtin "ashr_Int64"(%135 : $Builtin.Int64, %117 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %137
  %137 = builtin "cmp_sgt_Int64"(%133 : $Builtin.Int64, %136 : $Builtin.Int64) : $Builtin.Int1, scope 1587 // user: %138
  %138 = builtin "int_expect_Int1"(%137 : $Builtin.Int1, %33 : $Builtin.Int1) : $Builtin.Int1, scope 1587 // user: %139
  cond_br %138, bb10, bb11, scope 1587            // id: %139

bb10:                                             // Preds: bb9
  retain_value %48 : $Optional<Builtin.NativeObject>, scope 1587 // id: %140
  br bb17, scope 1587                             // id: %141

bb11:                                             // Preds: bb9
  debug_value %80 : $Int, scope 1587              // id: %142
  %143 = builtin "shl_Int64"(%133 : $Builtin.Int64, %117 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %144
  %144 = builtin "truncOrBitCast_Int64_Word"(%143 : $Builtin.Int64) : $Builtin.Word, scope 1587 // user: %145
  %145 = index_raw_pointer %123 : $Builtin.RawPointer, %144 : $Builtin.Word, scope 1587 // users: %156, %146
  %146 = struct $UnsafeMutableRawPointer (%145 : $Builtin.RawPointer), scope 1587 // users: %163, %162, %147
  debug_value %146 : $UnsafeMutableRawPointer, scope 1587 // id: %147
  retain_value %48 : $Optional<Builtin.NativeObject>, scope 1587 // id: %148
  %149 = is_unique %4 : $*Optional<Builtin.NativeObject>, scope 1587 // user: %150
  %150 = builtin "int_expect_Int1"(%149 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, scope 1587 // user: %151
  cond_br %150, bb15, bb12, scope 1587            // id: %151

bb12:                                             // Preds: bb11
  // function_ref specialized _HeapBuffer._value.getter
  %152 = function_ref @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferg6_valueGSpx_ : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars>, scope 1587 // user: %153
  %153 = apply %152(%83) : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars>, scope 1587 // user: %154
  %154 = struct_extract %153 : $UnsafeMutablePointer<_StringBufferIVars>, #UnsafeMutablePointer._rawValue, scope 1587 // user: %157
  %155 = builtin "ptrtoint_Word"(%72 : $Builtin.RawPointer) : $Builtin.Word, scope 1587 // user: %157
  %156 = builtin "ptrtoint_Word"(%145 : $Builtin.RawPointer) : $Builtin.Word, scope 1587 // user: %157
  %157 = builtin "cmpxchg_seqcst_seqcst_Word"(%154 : $Builtin.RawPointer, %155 : $Builtin.Word, %156 : $Builtin.Word) : $(Builtin.Word, Builtin.Int1), scope 1587 // user: %158
  %158 = tuple_extract %157 : $(Builtin.Word, Builtin.Int1), 1, scope 1587 // user: %159
  cond_br %158, bb14, bb13, scope 1587            // id: %159

bb13:                                             // Preds: bb12
  br bb17, scope 1587                             // id: %160

bb14:                                             // Preds: bb12
  br bb16, scope 1587                             // id: %161

bb15:                                             // Preds: bb11
  debug_value %146 : $UnsafeMutableRawPointer, scope 1587 // id: %162
  %163 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %146 : $UnsafeMutableRawPointer, scope 1587 // user: %169
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1600 // id: %164
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1600 // id: %165
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1600 // id: %166
  debug_value %83 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1600 // id: %167
  %168 = struct_element_addr %113 : $*_StringBufferIVars, #_StringBufferIVars.usedEnd, scope 1587 // user: %169
  store %163 to %168 : $*Optional<UnsafeMutableRawPointer>, scope 1587 // id: %169
  br bb16, scope 1587                             // id: %170

bb16:                                             // Preds: bb14 bb15
  debug_value_addr %2 : $*_StringCore, scope 1587 // id: %171
  debug_value %0 : $Int, scope 1587               // id: %172
  %173 = load %8 : $*Builtin.Int64, scope 1587    // user: %175
  %174 = integer_literal $Builtin.Int64, -4611686018427387904, scope 1587 // user: %175
  %175 = builtin "and_Int64"(%173 : $Builtin.Int64, %174 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %180
  %176 = builtin "s_to_u_checked_conversion_Int64"(%129 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1587 // users: %178, %177
  %177 = tuple_extract %176 : $(Builtin.Int64, Builtin.Int1), 0, scope 1587 // user: %180
  %178 = tuple_extract %176 : $(Builtin.Int64, Builtin.Int1), 1, scope 1587 // user: %179
  cond_fail %178 : $Builtin.Int1, scope 1587      // id: %179
  %180 = builtin "or_Int64"(%175 : $Builtin.Int64, %177 : $Builtin.Int64) : $Builtin.Int64, scope 1587 // user: %181
  %181 = struct $UInt (%180 : $Builtin.Int64), scope 1587 // user: %182
  store %181 to %7 : $*UInt, scope 1587           // id: %182
  %183 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %73 : $UnsafeMutableRawPointer, scope 1587 // user: %186
  %184 = load %4 : $*Optional<Builtin.NativeObject>, scope 1587 // user: %185
  release_value %184 : $Optional<Builtin.NativeObject>, scope 1587 // id: %185
  br bb25(%53 : $Int, %183 : $Optional<UnsafeMutableRawPointer>), scope 1587 // id: %186

bb17:                                             // Preds: bb13 bb10
  %187 = load %4 : $*Optional<Builtin.NativeObject>, scope 1587 // users: %195, %205, %188
  %188 = struct $_HeapBuffer<_StringBufferIVars, UInt16> (%187 : $Optional<Builtin.NativeObject>), scope 1587 // user: %189
  %189 = struct $_StringBuffer (%188 : $_HeapBuffer<_StringBufferIVars, UInt16>), scope 1587 // users: %197, %191
  // function_ref _StringBuffer.capacity.getter
  %190 = function_ref @_TFVs13_StringBufferg8capacitySi : $@convention(method) (@guaranteed _StringBuffer) -> Int, scope 1587 // users: %197, %191
  %191 = apply %190(%189) : $@convention(method) (@guaranteed _StringBuffer) -> Int, scope 1587 // user: %192
  %192 = struct_extract %191 : $Int, #Int._value, scope 1587 // user: %193
  %193 = builtin "cmp_sgt_Int64"(%129 : $Builtin.Int64, %192 : $Builtin.Int64) : $Builtin.Int1, scope 1587 // user: %194
  cond_br %193, bb19, bb18, scope 1587            // id: %194

bb18:                                             // Preds: bb17
  release_value %187 : $Optional<Builtin.NativeObject>, scope 1587 // id: %195
  br bb24, scope 1587                             // id: %196

bb19:                                             // Preds: bb17
  %197 = apply %190(%189) : $@convention(method) (@guaranteed _StringBuffer) -> Int, scope 1587 // users: %200, %198
  debug_value %197 : $Int, scope 1587             // id: %198
  %199 = integer_literal $Builtin.Int64, 2, scope 1587 // user: %201
  %200 = struct_extract %197 : $Int, #Int._value, scope 1587 // user: %201
  %201 = builtin "smul_with_overflow_Int64"(%200 : $Builtin.Int64, %199 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1587 // users: %203, %202
  %202 = tuple_extract %201 : $(Builtin.Int64, Builtin.Int1), 0, scope 1587 // users: %208, %206
  %203 = tuple_extract %201 : $(Builtin.Int64, Builtin.Int1), 1, scope 1587 // user: %204
  cond_fail %203 : $Builtin.Int1, scope 1587      // id: %204
  release_value %187 : $Optional<Builtin.NativeObject>, scope 1587 // id: %205
  %206 = builtin "cmp_sge_Int64"(%129 : $Builtin.Int64, %202 : $Builtin.Int64) : $Builtin.Int1, scope 1587 // user: %207
  cond_br %206, bb21, bb20, scope 1587            // id: %207

bb20:                                             // Preds: bb19
  br bb22(%202 : $Builtin.Int64), scope 1587      // id: %208

bb21:                                             // Preds: bb19
  br bb22(%129 : $Builtin.Int64), scope 1587      // id: %209

// %210                                           // user: %211
bb22(%210 : $Builtin.Int64):                      // Preds: bb21 bb20
  %211 = struct $Int (%210 : $Builtin.Int64), scope 1587 // user: %213
  %212 = enum $Optional<UnsafeMutableRawPointer>, #Optional.none!enumelt, scope 1587 // user: %213
  br bb25(%211 : $Int, %212 : $Optional<UnsafeMutableRawPointer>), scope 1587 // id: %213

bb23:                                             // Preds: bb8
  cond_fail %28 : $Builtin.Int1, scope 1587       // id: %214
  unreachable, scope 1587                         // id: %215

bb24:                                             // Preds: bb5 bb1 bb18 bb3
  %216 = enum $Optional<UnsafeMutableRawPointer>, #Optional.none!enumelt, scope 1587 // user: %217
  br bb25(%0 : $Int, %216 : $Optional<UnsafeMutableRawPointer>), scope 1587 // id: %217

// %218                                           // user: %220
// %219                                           // user: %220
bb25(%218 : $Int, %219 : $Optional<UnsafeMutableRawPointer>): // Preds: bb24 bb22 bb16
  %220 = tuple (%218 : $Int, %219 : $Optional<UnsafeMutableRawPointer>), scope 1587 // user: %222
  dealloc_stack %4 : $*Optional<Builtin.NativeObject>, scope 1587 // id: %221
  return %220 : $(Int, Optional<UnsafeMutableRawPointer>), scope 1587 // id: %222
}

sil_scope 1601 {  parent @_TFVs11_StringCore12_copyInPlacefT7newSizeSi11newCapacitySi15minElementWidthSi_T_ : $@convention(method) (Int, Int, Int, @inout _StringCore) -> () }

// _StringCore._copyInPlace(newSize : Int, newCapacity : Int, minElementWidth : Int) -> ()
sil hidden_external [fragile] @_TFVs11_StringCore12_copyInPlacefT7newSizeSi11newCapacitySi15minElementWidthSi_T_ : $@convention(method) (Int, Int, Int, @inout _StringCore) -> () {
// %0                                             // users: %69, %5
// %1                                             // users: %69, %6
// %2                                             // users: %65, %22, %7
// %3                                             // users: %143, %71, %25, %11, %8, %4
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : $*_StringCore):
  debug_value_addr %3 : $*_StringCore, scope 1601 // id: %4
  debug_value %0 : $Int, scope 1601               // id: %5
  debug_value %1 : $Int, scope 1601               // id: %6
  debug_value %2 : $Int, scope 1601               // id: %7
  %8 = struct_element_addr %3 : $*_StringCore, #_StringCore._countAndFlags, scope 1601 // user: %9
  %9 = struct_element_addr %8 : $*UInt, #UInt._value, scope 1601 // users: %106, %78, %10
  %10 = load %9 : $*Builtin.Int64, scope 1601     // users: %17, %13
  %11 = struct_element_addr %3 : $*_StringCore, #_StringCore._owner, scope 1601 // users: %142, %107, %27
  %12 = integer_literal $Builtin.Int64, 4611686018427387903, scope 1601 // user: %13
  %13 = builtin "and_Int64"(%10 : $Builtin.Int64, %12 : $Builtin.Int64) : $Builtin.Int64, scope 1601 // user: %14
  %14 = struct $Int (%13 : $Builtin.Int64), scope 1601 // users: %101, %43, %15
  debug_value %14 : $Int, scope 1601              // id: %15
  %16 = integer_literal $Builtin.Int64, 63, scope 1601 // users: %89, %17
  %17 = builtin "lshr_Int64"(%10 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int64, scope 1601 // user: %20
  %18 = integer_literal $Builtin.Int64, 1, scope 1601 // users: %108, %90, %59, %33, %20
  %19 = integer_literal $Builtin.Int1, 0, scope 1601 // users: %90, %20
  %20 = builtin "sadd_with_overflow_Int64"(%17 : $Builtin.Int64, %18 : $Builtin.Int64, %19 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1601 // user: %21
  %21 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 0, scope 1601 // users: %33, %23
  %22 = struct_extract %2 : $Int, #Int._value, scope 1601 // user: %23
  %23 = builtin "cmp_sge_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 1601 // user: %24
  cond_br %23, bb10, bb1, scope 1601              // id: %24

bb1:                                              // Preds: bb0
  %25 = struct_element_addr %3 : $*_StringCore, #_StringCore._baseAddress, scope 1601 // user: %26
  %26 = load %25 : $*Optional<UnsafeMutableRawPointer>, scope 1601 // users: %38, %32, %31, %30, %29, %28
  %27 = load %11 : $*Optional<AnyObject>, scope 1601 // users: %55, %51
  debug_value %26 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %28
  debug_value %26 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %29
  debug_value %26 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %30
  debug_value %26 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %31
  switch_enum %26 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb8, case #Optional.some!enumelt.1: bb2, scope 1601 // id: %32

bb2:                                              // Preds: bb1
  %33 = builtin "cmp_eq_Int64"(%21 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int1, scope 1601 // user: %35
  %34 = integer_literal $Builtin.Int1, -1, scope 1601 // user: %35
  %35 = builtin "int_expect_Int1"(%33 : $Builtin.Int1, %34 : $Builtin.Int1) : $Builtin.Int1, scope 1601 // user: %36
  cond_br %35, bb3, bb4, scope 1601               // id: %36

bb3:                                              // Preds: bb2
  br bb7, scope 1601                              // id: %37

bb4:                                              // Preds: bb2
  %38 = unchecked_enum_data %26 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1601 // user: %39
  %39 = struct_extract %38 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1601 // user: %40
  %40 = struct $UnsafePointer<UInt16> (%39 : $Builtin.RawPointer), scope 1601 // user: %41
  %41 = enum $Optional<UnsafePointer<UInt16>>, #Optional.some!enumelt.1, %40 : $UnsafePointer<UInt16>, scope 1601 // user: %43
  // function_ref specialized specialized UnsafeBufferPointer.init(start : UnsafePointer<A>?, count : Int) -> UnsafeBufferPointer<A>
  %42 = function_ref @_TTSfq4n_n_d___TTSgq5Vs6UInt16___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt16>>, Int) -> UnsafeBufferPointer<UInt16>, scope 1601 // user: %43
  %43 = apply %42(%41, %14) : $@convention(thin) (Optional<UnsafePointer<UInt16>>, Int) -> UnsafeBufferPointer<UInt16>, scope 1601 // users: %46, %44
  debug_value %43 : $UnsafeBufferPointer<UInt16>, scope 1601 // id: %44
  %45 = alloc_stack $UnsafeBufferPointer<UInt16>, scope 1601 // users: %54, %52, %46
  store %43 to %45 : $*UnsafeBufferPointer<UInt16>, scope 1601 // id: %46
  // function_ref _StringCore.(isRepresentableAsASCII() -> Bool).(closure #1)
  %47 = function_ref @_TFFVs11_StringCore22isRepresentableAsASCIIFT_SbU_FVs6UInt16Sb : $@convention(thin) (UInt16) -> Bool, scope 1601 // user: %48
  %48 = thin_to_thick_function %47 : $@convention(thin) (UInt16) -> Bool to $@callee_owned (UInt16) -> Bool, scope 1601 // user: %49
  %49 = convert_function %48 : $@callee_owned (UInt16) -> Bool to $@callee_owned (UInt16) -> (Bool, @error Error), scope 1601 // user: %52
  // function_ref specialized specialized specialized Sequence.contains(where : (A.Iterator.Element) throws -> Bool) throws -> Bool
  %50 = function_ref @_TTSfq4n_g___TTSfq1cl53_TTRXFo_dVs6UInt16_dSbzoPs5Error__XFo_iS__dSbzoPS0___XFo_dVs6UInt16_dSbzoPs5Error___n___TTSgq5GSRVs6UInt16_GSRS__s8Sequences___TFEsPs8Sequence8containsfzT5whereFzWx8Iterator7Element_Sb_Sb : $@convention(thin) (@in_guaranteed UnsafeBufferPointer<UInt16>, @guaranteed @callee_owned (UInt16) -> (Bool, @error Error)) -> (Bool, @error Error), scope 1601 // user: %52
  retain_value %27 : $Optional<AnyObject>, scope 1601 // id: %51
  %52 = apply [nothrow] %50(%45, %49) : $@convention(thin) (@in_guaranteed UnsafeBufferPointer<UInt16>, @guaranteed @callee_owned (UInt16) -> (Bool, @error Error)) -> (Bool, @error Error), scope 1601 // user: %53
  %53 = struct_extract %52 : $Bool, #Bool._value, scope 1601 // user: %56
  dealloc_stack %45 : $*UnsafeBufferPointer<UInt16>, scope 1601 // id: %54
  release_value %27 : $Optional<AnyObject>, scope 1601 // id: %55
  cond_br %53, bb6, bb5, scope 1601               // id: %56

bb5:                                              // Preds: bb4
  br bb7, scope 1601                              // id: %57

bb6:                                              // Preds: bb4
  br bb9, scope 1601                              // id: %58

bb7:                                              // Preds: bb5 bb3
  %59 = struct $Int (%18 : $Builtin.Int64), scope 1601 // user: %60
  br bb11(%59 : $Int), scope 1601                 // id: %60

bb8:                                              // Preds: bb1
  br bb9, scope 1601                              // id: %61

bb9:                                              // Preds: bb6 bb8
  %62 = integer_literal $Builtin.Int64, 2, scope 1601 // user: %63
  %63 = struct $Int (%62 : $Builtin.Int64), scope 1601 // user: %64
  br bb11(%63 : $Int), scope 1601                 // id: %64

bb10:                                             // Preds: bb0
  br bb11(%2 : $Int), scope 1601                  // id: %65

// %66                                            // users: %101, %69, %67
bb11(%66 : $Int):                                 // Preds: bb10 bb9 bb7
  debug_value %66 : $Int, scope 1601              // id: %67
  // function_ref specialized _StringBuffer.init(capacity : Int, initialSize : Int, elementWidth : Int) -> _StringBuffer
  %68 = function_ref @_TTSfq4n_n_n_d___TFVs13_StringBufferCfT8capacitySi11initialSizeSi12elementWidthSi_S_ : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer, scope 1601 // user: %69
  %69 = apply %68(%1, %0, %66) : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer, scope 1601 // users: %141, %120, %118, %80, %79, %70
  debug_value %69 : $_StringBuffer, scope 1601    // id: %70
  %71 = struct_element_addr %3 : $*_StringCore, #_StringCore._baseAddress, scope 1601 // user: %72
  %72 = load %71 : $*Optional<UnsafeMutableRawPointer>, scope 1601 // users: %88, %77, %76, %75, %74, %73
  debug_value %72 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %73
  debug_value %72 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %74
  debug_value %72 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %75
  debug_value %72 : $Optional<UnsafeMutableRawPointer>, scope 1601 // id: %76
  switch_enum %72 : $Optional<UnsafeMutableRawPointer>, case #Optional.none!enumelt: bb15, case #Optional.some!enumelt.1: bb12, scope 1601 // id: %77

bb12:                                             // Preds: bb11
  %78 = load %9 : $*Builtin.Int64, scope 1601     // user: %89
  debug_value %69 : $_StringBuffer, scope 1601    // id: %79
  %80 = struct_extract %69 : $_StringBuffer, #_StringBuffer._storage, scope 1601 // users: %86, %85, %82, %81
  %81 = struct_extract %80 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1601 // users: %93, %87
  debug_value %80 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1601 // id: %82
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %83 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1601 // user: %84
  %84 = apply %83() : $@convention(thin) () -> Int, scope 1601 // users: %96, %95
  debug_value %80 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1601 // id: %85
  debug_value %80 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1601 // id: %86
  switch_enum %81 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb14, case #Optional.some!enumelt.1: bb13, scope 1601 // id: %87

bb13:                                             // Preds: bb12
  %88 = unchecked_enum_data %72 : $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, scope 1601 // user: %101
  %89 = builtin "lshr_Int64"(%78 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int64, scope 1601 // user: %90
  %90 = builtin "sadd_with_overflow_Int64"(%89 : $Builtin.Int64, %18 : $Builtin.Int64, %19 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1601 // user: %91
  %91 = tuple_extract %90 : $(Builtin.Int64, Builtin.Int1), 0, scope 1601 // user: %92
  %92 = struct $Int (%91 : $Builtin.Int64), scope 1601 // user: %101
  %93 = unchecked_enum_data %81 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1601 // user: %94
  %94 = ref_to_raw_pointer %93 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1601 // user: %98
  %95 = struct_extract %84 : $Int, #Int._value, scope 1601 // user: %97
  debug_value %84 : $Int, scope 1601              // id: %96
  %97 = builtin "truncOrBitCast_Int64_Word"(%95 : $Builtin.Int64) : $Builtin.Word, scope 1601 // user: %98
  %98 = index_raw_pointer %94 : $Builtin.RawPointer, %97 : $Builtin.Word, scope 1601 // user: %99
  %99 = struct $UnsafeMutableRawPointer (%98 : $Builtin.RawPointer), scope 1601 // user: %101
  // function_ref specialized static _StringCore._copyElements(UnsafeMutableRawPointer, srcElementWidth : Int, dstStart : UnsafeMutableRawPointer, dstElementWidth : Int, count : Int) -> ()
  %100 = function_ref @_TTSfq4n_n_n_n_n_d___TZFVs11_StringCore13_copyElementsfTSv15srcElementWidthSi8dstStartSv15dstElementWidthSi5countSi_T_ : $@convention(thin) (UnsafeMutableRawPointer, Int, UnsafeMutableRawPointer, Int, Int) -> (), scope 1601 // user: %101
  %101 = apply %100(%88, %92, %99, %66, %14) : $@convention(thin) (UnsafeMutableRawPointer, Int, UnsafeMutableRawPointer, Int, Int) -> (), scope 1601
  br bb19, scope 1601                             // id: %102

bb14:                                             // Preds: bb12
  %103 = integer_literal $Builtin.Int1, -1, scope 1601 // user: %104
  cond_fail %103 : $Builtin.Int1, scope 1601      // id: %104
  unreachable, scope 1601                         // id: %105

bb15:                                             // Preds: bb11
  %106 = load %9 : $*Builtin.Int64, scope 1601    // user: %108
  %107 = load %11 : $*Optional<AnyObject>, scope 1601 // users: %138, %136, %127, %115, %114
  %108 = builtin "shl_Int64"(%106 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int64, scope 1601 // user: %110
  %109 = integer_literal $Builtin.Int64, 0, scope 1601 // user: %110
  %110 = builtin "cmp_slt_Int64"(%108 : $Builtin.Int64, %109 : $Builtin.Int64) : $Builtin.Int1, scope 1601 // user: %112
  %111 = integer_literal $Builtin.Int1, -1, scope 1601 // users: %116, %147, %112
  %112 = builtin "xor_Int1"(%110 : $Builtin.Int1, %111 : $Builtin.Int1) : $Builtin.Int1, scope 1601 // user: %113
  cond_fail %112 : $Builtin.Int1, scope 1601      // id: %113
  debug_value %107 : $Optional<AnyObject>, scope 1601 // id: %114
  switch_enum %107 : $Optional<AnyObject>, case #Optional.some!enumelt.1: bb17, case #Optional.none!enumelt: bb16, scope 1601 // id: %115

bb16:                                             // Preds: bb15
  cond_fail %111 : $Builtin.Int1, scope 1601      // id: %116
  unreachable, scope 1601                         // id: %117

bb17:                                             // Preds: bb15
  %118 = struct_extract %69 : $_StringBuffer, #_StringBuffer._storage, scope 1601 // users: %125, %124, %121, %119
  %119 = struct_extract %118 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1601 // users: %128, %126
  debug_value %69 : $_StringBuffer, scope 1601    // id: %120
  debug_value %118 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1601 // id: %121
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %122 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 1601 // user: %123
  %123 = apply %122() : $@convention(thin) () -> Int, scope 1601 // users: %131, %130
  debug_value %118 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1601 // id: %124
  debug_value %118 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1601 // id: %125
  switch_enum %119 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb20, case #Optional.some!enumelt.1: bb18, scope 1601 // id: %126

bb18:                                             // Preds: bb17
  %127 = unchecked_enum_data %107 : $Optional<AnyObject>, #Optional.some!enumelt.1, scope 1601 // user: %137
  %128 = unchecked_enum_data %119 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1601 // user: %129
  %129 = ref_to_raw_pointer %128 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1601 // user: %133
  %130 = struct_extract %123 : $Int, #Int._value, scope 1601 // user: %132
  debug_value %123 : $Int, scope 1601             // id: %131
  %132 = builtin "truncOrBitCast_Int64_Word"(%130 : $Builtin.Int64) : $Builtin.Word, scope 1601 // user: %133
  %133 = index_raw_pointer %129 : $Builtin.RawPointer, %132 : $Builtin.Word, scope 1601 // user: %134
  %134 = struct $UnsafeMutablePointer<UInt16> (%133 : $Builtin.RawPointer), scope 1601 // user: %137
  // function_ref specialized _cocoaStringReadAll(AnyObject, UnsafeMutablePointer<UInt16>) -> ()
  %135 = function_ref @_TTSfq4g_n___TFs19_cocoaStringReadAllFTPs9AnyObject_GSpVs6UInt16__T_ : $@convention(thin) (@guaranteed AnyObject, UnsafeMutablePointer<UInt16>) -> (), scope 1601 // user: %137
  retain_value %107 : $Optional<AnyObject>, scope 1601 // id: %136
  %137 = apply %135(%127, %134) : $@convention(thin) (@guaranteed AnyObject, UnsafeMutablePointer<UInt16>) -> (), scope 1601
  release_value %107 : $Optional<AnyObject>, scope 1601 // id: %138
  br bb19, scope 1601                             // id: %139

bb19:                                             // Preds: bb18 bb13
  // function_ref specialized _StringCore.init(_StringBuffer) -> _StringCore
  %140 = function_ref @_TTSfq4n_d___TFVs11_StringCoreCfVs13_StringBufferS_ : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore, scope 1601 // user: %141
  %141 = apply %140(%69) : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore, scope 1601 // user: %143
  %142 = load %11 : $*Optional<AnyObject>, scope 1601 // user: %144
  store %141 to %3 : $*_StringCore, scope 1601    // id: %143
  release_value %142 : $Optional<AnyObject>, scope 1601 // id: %144
  %145 = tuple (), scope 1601                     // user: %146
  return %145 : $(), scope 1601                   // id: %146

bb20:                                             // Preds: bb17
  cond_fail %111 : $Builtin.Int1, scope 1601      // id: %147
  unreachable, scope 1601                         // id: %148
}

sil_scope 1602 {  parent @_TTSfq4n_n_n_n_n_d___TZFVs11_StringCore13_copyElementsfTSv15srcElementWidthSi8dstStartSv15dstElementWidthSi5countSi_T_ : $@convention(thin) (UnsafeMutableRawPointer, Int, UnsafeMutableRawPointer, Int, Int) -> () }

// specialized static _StringCore._copyElements(UnsafeMutableRawPointer, srcElementWidth : Int, dstStart : UnsafeMutableRawPointer, dstElementWidth : Int, count : Int) -> ()
sil hidden_external [fragile] @_TTSfq4n_n_n_n_n_d___TZFVs11_StringCore13_copyElementsfTSv15srcElementWidthSi8dstStartSv15dstElementWidthSi5countSi_T_ : $@convention(thin) (UnsafeMutableRawPointer, Int, UnsafeMutableRawPointer, Int, Int) -> () {
// %0                                             // users: %134, %131, %67, %18, %5
// %1                                             // users: %10, %6
// %2                                             // users: %132, %130, %80, %31, %7
// %3                                             // users: %11, %8
// %4                                             // users: %124, %71, %22, %9
bb0(%0 : $UnsafeMutableRawPointer, %1 : $Int, %2 : $UnsafeMutableRawPointer, %3 : $Int, %4 : $Int):
  debug_value %0 : $UnsafeMutableRawPointer, scope 1602 // id: %5
  debug_value %1 : $Int, scope 1602               // id: %6
  debug_value %2 : $UnsafeMutableRawPointer, scope 1602 // id: %7
  debug_value %3 : $Int, scope 1602               // id: %8
  debug_value %4 : $Int, scope 1602               // id: %9
  %10 = struct_extract %1 : $Int, #Int._value, scope 1602 // users: %111, %16, %12
  %11 = struct_extract %3 : $Int, #Int._value, scope 1602 // users: %16, %12
  %12 = builtin "cmp_eq_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 1602 // user: %14
  %13 = integer_literal $Builtin.Int1, -1, scope 1602 // users: %122, %111, %14
  %14 = builtin "int_expect_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 1602 // user: %15
  cond_br %14, bb18, bb1, scope 1602              // id: %15

bb1:                                              // Preds: bb0
  %16 = builtin "cmp_slt_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 1602 // user: %17
  cond_br %16, bb10, bb2, scope 1602              // id: %17

bb2:                                              // Preds: bb1
  %18 = struct_extract %0 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1602 // users: %42, %32, %28, %27
  %19 = metatype $@thick UInt16.Type, scope 1602  // user: %20
  %20 = builtin "strideof_nonzero"<UInt16>(%19 : $@thick UInt16.Type) : $Builtin.Word, scope 1602 // users: %42, %62, %21
  %21 = builtin "zextOrBitCast_Word_Int64"(%20 : $Builtin.Word) : $Builtin.Int64, scope 1602 // user: %24
  %22 = struct_extract %4 : $Int, #Int._value, scope 1602 // user: %24
  %23 = integer_literal $Builtin.Int1, 0, scope 1602 // user: %24
  %24 = builtin "smul_with_overflow_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1602 // user: %25
  %25 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 0, scope 1602 // user: %26
  %26 = builtin "truncOrBitCast_Int64_Word"(%25 : $Builtin.Int64) : $Builtin.Word, scope 1602 // user: %27
  %27 = index_raw_pointer %18 : $Builtin.RawPointer, %26 : $Builtin.Word, scope 1602 // users: %43, %63, %28
  %28 = builtin "cmp_eq_RawPointer"(%18 : $Builtin.RawPointer, %27 : $Builtin.RawPointer) : $Builtin.Int1, scope 1602 // user: %29
  cond_br %28, bb3, bb4, scope 1602               // id: %29

bb3:                                              // Preds: bb2
  br bb19, scope 1602                             // id: %30

bb4:                                              // Preds: bb2
  %31 = struct_extract %2 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1602 // users: %48, %40
  %32 = pointer_to_address %18 : $Builtin.RawPointer to [strict] $*UInt16, scope 1602 // user: %33
  %33 = struct_element_addr %32 : $*UInt16, #UInt16._value, scope 1602 // user: %34
  %34 = load %33 : $*Builtin.Int16, scope 1602    // user: %35
  %35 = builtin "u_to_u_checked_trunc_Int16_Int8"(%34 : $Builtin.Int16) : $(Builtin.Int8, Builtin.Int1), scope 1602 // users: %37, %36
  %36 = tuple_extract %35 : $(Builtin.Int8, Builtin.Int1), 0, scope 1602 // user: %39
  %37 = tuple_extract %35 : $(Builtin.Int8, Builtin.Int1), 1, scope 1602 // user: %38
  cond_fail %37 : $Builtin.Int1, scope 1602       // id: %38
  %39 = struct $UInt8 (%36 : $Builtin.Int8), scope 1602 // user: %41
  %40 = pointer_to_address %31 : $Builtin.RawPointer to [strict] $*UInt8, scope 1602 // user: %41
  store %39 to %40 : $*UInt8, scope 1602          // id: %41
  %42 = index_raw_pointer %18 : $Builtin.RawPointer, %20 : $Builtin.Word, scope 1602 // users: %48, %43
  %43 = builtin "cmp_eq_RawPointer"(%42 : $Builtin.RawPointer, %27 : $Builtin.RawPointer) : $Builtin.Int1, scope 1602 // user: %44
  cond_br %43, bb5, bb6, scope 1602               // id: %44

bb5:                                              // Preds: bb4
  br bb19, scope 1602                             // id: %45

bb6:                                              // Preds: bb4
  %46 = metatype $@thick UInt8.Type, scope 1602   // user: %47
  %47 = builtin "strideof_nonzero"<UInt8>(%46 : $@thick UInt8.Type) : $Builtin.Word, scope 1602 // user: %51
  br bb7(%31 : $Builtin.RawPointer, %42 : $Builtin.RawPointer), scope 1602 // id: %48

// %49                                            // user: %51
// %50                                            // users: %52, %62
bb7(%49 : $Builtin.RawPointer, %50 : $Builtin.RawPointer): // Preds: bb9 bb6
  %51 = index_raw_pointer %49 : $Builtin.RawPointer, %47 : $Builtin.Word, scope 1602 // users: %66, %60
  %52 = pointer_to_address %50 : $Builtin.RawPointer to [strict] $*UInt16, scope 1602 // user: %53
  %53 = struct_element_addr %52 : $*UInt16, #UInt16._value, scope 1602 // user: %54
  %54 = load %53 : $*Builtin.Int16, scope 1602    // user: %55
  %55 = builtin "u_to_u_checked_trunc_Int16_Int8"(%54 : $Builtin.Int16) : $(Builtin.Int8, Builtin.Int1), scope 1602 // users: %57, %56
  %56 = tuple_extract %55 : $(Builtin.Int8, Builtin.Int1), 0, scope 1602 // user: %59
  %57 = tuple_extract %55 : $(Builtin.Int8, Builtin.Int1), 1, scope 1602 // user: %58
  cond_fail %57 : $Builtin.Int1, scope 1602       // id: %58
  %59 = struct $UInt8 (%56 : $Builtin.Int8), scope 1602 // user: %61
  %60 = pointer_to_address %51 : $Builtin.RawPointer to [strict] $*UInt8, scope 1602 // user: %61
  store %59 to %60 : $*UInt8, scope 1602          // id: %61
  %62 = index_raw_pointer %50 : $Builtin.RawPointer, %20 : $Builtin.Word, scope 1602 // users: %66, %63
  %63 = builtin "cmp_eq_RawPointer"(%62 : $Builtin.RawPointer, %27 : $Builtin.RawPointer) : $Builtin.Int1, scope 1602 // user: %64
  cond_br %63, bb8, bb9, scope 1602               // id: %64

bb8:                                              // Preds: bb7
  br bb19, scope 1602                             // id: %65

bb9:                                              // Preds: bb7
  br bb7(%51 : $Builtin.RawPointer, %62 : $Builtin.RawPointer), scope 1602 // id: %66

bb10:                                             // Preds: bb1
  %67 = struct_extract %0 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1602 // users: %88, %81, %77, %76
  %68 = metatype $@thick UInt8.Type, scope 1602   // user: %69
  %69 = builtin "strideof_nonzero"<UInt8>(%68 : $@thick UInt8.Type) : $Builtin.Word, scope 1602 // users: %88, %105, %70
  %70 = builtin "zextOrBitCast_Word_Int64"(%69 : $Builtin.Word) : $Builtin.Int64, scope 1602 // user: %73
  %71 = struct_extract %4 : $Int, #Int._value, scope 1602 // user: %73
  %72 = integer_literal $Builtin.Int1, 0, scope 1602 // user: %73
  %73 = builtin "smul_with_overflow_Int64"(%71 : $Builtin.Int64, %70 : $Builtin.Int64, %72 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1602 // user: %74
  %74 = tuple_extract %73 : $(Builtin.Int64, Builtin.Int1), 0, scope 1602 // user: %75
  %75 = builtin "truncOrBitCast_Int64_Word"(%74 : $Builtin.Int64) : $Builtin.Word, scope 1602 // user: %76
  %76 = index_raw_pointer %67 : $Builtin.RawPointer, %75 : $Builtin.Word, scope 1602 // users: %89, %106, %77
  %77 = builtin "cmp_eq_RawPointer"(%67 : $Builtin.RawPointer, %76 : $Builtin.RawPointer) : $Builtin.Int1, scope 1602 // user: %78
  cond_br %77, bb11, bb12, scope 1602             // id: %78

bb11:                                             // Preds: bb10
  br bb19, scope 1602                             // id: %79

bb12:                                             // Preds: bb10
  %80 = struct_extract %2 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1602 // users: %94, %86
  %81 = pointer_to_address %67 : $Builtin.RawPointer to [strict] $*UInt8, scope 1602 // user: %82
  %82 = struct_element_addr %81 : $*UInt8, #UInt8._value, scope 1602 // user: %83
  %83 = load %82 : $*Builtin.Int8, scope 1602     // user: %84
  %84 = builtin "zext_Int8_Int16"(%83 : $Builtin.Int8) : $Builtin.Int16, scope 1602 // user: %85
  %85 = struct $UInt16 (%84 : $Builtin.Int16), scope 1602 // user: %87
  %86 = pointer_to_address %80 : $Builtin.RawPointer to [strict] $*UInt16, scope 1602 // user: %87
  store %85 to %86 : $*UInt16, scope 1602         // id: %87
  %88 = index_raw_pointer %67 : $Builtin.RawPointer, %69 : $Builtin.Word, scope 1602 // users: %94, %89
  %89 = builtin "cmp_eq_RawPointer"(%88 : $Builtin.RawPointer, %76 : $Builtin.RawPointer) : $Builtin.Int1, scope 1602 // user: %90
  cond_br %89, bb13, bb14, scope 1602             // id: %90

bb13:                                             // Preds: bb12
  br bb19, scope 1602                             // id: %91

bb14:                                             // Preds: bb12
  %92 = metatype $@thick UInt16.Type, scope 1602  // user: %93
  %93 = builtin "strideof_nonzero"<UInt16>(%92 : $@thick UInt16.Type) : $Builtin.Word, scope 1602 // user: %97
  br bb15(%80 : $Builtin.RawPointer, %88 : $Builtin.RawPointer), scope 1602 // id: %94

// %95                                            // user: %97
// %96                                            // users: %98, %105
bb15(%95 : $Builtin.RawPointer, %96 : $Builtin.RawPointer): // Preds: bb17 bb14
  %97 = index_raw_pointer %95 : $Builtin.RawPointer, %93 : $Builtin.Word, scope 1602 // users: %109, %103
  %98 = pointer_to_address %96 : $Builtin.RawPointer to [strict] $*UInt8, scope 1602 // user: %99
  %99 = struct_element_addr %98 : $*UInt8, #UInt8._value, scope 1602 // user: %100
  %100 = load %99 : $*Builtin.Int8, scope 1602    // user: %101
  %101 = builtin "zext_Int8_Int16"(%100 : $Builtin.Int8) : $Builtin.Int16, scope 1602 // user: %102
  %102 = struct $UInt16 (%101 : $Builtin.Int16), scope 1602 // user: %104
  %103 = pointer_to_address %97 : $Builtin.RawPointer to [strict] $*UInt16, scope 1602 // user: %104
  store %102 to %103 : $*UInt16, scope 1602       // id: %104
  %105 = index_raw_pointer %96 : $Builtin.RawPointer, %69 : $Builtin.Word, scope 1602 // users: %109, %106
  %106 = builtin "cmp_eq_RawPointer"(%105 : $Builtin.RawPointer, %76 : $Builtin.RawPointer) : $Builtin.Int1, scope 1602 // user: %107
  cond_br %106, bb16, bb17, scope 1602            // id: %107

bb16:                                             // Preds: bb15
  br bb19, scope 1602                             // id: %108

bb17:                                             // Preds: bb15
  br bb15(%97 : $Builtin.RawPointer, %105 : $Builtin.RawPointer), scope 1602 // id: %109

bb18:                                             // Preds: bb0
  %110 = integer_literal $Builtin.Int64, 1, scope 1602 // user: %111
  %111 = builtin "ssub_with_overflow_Int64"(%10 : $Builtin.Int64, %110 : $Builtin.Int64, %13 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1602 // users: %113, %112
  %112 = tuple_extract %111 : $(Builtin.Int64, Builtin.Int1), 0, scope 1602 // users: %125, %116
  %113 = tuple_extract %111 : $(Builtin.Int64, Builtin.Int1), 1, scope 1602 // user: %114
  cond_fail %113 : $Builtin.Int1, scope 1602      // id: %114
  %115 = integer_literal $Builtin.Int32, 0, scope 1602 // user: %138
  %116 = builtin "s_to_u_checked_conversion_Int64"(%112 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1602 // users: %118, %117
  %117 = tuple_extract %116 : $(Builtin.Int64, Builtin.Int1), 0, scope 1602 // user: %121
  %118 = tuple_extract %116 : $(Builtin.Int64, Builtin.Int1), 1, scope 1602 // user: %119
  cond_fail %118 : $Builtin.Int1, scope 1602      // id: %119
  %120 = integer_literal $Builtin.Int64, 64, scope 1602 // user: %121
  %121 = builtin "cmp_ult_Int64"(%117 : $Builtin.Int64, %120 : $Builtin.Int64) : $Builtin.Int1, scope 1602 // user: %122
  %122 = builtin "xor_Int1"(%121 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 1602 // user: %123
  cond_fail %122 : $Builtin.Int1, scope 1602      // id: %123
  %124 = struct_extract %4 : $Int, #Int._value, scope 1602 // user: %125
  %125 = builtin "shl_Int64"(%124 : $Builtin.Int64, %112 : $Builtin.Int64) : $Builtin.Int64, scope 1602 // user: %126
  %126 = builtin "s_to_u_checked_conversion_Int64"(%125 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1602 // users: %128, %127
  %127 = tuple_extract %126 : $(Builtin.Int64, Builtin.Int1), 0, scope 1602 // users: %138, %136
  %128 = tuple_extract %126 : $(Builtin.Int64, Builtin.Int1), 1, scope 1602 // user: %129
  cond_fail %128 : $Builtin.Int1, scope 1602      // id: %129
  debug_value %2 : $UnsafeMutableRawPointer, scope 1602 // id: %130
  debug_value %0 : $UnsafeMutableRawPointer, scope 1602 // id: %131
  %132 = struct_extract %2 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1602 // users: %138, %133
  debug_value %132 : $Builtin.RawPointer, scope 1602 // id: %133
  %134 = struct_extract %0 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1602 // users: %138, %135
  debug_value %134 : $Builtin.RawPointer, scope 1602 // id: %135
  debug_value %127 : $Builtin.Int64, scope 1602   // id: %136
  %137 = integer_literal $Builtin.Int1, 0, scope 1602 // user: %138
  %138 = builtin "int_memcpy_RawPointer_RawPointer_Int64"(%132 : $Builtin.RawPointer, %134 : $Builtin.RawPointer, %127 : $Builtin.Int64, %115 : $Builtin.Int32, %137 : $Builtin.Int1) : $(), scope 1602
  br bb19, scope 1602                             // id: %139

bb19:                                             // Preds: bb16 bb13 bb11 bb8 bb5 bb3 bb18
  %140 = tuple (), scope 1602                     // user: %141
  return %140 : $(), scope 1602                   // id: %141
}


// specialized _cocoaStringReadAll(AnyObject, UnsafeMutablePointer<UInt16>) -> ()
sil [fragile] [noinline] [_semantics "stdlib_binary_only"] @_TTSfq4g_n___TFs19_cocoaStringReadAllFTPs9AnyObject_GSpVs6UInt16__T_ : $@convention(thin) (@guaranteed AnyObject, UnsafeMutablePointer<UInt16>) -> ()

sil_scope 1603 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferg6_valueGSpx_ : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars> }

// specialized _HeapBuffer._value.getter
sil shared_external [fragile] @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferg6_valueGSpx_ : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars> {
// %0                                             // users: %27, %26, %25, %1
bb0(%0 : $_HeapBuffer<_StringBufferIVars, UInt16>):
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1603 // id: %1
  %2 = metatype $@thick HeapObject.Type, scope 1603 // user: %3
  %3 = builtin "sizeof"<HeapObject>(%2 : $@thick HeapObject.Type) : $Builtin.Word, scope 1603 // user: %4
  %4 = builtin "zextOrBitCast_Word_Int64"(%3 : $Builtin.Word) : $Builtin.Int64, scope 1603 // user: %9
  %5 = metatype $@thick _StringBufferIVars.Type, scope 1603 // user: %6
  %6 = builtin "alignof"<_StringBufferIVars>(%5 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1603 // user: %7
  %7 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64, scope 1603 // users: %17, %9
  %8 = integer_literal $Builtin.Int1, -1, scope 1603 // users: %36, %9
  %9 = builtin "uadd_with_overflow_Int64"(%4 : $Builtin.Int64, %7 : $Builtin.Int64, %8 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1603 // users: %11, %10
  %10 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 0, scope 1603 // user: %15
  %11 = tuple_extract %9 : $(Builtin.Int64, Builtin.Int1), 1, scope 1603 // user: %12
  cond_fail %11 : $Builtin.Int1, scope 1603       // id: %12
  %13 = integer_literal $Builtin.Int64, 1, scope 1603 // users: %17, %15
  %14 = integer_literal $Builtin.Int1, 0, scope 1603 // users: %17, %15
  %15 = builtin "usub_with_overflow_Int64"(%10 : $Builtin.Int64, %13 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1603 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 1603 // user: %21
  %17 = builtin "usub_with_overflow_Int64"(%7 : $Builtin.Int64, %13 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1603 // user: %18
  %18 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 0, scope 1603 // user: %20
  %19 = integer_literal $Builtin.Int64, -1, scope 1603 // user: %20
  %20 = builtin "xor_Int64"(%18 : $Builtin.Int64, %19 : $Builtin.Int64) : $Builtin.Int64, scope 1603 // user: %21
  %21 = builtin "and_Int64"(%16 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 1603 // user: %22
  %22 = builtin "u_to_s_checked_conversion_Int64"(%21 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1603 // users: %29, %23
  %23 = tuple_extract %22 : $(Builtin.Int64, Builtin.Int1), 1, scope 1603 // user: %24
  cond_fail %23 : $Builtin.Int1, scope 1603       // id: %24
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1603 // id: %25
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1603 // id: %26
  %27 = struct_extract %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1603 // users: %30, %28
  switch_enum %27 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb2, case #Optional.some!enumelt.1: bb1, scope 1603 // id: %28

bb1:                                              // Preds: bb0
  %29 = tuple_extract %22 : $(Builtin.Int64, Builtin.Int1), 0, scope 1603 // user: %32
  %30 = unchecked_enum_data %27 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1603 // user: %31
  %31 = ref_to_raw_pointer %30 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1603 // user: %33
  %32 = builtin "truncOrBitCast_Int64_Word"(%29 : $Builtin.Int64) : $Builtin.Word, scope 1603 // user: %33
  %33 = index_raw_pointer %31 : $Builtin.RawPointer, %32 : $Builtin.Word, scope 1603 // user: %34
  %34 = struct $UnsafeMutablePointer<_StringBufferIVars> (%33 : $Builtin.RawPointer), scope 1603 // user: %35
  return %34 : $UnsafeMutablePointer<_StringBufferIVars>, scope 1603 // id: %35

bb2:                                              // Preds: bb0
  cond_fail %8 : $Builtin.Int1, scope 1603        // id: %36
  unreachable, scope 1603                         // id: %37
}

sil_scope 1604 {  parent @_TFVs13_StringBufferg8capacitySi : $@convention(method) (@guaranteed _StringBuffer) -> Int }
sil_scope 1605 {  parent 1604 }
sil_scope 1606 {  parent 1511 inlined_at 1605 }

// _StringBuffer.capacity.getter
sil public_external [fragile] @_TFVs13_StringBufferg8capacitySi : $@convention(method) (@guaranteed _StringBuffer) -> Int {
// %0                                             // users: %43, %2, %1
bb0(%0 : $_StringBuffer):
  debug_value %0 : $_StringBuffer, scope 1604     // id: %1
  %2 = struct_extract %0 : $_StringBuffer, #_StringBuffer._storage, scope 1604 // users: %30, %29, %28, %4, %3
  debug_value %2 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1606 // id: %3
  debug_value %2 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1606 // id: %4
  %5 = metatype $@thick HeapObject.Type, scope 1606 // user: %6
  %6 = builtin "sizeof"<HeapObject>(%5 : $@thick HeapObject.Type) : $Builtin.Word, scope 1606 // user: %7
  %7 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64, scope 1606 // user: %12
  %8 = metatype $@thick _StringBufferIVars.Type, scope 1606 // user: %9
  %9 = builtin "alignof"<_StringBufferIVars>(%8 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 1606 // user: %10
  %10 = builtin "zextOrBitCast_Word_Int64"(%9 : $Builtin.Word) : $Builtin.Int64, scope 1606 // users: %20, %12
  %11 = integer_literal $Builtin.Int1, -1, scope 1606 // users: %47, %32, %12
  %12 = builtin "uadd_with_overflow_Int64"(%7 : $Builtin.Int64, %10 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1606 // users: %14, %13
  %13 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 0, scope 1606 // user: %18
  %14 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 1, scope 1606 // user: %15
  cond_fail %14 : $Builtin.Int1, scope 1606       // id: %15
  %16 = integer_literal $Builtin.Int64, 1, scope 1606 // users: %44, %20, %18
  %17 = integer_literal $Builtin.Int1, 0, scope 1606 // users: %20, %18
  %18 = builtin "usub_with_overflow_Int64"(%13 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1606 // user: %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 1606 // user: %24
  %20 = builtin "usub_with_overflow_Int64"(%10 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1606 // user: %21
  %21 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 0, scope 1606 // user: %23
  %22 = integer_literal $Builtin.Int64, -1, scope 1606 // user: %23
  %23 = builtin "xor_Int64"(%21 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int64, scope 1606 // user: %24
  %24 = builtin "and_Int64"(%19 : $Builtin.Int64, %23 : $Builtin.Int64) : $Builtin.Int64, scope 1606 // user: %25
  %25 = builtin "u_to_s_checked_conversion_Int64"(%24 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1606 // users: %34, %26
  %26 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 1, scope 1606 // user: %27
  cond_fail %26 : $Builtin.Int1, scope 1606       // id: %27
  debug_value %2 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1606 // id: %28
  debug_value %2 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 1606 // id: %29
  %30 = struct_extract %2 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 1606 // users: %31, %35
  switch_enum %30 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, scope 1606 // id: %31

bb1:                                              // Preds: bb0
  cond_fail %11 : $Builtin.Int1, scope 1606       // id: %32
  unreachable, scope 1606                         // id: %33

bb2:                                              // Preds: bb0
  %34 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 0, scope 1606 // user: %37
  %35 = unchecked_enum_data %30 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 1606 // user: %36
  %36 = ref_to_raw_pointer %35 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1606 // user: %38
  %37 = builtin "truncOrBitCast_Int64_Word"(%34 : $Builtin.Int64) : $Builtin.Word, scope 1606 // user: %38
  %38 = index_raw_pointer %36 : $Builtin.RawPointer, %37 : $Builtin.Word, scope 1606 // user: %39
  %39 = pointer_to_address %38 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 1604 // user: %40
  %40 = struct_element_addr %39 : $*_StringBufferIVars, #_StringBufferIVars.capacityAndElementShift, scope 1604 // user: %41
  %41 = struct_element_addr %40 : $*Int, #Int._value, scope 1604 // user: %42
  %42 = load %41 : $*Builtin.Int64, scope 1604    // users: %50, %44
  debug_value %0 : $_StringBuffer, scope 1604     // id: %43
  %44 = builtin "and_Int64"(%42 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int64, scope 1604 // users: %51, %46
  %45 = integer_literal $Builtin.Int64, 64, scope 1604 // user: %46
  %46 = builtin "cmp_ult_Int64"(%44 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1, scope 1604 // user: %47
  %47 = builtin "xor_Int1"(%46 : $Builtin.Int1, %11 : $Builtin.Int1) : $Builtin.Int1, scope 1604 // user: %48
  cond_fail %47 : $Builtin.Int1, scope 1604       // id: %48
  %49 = integer_literal $Builtin.Int64, -2, scope 1604 // user: %50
  %50 = builtin "and_Int64"(%42 : $Builtin.Int64, %49 : $Builtin.Int64) : $Builtin.Int64, scope 1604 // user: %51
  %51 = builtin "ashr_Int64"(%50 : $Builtin.Int64, %44 : $Builtin.Int64) : $Builtin.Int64, scope 1604 // user: %52
  %52 = struct $Int (%51 : $Builtin.Int64), scope 1604 // user: %53
  return %52 : $Int, scope 1604                   // id: %53
}

sil_scope 1607 {  parent @_TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
sil public_external [fragile] @_TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(method) <Element> (Int, Int, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %28, %5, %3
// %1                                             // users: %6, %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin _ContiguousArrayBuffer<Element>.Type):
  debug_value %0 : $Int, scope 1607               // id: %3
  debug_value %1 : $Int, scope 1607               // id: %4
  %5 = struct_extract %0 : $Int, #Int._value, scope 1607 // users: %9, %7
  %6 = struct_extract %1 : $Int, #Int._value, scope 1607 // users: %10, %7
  %7 = builtin "cmp_sge_Int64"(%6 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int1, scope 1607 // user: %8
  cond_br %7, bb2, bb1, scope 1607                // id: %8

bb1:                                              // Preds: bb0
  br bb3(%5 : $Builtin.Int64), scope 1607         // id: %9

bb2:                                              // Preds: bb0
  br bb3(%6 : $Builtin.Int64), scope 1607         // id: %10

// %11                                            // users: %15, %12
bb3(%11 : $Builtin.Int64):                        // Preds: bb2 bb1
  %12 = struct $Int (%11 : $Builtin.Int64), scope 1607 // users: %21, %13
  debug_value %12 : $Int, scope 1607              // id: %13
  %14 = integer_literal $Builtin.Int64, 0, scope 1607 // user: %15
  %15 = builtin "cmp_eq_Int64"(%11 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 1607 // user: %16
  cond_br %15, bb5, bb4, scope 1607               // id: %16

bb4:                                              // Preds: bb3
  // function_ref ManagedBufferPointer.init(_uncheckedBufferClass : AnyObject.Type, minimumCapacity : Int) -> ManagedBufferPointer<A, B>
  %17 = function_ref @_TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1607 // user: %21
  %18 = metatype $@thin ManagedBufferPointer<_ArrayBody, Element>.Type, scope 1607 // user: %21
  %19 = metatype $@thick _ContiguousArrayStorage<Element>.Type, scope 1607 // user: %20
  %20 = init_existential_metatype %19 : $@thick _ContiguousArrayStorage<Element>.Type, $@thick AnyObject.Type, scope 1607 // user: %21
  %21 = apply %17<_ArrayBody, Element>(%20, %12, %18) : $@convention(method) <τ_0_0, τ_0_1> (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1607 // users: %29, %27, %30, %26, %24, %22
  %22 = struct_extract %21 : $ManagedBufferPointer<_ArrayBody, Element>, #ManagedBufferPointer._nativeBuffer, scope 1607 // user: %31
  // function_ref _ContiguousArrayBuffer._initStorageHeader(count : Int, capacity : Int) -> ()
  %23 = function_ref @_TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1607 // user: %28
  %24 = struct $_ContiguousArrayBuffer<Element> (%21 : $ManagedBufferPointer<_ArrayBody, Element>), scope 1607 // user: %28
  // function_ref ManagedBufferPointer.capacity.getter
  %25 = function_ref @_TFVs20ManagedBufferPointerg8capacitySi : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> Int, scope 1607 // user: %26
  %26 = apply %25<_ArrayBody, Element>(%21) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> Int, scope 1607 // user: %28
  retain_value %21 : $ManagedBufferPointer<_ArrayBody, Element>, scope 1607 // id: %27
  %28 = apply %23<Element>(%0, %26, %24) : $@convention(method) <τ_0_0> (Int, Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1607
  release_value %21 : $ManagedBufferPointer<_ArrayBody, Element>, scope 1607 // id: %29
  fix_lifetime %21 : $ManagedBufferPointer<_ArrayBody, Element>, scope 1607 // id: %30
  br bb6(%22 : $Builtin.NativeObject), scope 1607 // id: %31

bb5:                                              // Preds: bb3
  // function_ref _ContiguousArrayBuffer.init() -> _ContiguousArrayBuffer<A>
  %32 = function_ref @_TFVs22_ContiguousArrayBufferCfT_GS_x_ : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1607 // user: %34
  %33 = metatype $@thin _ContiguousArrayBuffer<Element>.Type, scope 1607 // user: %34
  %34 = apply %32<Element>(%33) : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1607 // user: %35
  %35 = struct_extract %34 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1607 // user: %36
  %36 = struct_extract %35 : $ManagedBufferPointer<_ArrayBody, Element>, #ManagedBufferPointer._nativeBuffer, scope 1607 // user: %37
  br bb6(%36 : $Builtin.NativeObject), scope 1607 // id: %37

// %38                                            // user: %39
bb6(%38 : $Builtin.NativeObject):                 // Preds: bb5 bb4
  %39 = struct $ManagedBufferPointer<_ArrayBody, Element> (%38 : $Builtin.NativeObject), scope 1607 // user: %40
  %40 = struct $_ContiguousArrayBuffer<Element> (%39 : $ManagedBufferPointer<_ArrayBody, Element>), scope 1607 // user: %41
  return %40 : $_ContiguousArrayBuffer<Element>, scope 1607 // id: %41
}

sil_scope 1608 {  parent @_TFVs22_ContiguousArrayBuffers5countSi : $@convention(method) <τ_0_0> (Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> () }

// _ContiguousArrayBuffer.count.setter
sil public_external [fragile] @_TFVs22_ContiguousArrayBuffers5countSi : $@convention(method) <Element> (Int, @guaranteed _ContiguousArrayBuffer<Element>) -> () {
// %0                                             // users: %13, %10, %2
// %1                                             // users: %4, %3
bb0(%0 : $Int, %1 : $_ContiguousArrayBuffer<Element>):
  debug_value %0 : $Int, scope 1608               // id: %2
  debug_value %1 : $_ContiguousArrayBuffer<Element>, scope 1608 // id: %3
  %4 = struct_extract %1 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1608 // user: %6
  // function_ref ManagedBufferPointer._headerPointer.getter
  %5 = function_ref @_TFVs20ManagedBufferPointerg14_headerPointerGSpx_ : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0>, scope 1608 // user: %6
  %6 = apply %5<_ArrayBody, Element>(%4) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutablePointer<τ_0_0>, scope 1608 // user: %7
  %7 = struct_extract %6 : $UnsafeMutablePointer<_ArrayBody>, #UnsafeMutablePointer._rawValue, scope 1608 // user: %8
  %8 = pointer_to_address %7 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1608 // users: %11, %9
  debug_value_addr %8 : $*_ArrayBody, scope 1608  // id: %9
  debug_value %0 : $Int, scope 1608               // id: %10
  %11 = struct_element_addr %8 : $*_ArrayBody, #_ArrayBody._storage, scope 1608 // user: %12
  %12 = struct_element_addr %11 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1608 // user: %13
  store %0 to %12 : $*Int, scope 1608             // id: %13
  %14 = tuple (), scope 1608                      // user: %15
  return %14 : $(), scope 1608                    // id: %15
}

sil_scope 1609 {  parent @_TFVs22_ContiguousArrayBufferCfCs27_ContiguousArrayStorageBaseGS_x_ : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init(_ContiguousArrayStorageBase) -> _ContiguousArrayBuffer<A>
sil hidden_external [fragile] @_TFVs22_ContiguousArrayBufferCfCs27_ContiguousArrayStorageBaseGS_x_ : $@convention(method) <Element> (@owned _ContiguousArrayStorageBase, @thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
// %0                                             // users: %5, %2
bb0(%0 : $_ContiguousArrayStorageBase, %1 : $@thin _ContiguousArrayBuffer<Element>.Type):
  debug_value %0 : $_ContiguousArrayStorageBase, scope 1609 // id: %2
  // function_ref ManagedBufferPointer.init(_uncheckedUnsafeBufferObject : AnyObject) -> ManagedBufferPointer<A, B>
  %3 = function_ref @_TFVs20ManagedBufferPointerCfT28_uncheckedUnsafeBufferObjectPs9AnyObject__GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1609 // user: %6
  %4 = metatype $@thin ManagedBufferPointer<_ArrayBody, Element>.Type, scope 1609 // user: %6
  %5 = init_existential_ref %0 : $_ContiguousArrayStorageBase : $_ContiguousArrayStorageBase, $AnyObject, scope 1609 // user: %6
  %6 = apply %3<_ArrayBody, Element>(%5, %4) : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1609 // user: %7
  %7 = struct $_ContiguousArrayBuffer<Element> (%6 : $ManagedBufferPointer<_ArrayBody, Element>), scope 1609 // user: %8
  return %7 : $_ContiguousArrayBuffer<Element>, scope 1609 // id: %8
}

sil_scope 1610 {  parent @_TFVs12_ArrayBuffer20isUniquelyReferencedfT_Sb : $@convention(method) <τ_0_0> (@inout _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer.isUniquelyReferenced() -> Bool
sil hidden_external [fragile] @_TFVs12_ArrayBuffer20isUniquelyReferencedfT_Sb : $@convention(method) <Element> (@inout _ArrayBuffer<Element>) -> Bool {
// %0                                             // users: %22, %14, %7, %1
bb0(%0 : $*_ArrayBuffer<Element>):
  debug_value_addr %0 : $*_ArrayBuffer<Element>, scope 1610 // id: %1
  // function_ref _isClassOrObjCExistential<A> (A.Type) -> Bool
  %2 = function_ref @_TFs25_isClassOrObjCExistentialurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1610 // user: %4
  %3 = metatype $@thick Element.Type, scope 1610  // user: %4
  %4 = apply %2<Element>(%3) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1610 // user: %5
  %5 = struct_extract %4 : $Bool, #Bool._value, scope 1610 // user: %6
  cond_br %5, bb2, bb1, scope 1610                // id: %6

bb1:                                              // Preds: bb0
  %7 = struct_element_addr %0 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 1610 // users: %9, %8
  debug_value_addr %7 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1610 // id: %8
  %9 = struct_element_addr %7 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1610 // user: %10
  %10 = unchecked_addr_cast %9 : $*Builtin.BridgeObject to $*Builtin.NativeObject, scope 1610 // user: %11
  %11 = is_unique %10 : $*Builtin.NativeObject, scope 1610 // user: %12
  %12 = struct $Bool (%11 : $Builtin.Int1), scope 1610 // user: %13
  br bb5(%12 : $Bool), scope 1610                 // id: %13

bb2:                                              // Preds: bb0
  %14 = struct_element_addr %0 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 1610 // users: %16, %15
  debug_value_addr %14 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1610 // id: %15
  %16 = struct_element_addr %14 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1610 // user: %17
  %17 = is_unique %16 : $*Builtin.BridgeObject, scope 1610 // user: %18
  cond_br %17, bb4, bb3, scope 1610               // id: %18

bb3:                                              // Preds: bb2
  %19 = integer_literal $Builtin.Int1, 0, scope 1610 // user: %20
  %20 = struct $Bool (%19 : $Builtin.Int1), scope 1610 // user: %21
  br bb5(%20 : $Bool), scope 1610                 // id: %21

bb4:                                              // Preds: bb2
  %22 = load %0 : $*_ArrayBuffer<Element>, scope 1610 // users: %26, %24, %25
  // function_ref _ArrayBuffer._isNative.getter
  %23 = function_ref @_TFVs12_ArrayBufferg9_isNativeSb : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 1610 // user: %25
  retain_value %22 : $_ArrayBuffer<Element>, scope 1610 // id: %24
  %25 = apply %23<Element>(%22) : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool, scope 1610 // user: %27
  release_value %22 : $_ArrayBuffer<Element>, scope 1610 // id: %26
  br bb5(%25 : $Bool), scope 1610                 // id: %27

// %28                                            // user: %29
bb5(%28 : $Bool):                                 // Preds: bb4 bb3 bb1
  return %28 : $Bool, scope 1610                  // id: %29
}

sil_scope 1611 {  parent @_TFVs12_ArrayBufferg9_isNativeSb : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> Bool }

// _ArrayBuffer._isNative.getter
sil public_external [fragile] @_TFVs12_ArrayBufferg9_isNativeSb : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> Bool {
// %0                                             // users: %9, %1
bb0(%0 : $_ArrayBuffer<Element>):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1611 // id: %1
  // function_ref _isClassOrObjCExistential<A> (A.Type) -> Bool
  %2 = function_ref @_TFs25_isClassOrObjCExistentialurFMxSb : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1611 // user: %4
  %3 = metatype $@thick Element.Type, scope 1611  // user: %4
  %4 = apply %2<Element>(%3) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool, scope 1611 // user: %5
  %5 = struct_extract %4 : $Bool, #Bool._value, scope 1611 // user: %6
  cond_br %5, bb2, bb1, scope 1611                // id: %6

bb1:                                              // Preds: bb0
  %7 = integer_literal $Builtin.Int1, -1, scope 1611 // user: %8
  br bb3(%7 : $Builtin.Int1), scope 1611          // id: %8

bb2:                                              // Preds: bb0
  %9 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 1611 // users: %11, %10
  %10 = struct_extract %9 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1611 // users: %13, %12
  debug_value %9 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1611 // id: %11
  debug_value %10 : $Builtin.BridgeObject, scope 1611 // id: %12
  %13 = bridge_object_to_word %10 : $Builtin.BridgeObject to $Builtin.Word, scope 1611 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 1611 // user: %16
  %15 = integer_literal $Builtin.Int64, -4611686018427387903, scope 1611 // user: %16
  %16 = builtin "and_Int64"(%14 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int64, scope 1611 // user: %18
  %17 = integer_literal $Builtin.Int64, 0, scope 1611 // user: %18
  %18 = builtin "cmp_eq_Int64"(%16 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int1, scope 1611 // user: %19
  br bb3(%18 : $Builtin.Int1), scope 1611         // id: %19

// %20                                            // user: %21
bb3(%20 : $Builtin.Int1):                         // Preds: bb2 bb1
  %21 = struct $Bool (%20 : $Builtin.Int1), scope 1611 // user: %22
  return %21 : $Bool, scope 1611                  // id: %22
}

sil_scope 1612 {  parent @_TFVs12_ArrayBufferg10_nonNativePs12_NSArrayCore_ : $@convention(method) <τ_0_0> (@guaranteed _ArrayBuffer<τ_0_0>) -> @owned _NSArrayCore }

// _ArrayBuffer._nonNative.getter
sil public_external [fragile] [always_inline] @_TFVs12_ArrayBufferg10_nonNativePs12_NSArrayCore_ : $@convention(method) <Element> (@guaranteed _ArrayBuffer<Element>) -> @owned _NSArrayCore {
// %0                                             // users: %6, %2, %1
bb0(%0 : $_ArrayBuffer<Element>):
  debug_value %0 : $_ArrayBuffer<Element>, scope 1612 // id: %1
  %2 = struct_extract %0 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage, scope 1612 // users: %4, %3
  %3 = struct_extract %2 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1612 // user: %5
  debug_value %2 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1612 // id: %4
  %5 = bridge_object_to_ref %3 : $Builtin.BridgeObject to $_NSArrayCore, scope 1612 // user: %7
  retain_value %0 : $_ArrayBuffer<Element>, scope 1612 // id: %6
  return %5 : $_NSArrayCore, scope 1612           // id: %7
}

sil_scope 1613 {  parent @_TFVs22_ContiguousArrayBufferg5countSi : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.count.getter
sil public_external [fragile] @_TFVs22_ContiguousArrayBufferg5countSi : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
// %0                                             // users: %2, %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  debug_value %0 : $_ContiguousArrayBuffer<Element>, scope 1613 // id: %1
  %2 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1613 // user: %4
  // function_ref ManagedBufferPointer.header.nativeOwningAddressor
  %3 = function_ref @_TFVs20ManagedBufferPointerlo6headerx : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> (UnsafePointer<τ_0_0>, @owned Builtin.NativeObject), scope 1613 // user: %4
  %4 = apply %3<_ArrayBody, Element>(%2) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> (UnsafePointer<τ_0_0>, @owned Builtin.NativeObject), scope 1613 // users: %14, %6, %5
  %5 = tuple_extract %4 : $(UnsafePointer<_ArrayBody>, Builtin.NativeObject), 0, scope 1613 // user: %7
  %6 = tuple_extract %4 : $(UnsafePointer<_ArrayBody>, Builtin.NativeObject), 1, scope 1613 // user: %9
  %7 = struct_extract %5 : $UnsafePointer<_ArrayBody>, #UnsafePointer._rawValue, scope 1613 // user: %8
  %8 = pointer_to_address %7 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1613 // user: %9
  %9 = mark_dependence %8 : $*_ArrayBody on %6 : $Builtin.NativeObject, scope 1613 // user: %10
  %10 = struct_element_addr %9 : $*_ArrayBody, #_ArrayBody._storage, scope 1613 // user: %11
  %11 = struct_element_addr %10 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1613 // user: %12
  %12 = struct_element_addr %11 : $*Int, #Int._value, scope 1613 // user: %13
  %13 = load %12 : $*Builtin.Int64, scope 1613    // user: %15
  release_value %4 : $(UnsafePointer<_ArrayBody>, Builtin.NativeObject), scope 1613 // id: %14
  %15 = builtin "assumeNonNegative_Int64"(%13 : $Builtin.Int64) : $Builtin.Int64, scope 1613 // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64), scope 1613 // user: %17
  return %16 : $Int, scope 1613                   // id: %17
}

sil_scope 1614 {  parent @_TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols___TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, Int, Int) -> @owned _ContiguousArrayBuffer<Employee> }
sil_scope 1615 {  parent @_TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols___TFs35_forceCreateUniqueMutableBufferImpluRxs20_ArrayBufferProtocolrFTRx14countForBufferSi14minNewCapacitySi16requiredCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, Int, Int, Int) -> @owned _ContiguousArrayBuffer<Employee> }
sil_scope 1616 {  parent 1614 }
sil_scope 1617 {  parent 1615 inlined_at 1616 }
sil_scope 1618 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g8capacitySi : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 1619 {  parent 1618 }
sil_scope 1620 {  parent 1383 inlined_at 1619 }
sil_scope 1621 {  parent 1620 }
sil_scope 1622 {  parent 1228 inlined_at 1621 }
sil_scope 1623 {  parent 1615 }
sil_scope 1624 {  parent 1622 inlined_at 1623 }
sil_scope 1625 {  parent 1624 inlined_at 1616 }
sil_scope 1626 {  parent 1620 }
sil_scope 1627 {  parent 1382 inlined_at 1626 }
sil_scope 1628 {  parent 1627 inlined_at 1623 }
sil_scope 1629 {  parent 1628 inlined_at 1616 }
sil_scope 1630 {  parent 1361 inlined_at 1381 }
sil_scope 1631 {  parent 1630 inlined_at 1626 }
sil_scope 1632 {  parent 1631 inlined_at 1623 }
sil_scope 1633 {  parent 1632 inlined_at 1616 }
sil_scope 1634 {  parent 1390 inlined_at 1626 }
sil_scope 1635 {  parent 1634 inlined_at 1623 }
sil_scope 1636 {  parent 1635 inlined_at 1616 }
sil_scope 1637 {  parent 1380 inlined_at 1626 }
sil_scope 1638 {  parent 1637 inlined_at 1623 }
sil_scope 1639 {  parent 1638 inlined_at 1616 }
sil_scope 1640 {  parent 1615 }
sil_scope 1641 {  parent 1627 inlined_at 1640 }
sil_scope 1642 {  parent 1641 inlined_at 1616 }
sil_scope 1643 {  parent 1634 inlined_at 1640 }
sil_scope 1644 {  parent 1643 inlined_at 1616 }
sil_scope 1645 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(method) (Int, Int, @thin _ContiguousArrayBuffer<Employee>.Type) -> @owned _ContiguousArrayBuffer<Employee> }
sil_scope 1646 {  parent 1617 }
sil_scope 1647 {  parent 1645 inlined_at 1646 }
sil_scope 1648 {  parent 1615 }
sil_scope 1649 {  parent 1627 inlined_at 1648 }
sil_scope 1650 {  parent 1649 inlined_at 1616 }
sil_scope 1651 {  parent 1634 inlined_at 1648 }
sil_scope 1652 {  parent 1651 inlined_at 1616 }

// specialized _forceCreateUniqueMutableBuffer<A where ...> (inout A, countForNewBuffer : Int, minNewCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
sil shared [noinline] @_TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols___TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, Int, Int) -> @owned _ContiguousArrayBuffer<Employee> {
// %0                                             // users: %10, %6, %3
// %1                                             // users: %69, %7, %4
// %2                                             // users: %50, %9, %8, %5
bb0(%0 : $*_ArrayBuffer<Employee>, %1 : $Int, %2 : $Int):
  debug_value_addr %0 : $*_ArrayBuffer<Employee>, scope 1614 // id: %3
  debug_value %1 : $Int, scope 1614               // id: %4
  debug_value %2 : $Int, scope 1614               // id: %5
  debug_value_addr %0 : $*_ArrayBuffer<Employee>, scope 1617 // id: %6
  debug_value %1 : $Int, scope 1617               // id: %7
  debug_value %2 : $Int, scope 1617               // id: %8
  debug_value %2 : $Int, scope 1617               // id: %9
  %10 = struct_element_addr %0 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 1617 // user: %11
  %11 = struct_element_addr %10 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1617 // user: %12
  %12 = load %11 : $*Builtin.BridgeObject, scope 1617 // users: %15, %13
  %13 = unchecked_ref_cast %12 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1625 // user: %44
  %14 = builtin "onFastPath"() : $(), scope 1629
  %15 = ref_to_raw_pointer %12 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1633 // user: %42
  %16 = builtin "onFastPath"() : $(), scope 1636
  %17 = metatype $@thick HeapObject.Type, scope 1636 // user: %18
  %18 = builtin "sizeof"<HeapObject>(%17 : $@thick HeapObject.Type) : $Builtin.Word, scope 1636 // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 1636 // user: %24
  %20 = metatype $@thick _ArrayBody.Type, scope 1636 // user: %21
  %21 = builtin "alignof"<_ArrayBody>(%20 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1636 // user: %22
  %22 = builtin "zextOrBitCast_Word_Int64"(%21 : $Builtin.Word) : $Builtin.Int64, scope 1636 // users: %32, %24
  %23 = integer_literal $Builtin.Int1, -1, scope 1636 // users: %56, %24
  %24 = builtin "uadd_with_overflow_Int64"(%19 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1636 // users: %26, %25
  %25 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 0, scope 1636 // user: %30
  %26 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 1, scope 1636 // user: %27
  cond_fail %26 : $Builtin.Int1, scope 1636       // id: %27
  %28 = integer_literal $Builtin.Int64, 1, scope 1636 // users: %49, %32, %30
  %29 = integer_literal $Builtin.Int1, 0, scope 1636 // users: %32, %30
  %30 = builtin "usub_with_overflow_Int64"(%25 : $Builtin.Int64, %28 : $Builtin.Int64, %29 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1636 // user: %31
  %31 = tuple_extract %30 : $(Builtin.Int64, Builtin.Int1), 0, scope 1636 // user: %36
  %32 = builtin "usub_with_overflow_Int64"(%22 : $Builtin.Int64, %28 : $Builtin.Int64, %29 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1636 // user: %33
  %33 = tuple_extract %32 : $(Builtin.Int64, Builtin.Int1), 0, scope 1636 // user: %35
  %34 = integer_literal $Builtin.Int64, -1, scope 1636 // user: %35
  %35 = builtin "xor_Int64"(%33 : $Builtin.Int64, %34 : $Builtin.Int64) : $Builtin.Int64, scope 1636 // user: %36
  %36 = builtin "and_Int64"(%31 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int64, scope 1636 // user: %37
  %37 = builtin "u_to_s_checked_conversion_Int64"(%36 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1636 // users: %39, %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 1636 // user: %41
  %39 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 1, scope 1636 // user: %40
  cond_fail %39 : $Builtin.Int1, scope 1636       // id: %40
  %41 = builtin "truncOrBitCast_Int64_Word"(%38 : $Builtin.Int64) : $Builtin.Word, scope 1629 // user: %42
  %42 = index_raw_pointer %15 : $Builtin.RawPointer, %41 : $Builtin.Word, scope 1629 // user: %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1639 // user: %44
  %44 = mark_dependence %43 : $*_ArrayBody on %13 : $Builtin.NativeObject, scope 1639 // user: %45
  %45 = struct_element_addr %44 : $*_ArrayBody, #_ArrayBody._storage, scope 1639 // user: %46
  %46 = struct_element_addr %45 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1639 // user: %47
  %47 = struct_element_addr %46 : $*UInt, #UInt._value, scope 1639 // user: %48
  %48 = load %47 : $*Builtin.Int64, scope 1639    // user: %49
  %49 = builtin "lshr_Int64"(%48 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 1639 // users: %74, %56, %51
  %50 = struct_extract %2 : $Int, #Int._value, scope 1617 // users: %62, %71, %51
  %51 = builtin "cmp_sgt_Int64"(%50 : $Builtin.Int64, %49 : $Builtin.Int64) : $Builtin.Int1, scope 1617 // user: %52
  cond_br %51, bb1, bb6, scope 1617               // id: %52

bb1:                                              // Preds: bb0
  %53 = builtin "onFastPath"() : $(), scope 1642
  %54 = builtin "onFastPath"() : $(), scope 1644
  %55 = integer_literal $Builtin.Int64, 2, scope 1617 // user: %56
  %56 = builtin "smul_with_overflow_Int64"(%49 : $Builtin.Int64, %55 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1617 // users: %58, %57
  %57 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 0, scope 1617 // user: %60
  %58 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 1, scope 1617 // user: %59
  cond_fail %58 : $Builtin.Int1, scope 1617       // id: %59
  br bb2(%57 : $Builtin.Int64), scope 1617        // id: %60

// %61                                            // users: %64, %62
bb2(%61 : $Builtin.Int64):                        // Preds: bb6 bb1
  %62 = builtin "cmp_sge_Int64"(%61 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int1, scope 1617 // user: %63
  cond_br %62, bb3, bb5, scope 1617               // id: %63

bb3:                                              // Preds: bb2
  br bb4(%61 : $Builtin.Int64), scope 1617        // id: %64

// %65                                            // user: %66
bb4(%65 : $Builtin.Int64):                        // Preds: bb5 bb3
  %66 = struct $Int (%65 : $Builtin.Int64), scope 1617 // users: %69, %67
  debug_value %66 : $Int, scope 1617              // id: %67
  // function_ref specialized specialized _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
  %68 = function_ref @_TTSf4n_n_d___TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<Employee>, scope 1647 // user: %69
  %69 = apply %68(%1, %66) : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<Employee>, scope 1647 // user: %70
  return %69 : $_ContiguousArrayBuffer<Employee>, scope 1614 // id: %70

bb5:                                              // Preds: bb2
  br bb4(%50 : $Builtin.Int64), scope 1617        // id: %71

bb6:                                              // Preds: bb0
  %72 = builtin "onFastPath"() : $(), scope 1650
  %73 = builtin "onFastPath"() : $(), scope 1652
  br bb2(%49 : $Builtin.Int64), scope 1617        // id: %74
}

sil_scope 1653 {  parent @_TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols___TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<String>, Int, Int) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 1654 {  parent @_TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols___TFs35_forceCreateUniqueMutableBufferImpluRxs20_ArrayBufferProtocolrFTRx14countForBufferSi14minNewCapacitySi16requiredCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<String>, Int, Int, Int) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 1655 {  parent 1653 }
sil_scope 1656 {  parent 1654 inlined_at 1655 }
sil_scope 1657 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g8capacitySi : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1658 {  parent 1657 }
sil_scope 1659 {  parent 1032 inlined_at 1658 }
sil_scope 1660 {  parent 1659 }
sil_scope 1661 {  parent 507 inlined_at 1660 }
sil_scope 1662 {  parent 1654 }
sil_scope 1663 {  parent 1661 inlined_at 1662 }
sil_scope 1664 {  parent 1663 inlined_at 1655 }
sil_scope 1665 {  parent 1659 }
sil_scope 1666 {  parent 1031 inlined_at 1665 }
sil_scope 1667 {  parent 1666 inlined_at 1662 }
sil_scope 1668 {  parent 1667 inlined_at 1655 }
sil_scope 1669 {  parent 536 inlined_at 1030 }
sil_scope 1670 {  parent 1669 inlined_at 1665 }
sil_scope 1671 {  parent 1670 inlined_at 1662 }
sil_scope 1672 {  parent 1671 inlined_at 1655 }
sil_scope 1673 {  parent 1039 inlined_at 1665 }
sil_scope 1674 {  parent 1673 inlined_at 1662 }
sil_scope 1675 {  parent 1674 inlined_at 1655 }
sil_scope 1676 {  parent 1029 inlined_at 1665 }
sil_scope 1677 {  parent 1676 inlined_at 1662 }
sil_scope 1678 {  parent 1677 inlined_at 1655 }
sil_scope 1679 {  parent 1654 }
sil_scope 1680 {  parent 1666 inlined_at 1679 }
sil_scope 1681 {  parent 1680 inlined_at 1655 }
sil_scope 1682 {  parent 1673 inlined_at 1679 }
sil_scope 1683 {  parent 1682 inlined_at 1655 }
sil_scope 1684 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(method) (Int, Int, @thin _ContiguousArrayBuffer<String>.Type) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 1685 {  parent 1656 }
sil_scope 1686 {  parent 1684 inlined_at 1685 }
sil_scope 1687 {  parent 1654 }
sil_scope 1688 {  parent 1666 inlined_at 1687 }
sil_scope 1689 {  parent 1688 inlined_at 1655 }
sil_scope 1690 {  parent 1673 inlined_at 1687 }
sil_scope 1691 {  parent 1690 inlined_at 1655 }

// specialized _forceCreateUniqueMutableBuffer<A where ...> (inout A, countForNewBuffer : Int, minNewCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
sil shared [noinline] @_TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols___TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) (@inout _ArrayBuffer<String>, Int, Int) -> @owned _ContiguousArrayBuffer<String> {
// %0                                             // users: %10, %6, %3
// %1                                             // users: %69, %7, %4
// %2                                             // users: %50, %9, %8, %5
bb0(%0 : $*_ArrayBuffer<String>, %1 : $Int, %2 : $Int):
  debug_value_addr %0 : $*_ArrayBuffer<String>, scope 1653 // id: %3
  debug_value %1 : $Int, scope 1653               // id: %4
  debug_value %2 : $Int, scope 1653               // id: %5
  debug_value_addr %0 : $*_ArrayBuffer<String>, scope 1656 // id: %6
  debug_value %1 : $Int, scope 1656               // id: %7
  debug_value %2 : $Int, scope 1656               // id: %8
  debug_value %2 : $Int, scope 1656               // id: %9
  %10 = struct_element_addr %0 : $*_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 1656 // user: %11
  %11 = struct_element_addr %10 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1656 // user: %12
  %12 = load %11 : $*Builtin.BridgeObject, scope 1656 // users: %15, %13
  %13 = unchecked_ref_cast %12 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1664 // user: %44
  %14 = builtin "onFastPath"() : $(), scope 1668
  %15 = ref_to_raw_pointer %12 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1672 // user: %42
  %16 = builtin "onFastPath"() : $(), scope 1675
  %17 = metatype $@thick HeapObject.Type, scope 1675 // user: %18
  %18 = builtin "sizeof"<HeapObject>(%17 : $@thick HeapObject.Type) : $Builtin.Word, scope 1675 // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 1675 // user: %24
  %20 = metatype $@thick _ArrayBody.Type, scope 1675 // user: %21
  %21 = builtin "alignof"<_ArrayBody>(%20 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1675 // user: %22
  %22 = builtin "zextOrBitCast_Word_Int64"(%21 : $Builtin.Word) : $Builtin.Int64, scope 1675 // users: %32, %24
  %23 = integer_literal $Builtin.Int1, -1, scope 1675 // users: %56, %24
  %24 = builtin "uadd_with_overflow_Int64"(%19 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1675 // users: %26, %25
  %25 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 0, scope 1675 // user: %30
  %26 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 1, scope 1675 // user: %27
  cond_fail %26 : $Builtin.Int1, scope 1675       // id: %27
  %28 = integer_literal $Builtin.Int64, 1, scope 1675 // users: %49, %32, %30
  %29 = integer_literal $Builtin.Int1, 0, scope 1675 // users: %32, %30
  %30 = builtin "usub_with_overflow_Int64"(%25 : $Builtin.Int64, %28 : $Builtin.Int64, %29 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1675 // user: %31
  %31 = tuple_extract %30 : $(Builtin.Int64, Builtin.Int1), 0, scope 1675 // user: %36
  %32 = builtin "usub_with_overflow_Int64"(%22 : $Builtin.Int64, %28 : $Builtin.Int64, %29 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1675 // user: %33
  %33 = tuple_extract %32 : $(Builtin.Int64, Builtin.Int1), 0, scope 1675 // user: %35
  %34 = integer_literal $Builtin.Int64, -1, scope 1675 // user: %35
  %35 = builtin "xor_Int64"(%33 : $Builtin.Int64, %34 : $Builtin.Int64) : $Builtin.Int64, scope 1675 // user: %36
  %36 = builtin "and_Int64"(%31 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int64, scope 1675 // user: %37
  %37 = builtin "u_to_s_checked_conversion_Int64"(%36 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1675 // users: %39, %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 1675 // user: %41
  %39 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 1, scope 1675 // user: %40
  cond_fail %39 : $Builtin.Int1, scope 1675       // id: %40
  %41 = builtin "truncOrBitCast_Int64_Word"(%38 : $Builtin.Int64) : $Builtin.Word, scope 1668 // user: %42
  %42 = index_raw_pointer %15 : $Builtin.RawPointer, %41 : $Builtin.Word, scope 1668 // user: %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1678 // user: %44
  %44 = mark_dependence %43 : $*_ArrayBody on %13 : $Builtin.NativeObject, scope 1678 // user: %45
  %45 = struct_element_addr %44 : $*_ArrayBody, #_ArrayBody._storage, scope 1678 // user: %46
  %46 = struct_element_addr %45 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1678 // user: %47
  %47 = struct_element_addr %46 : $*UInt, #UInt._value, scope 1678 // user: %48
  %48 = load %47 : $*Builtin.Int64, scope 1678    // user: %49
  %49 = builtin "lshr_Int64"(%48 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 1678 // users: %74, %56, %51
  %50 = struct_extract %2 : $Int, #Int._value, scope 1656 // users: %62, %71, %51
  %51 = builtin "cmp_sgt_Int64"(%50 : $Builtin.Int64, %49 : $Builtin.Int64) : $Builtin.Int1, scope 1656 // user: %52
  cond_br %51, bb1, bb6, scope 1656               // id: %52

bb1:                                              // Preds: bb0
  %53 = builtin "onFastPath"() : $(), scope 1681
  %54 = builtin "onFastPath"() : $(), scope 1683
  %55 = integer_literal $Builtin.Int64, 2, scope 1656 // user: %56
  %56 = builtin "smul_with_overflow_Int64"(%49 : $Builtin.Int64, %55 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1656 // users: %58, %57
  %57 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 0, scope 1656 // user: %60
  %58 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 1, scope 1656 // user: %59
  cond_fail %58 : $Builtin.Int1, scope 1656       // id: %59
  br bb2(%57 : $Builtin.Int64), scope 1656        // id: %60

// %61                                            // users: %64, %62
bb2(%61 : $Builtin.Int64):                        // Preds: bb6 bb1
  %62 = builtin "cmp_sge_Int64"(%61 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int1, scope 1656 // user: %63
  cond_br %62, bb3, bb5, scope 1656               // id: %63

bb3:                                              // Preds: bb2
  br bb4(%61 : $Builtin.Int64), scope 1656        // id: %64

// %65                                            // user: %66
bb4(%65 : $Builtin.Int64):                        // Preds: bb5 bb3
  %66 = struct $Int (%65 : $Builtin.Int64), scope 1656 // users: %69, %67
  debug_value %66 : $Int, scope 1656              // id: %67
  // function_ref specialized specialized _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
  %68 = function_ref @_TTSf4n_n_d___TTSg5SS___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<String>, scope 1686 // user: %69
  %69 = apply %68(%1, %66) : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<String>, scope 1686 // user: %70
  return %69 : $_ContiguousArrayBuffer<String>, scope 1653 // id: %70

bb5:                                              // Preds: bb2
  br bb4(%50 : $Builtin.Int64), scope 1656        // id: %71

bb6:                                              // Preds: bb0
  %72 = builtin "onFastPath"() : $(), scope 1689
  %73 = builtin "onFastPath"() : $(), scope 1691
  br bb2(%49 : $Builtin.Int64), scope 1656        // id: %74
}

sil_scope 1692 {  parent @_TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout τ_0_0, Int, Int) -> @owned _ContiguousArrayBuffer<τ_0_0.Element> }

// _forceCreateUniqueMutableBuffer<A where ...> (inout A, countForNewBuffer : Int, minNewCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
sil hidden_external [fragile] [noinline] @_TFs31_forceCreateUniqueMutableBufferuRxs20_ArrayBufferProtocolrFTRx17countForNewBufferSi14minNewCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) <_Buffer where _Buffer : _ArrayBufferProtocol, _Buffer.Index : Comparable, _Buffer.IndexDistance : SignedInteger, _Buffer.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.IndexDistance.Stride : SignedNumber, _Buffer.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices : RandomAccessCollection, _Buffer.Indices.Index : Comparable, _Buffer.Indices.IndexDistance : SignedInteger, _Buffer.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices : BidirectionalCollection, _Buffer.Indices.Indices : RandomAccessIndexable, _Buffer.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.IndexDistance : SignedInteger, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices : BidirectionalIndexable, _Buffer.Indices.Indices.Indices : Collection, _Buffer.Indices.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.Indices.IndexDistance : SignedInteger, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices.Indices : IndexableBase, _Buffer.Indices.Indices.Indices.Indices : Sequence, _Buffer.Indices.Indices.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Indices.SubSequence : IndexableBase, _Buffer.Indices.Indices.Indices.SubSequence : Sequence, _Buffer.Indices.Indices.Indices.SubSequence.Index : Comparable, _Buffer.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence : BidirectionalIndexable, _Buffer.Indices.Indices.SubSequence : Collection, _Buffer.Indices.Indices.SubSequence.Index : Comparable, _Buffer.Indices.Indices.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.SubSequence.Indices : IndexableBase, _Buffer.Indices.Indices.SubSequence.Indices : Sequence, _Buffer.Indices.Indices.SubSequence.Indices.Index : Comparable, _Buffer.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence.SubSequence : IndexableBase, _Buffer.Indices.Indices.SubSequence.SubSequence : Sequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence : BidirectionalCollection, _Buffer.Indices.SubSequence : RandomAccessIndexable, _Buffer.Indices.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices : BidirectionalIndexable, _Buffer.Indices.SubSequence.Indices : Collection, _Buffer.Indices.SubSequence.Indices.Index : Comparable, _Buffer.Indices.SubSequence.Indices.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices.Indices : IndexableBase, _Buffer.Indices.SubSequence.Indices.Indices : Sequence, _Buffer.Indices.SubSequence.Indices.Indices.Index : Comparable, _Buffer.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Indices.SubSequence : IndexableBase, _Buffer.Indices.SubSequence.Indices.SubSequence : Sequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence : BidirectionalIndexable, _Buffer.Indices.SubSequence.SubSequence : Collection, _Buffer.Indices.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.SubSequence.Indices : IndexableBase, _Buffer.Indices.SubSequence.SubSequence.Indices : Sequence, _Buffer.Indices.SubSequence.SubSequence.Indices.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, _Buffer.Indices.SubSequence.SubSequence.SubSequence : Sequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Iterator : IteratorProtocol, _Buffer.SubSequence : BidirectionalCollection, _Buffer.SubSequence : RandomAccessIndexable, _Buffer.SubSequence.Index : Comparable, _Buffer.SubSequence.IndexDistance : SignedInteger, _Buffer.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices : BidirectionalIndexable, _Buffer.SubSequence.Indices : Collection, _Buffer.SubSequence.Indices.Index : Comparable, _Buffer.SubSequence.Indices.IndexDistance : SignedInteger, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices.Indices : IndexableBase, _Buffer.SubSequence.Indices.Indices : Sequence, _Buffer.SubSequence.Indices.Indices.Index : Comparable, _Buffer.SubSequence.Indices.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.Indices.SubSequence : IndexableBase, _Buffer.SubSequence.Indices.SubSequence : Sequence, _Buffer.SubSequence.Indices.SubSequence.Index : Comparable, _Buffer.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence : BidirectionalIndexable, _Buffer.SubSequence.SubSequence : Collection, _Buffer.SubSequence.SubSequence.Index : Comparable, _Buffer.SubSequence.SubSequence.IndexDistance : SignedInteger, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.SubSequence.Indices : IndexableBase, _Buffer.SubSequence.SubSequence.Indices : Sequence, _Buffer.SubSequence.SubSequence.Indices.Index : Comparable, _Buffer.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence.SubSequence : IndexableBase, _Buffer.SubSequence.SubSequence.SubSequence : Sequence, _Buffer.SubSequence.SubSequence.SubSequence.Index : Comparable, _Buffer.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout _Buffer, Int, Int) -> @owned _ContiguousArrayBuffer<_Buffer.Element> {
// %0                                             // users: %7, %3
// %1                                             // users: %7, %4
// %2                                             // users: %7, %7, %5
bb0(%0 : $*_Buffer, %1 : $Int, %2 : $Int):
  debug_value_addr %0 : $*_Buffer, scope 1692     // id: %3
  debug_value %1 : $Int, scope 1692               // id: %4
  debug_value %2 : $Int, scope 1692               // id: %5
  // function_ref _forceCreateUniqueMutableBufferImpl<A where ...> (inout A, countForBuffer : Int, minNewCapacity : Int, requiredCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
  %6 = function_ref @_TFs35_forceCreateUniqueMutableBufferImpluRxs20_ArrayBufferProtocolrFTRx14countForBufferSi14minNewCapacitySi16requiredCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout τ_0_0, Int, Int, Int) -> @owned _ContiguousArrayBuffer<τ_0_0.Element>, scope 1692 // user: %7
  %7 = apply %6<_Buffer, _Buffer.Element, _Buffer.Index, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%0, %1, %2, %2) : $@convention(thin) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout τ_0_0, Int, Int, Int) -> @owned _ContiguousArrayBuffer<τ_0_0.Element>, scope 1692 // user: %8
  return %7 : $_ContiguousArrayBuffer<_Buffer.Element>, scope 1692 // id: %8
}

sil_scope 1693 {  parent @_TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) <τ_0_0, τ_0_1 where τ_0_0 : _ArrayBufferProtocol, τ_0_1 : _PointerFunction, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_1.Element == τ_0_0.Element, τ_0_0.Index == Int> (@inout τ_0_0, @inout _ContiguousArrayBuffer<τ_0_0.Element>, Int, Int, @in τ_0_1) -> () }

// _arrayOutOfPlaceUpdate<A, B where ...> (inout A, inout _ContiguousArrayBuffer<A.Element>, Int, Int, B) -> ()
sil hidden_external [fragile] [noinline] @_TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) <_Buffer, Initializer where _Buffer : _ArrayBufferProtocol, Initializer : _PointerFunction, _Buffer.IndexDistance : SignedInteger, _Buffer.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.IndexDistance.Stride : SignedNumber, _Buffer.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices : RandomAccessCollection, _Buffer.Indices.Index : Comparable, _Buffer.Indices.IndexDistance : SignedInteger, _Buffer.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices : BidirectionalCollection, _Buffer.Indices.Indices : RandomAccessIndexable, _Buffer.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.IndexDistance : SignedInteger, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices : BidirectionalIndexable, _Buffer.Indices.Indices.Indices : Collection, _Buffer.Indices.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.Indices.IndexDistance : SignedInteger, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices.Indices : IndexableBase, _Buffer.Indices.Indices.Indices.Indices : Sequence, _Buffer.Indices.Indices.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Indices.SubSequence : IndexableBase, _Buffer.Indices.Indices.Indices.SubSequence : Sequence, _Buffer.Indices.Indices.Indices.SubSequence.Index : Comparable, _Buffer.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence : BidirectionalIndexable, _Buffer.Indices.Indices.SubSequence : Collection, _Buffer.Indices.Indices.SubSequence.Index : Comparable, _Buffer.Indices.Indices.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.SubSequence.Indices : IndexableBase, _Buffer.Indices.Indices.SubSequence.Indices : Sequence, _Buffer.Indices.Indices.SubSequence.Indices.Index : Comparable, _Buffer.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence.SubSequence : IndexableBase, _Buffer.Indices.Indices.SubSequence.SubSequence : Sequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence : BidirectionalCollection, _Buffer.Indices.SubSequence : RandomAccessIndexable, _Buffer.Indices.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices : BidirectionalIndexable, _Buffer.Indices.SubSequence.Indices : Collection, _Buffer.Indices.SubSequence.Indices.Index : Comparable, _Buffer.Indices.SubSequence.Indices.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices.Indices : IndexableBase, _Buffer.Indices.SubSequence.Indices.Indices : Sequence, _Buffer.Indices.SubSequence.Indices.Indices.Index : Comparable, _Buffer.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Indices.SubSequence : IndexableBase, _Buffer.Indices.SubSequence.Indices.SubSequence : Sequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence : BidirectionalIndexable, _Buffer.Indices.SubSequence.SubSequence : Collection, _Buffer.Indices.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.SubSequence.Indices : IndexableBase, _Buffer.Indices.SubSequence.SubSequence.Indices : Sequence, _Buffer.Indices.SubSequence.SubSequence.Indices.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, _Buffer.Indices.SubSequence.SubSequence.SubSequence : Sequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Iterator : IteratorProtocol, _Buffer.SubSequence : BidirectionalCollection, _Buffer.SubSequence : RandomAccessIndexable, _Buffer.SubSequence.Index : Comparable, _Buffer.SubSequence.IndexDistance : SignedInteger, _Buffer.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices : BidirectionalIndexable, _Buffer.SubSequence.Indices : Collection, _Buffer.SubSequence.Indices.Index : Comparable, _Buffer.SubSequence.Indices.IndexDistance : SignedInteger, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices.Indices : IndexableBase, _Buffer.SubSequence.Indices.Indices : Sequence, _Buffer.SubSequence.Indices.Indices.Index : Comparable, _Buffer.SubSequence.Indices.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.Indices.SubSequence : IndexableBase, _Buffer.SubSequence.Indices.SubSequence : Sequence, _Buffer.SubSequence.Indices.SubSequence.Index : Comparable, _Buffer.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence : BidirectionalIndexable, _Buffer.SubSequence.SubSequence : Collection, _Buffer.SubSequence.SubSequence.Index : Comparable, _Buffer.SubSequence.SubSequence.IndexDistance : SignedInteger, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.SubSequence.Indices : IndexableBase, _Buffer.SubSequence.SubSequence.Indices : Sequence, _Buffer.SubSequence.SubSequence.Indices.Index : Comparable, _Buffer.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence.SubSequence : IndexableBase, _Buffer.SubSequence.SubSequence.SubSequence : Sequence, _Buffer.SubSequence.SubSequence.SubSequence.Index : Comparable, _Buffer.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, Initializer.Element == _Buffer.Element, _Buffer.Index == Int> (@inout _Buffer, @inout _ContiguousArrayBuffer<_Buffer.Element>, Int, Int, @in Initializer) -> () {
// %0                                             // users: %212, %205, %126, %111, %101, %84, %72, %69, %30, %5
// %1                                             // users: %203, %47, %10, %6
// %2                                             // users: %160, %16, %7
// %3                                             // users: %163, %95, %22, %8
// %4                                             // users: %215, %163, %95, %9
bb0(%0 : $*_Buffer, %1 : $*_ContiguousArrayBuffer<_Buffer.Element>, %2 : $Int, %3 : $Int, %4 : $*Initializer):
  debug_value_addr %0 : $*_Buffer, scope 1693     // id: %5
  debug_value_addr %1 : $*_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // id: %6
  debug_value %2 : $Int, scope 1693               // id: %7
  debug_value %3 : $Int, scope 1693               // id: %8
  debug_value_addr %4 : $*Initializer, scope 1693 // id: %9
  %10 = load %1 : $*_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // users: %14, %12, %13
  // function_ref _ContiguousArrayBuffer.count.getter
  %11 = function_ref @_TFVs22_ContiguousArrayBufferg5countSi : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1693 // users: %170, %13
  retain_value %10 : $_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // id: %12
  %13 = apply %11<_Buffer.Element>(%10) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1693 // user: %15
  release_value %10 : $_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // id: %14
  %15 = struct_extract %13 : $Int, #Int._value, scope 1693 // user: %18
  %16 = struct_extract %2 : $Int, #Int._value, scope 1693 // users: %79, %56, %37, %18
  %17 = integer_literal $Builtin.Int1, -1, scope 1693 // users: %113, %96, %86, %79, %41, %37, %23, %18
  %18 = builtin "ssub_with_overflow_Int64"(%15 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %23
  %20 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 1, scope 1693 // user: %21
  cond_fail %20 : $Builtin.Int1, scope 1693       // id: %21
  %22 = struct_extract %3 : $Int, #Int._value, scope 1693 // users: %62, %23
  %23 = builtin "ssub_with_overflow_Int64"(%19 : $Builtin.Int64, %22 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // users: %25, %24
  %24 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // users: %41, %27
  %25 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 1, scope 1693 // user: %26
  cond_fail %25 : $Builtin.Int1, scope 1693       // id: %26
  %27 = struct $Int (%24 : $Builtin.Int64), scope 1693 // users: %169, %28
  debug_value %27 : $Int, scope 1693              // id: %28
  %29 = alloc_stack $_Buffer, scope 1693          // users: %35, %33, %32, %30
  copy_addr %0 to [initialization] %29 : $*_Buffer, scope 1693 // id: %30
  %31 = witness_method $_Buffer, #_ArrayBufferProtocol.count!getter.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1693 // user: %32
  %32 = apply %31<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%29) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1693 // users: %69, %36, %34
  destroy_addr %29 : $*_Buffer, scope 1693        // id: %33
  debug_value %32 : $Int, scope 1693              // id: %34
  dealloc_stack %29 : $*_Buffer, scope 1693       // id: %35
  %36 = struct_extract %32 : $Int, #Int._value, scope 1693 // users: %176, %37
  %37 = builtin "ssub_with_overflow_Int64"(%36 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // users: %39, %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %41
  %39 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 1, scope 1693 // user: %40
  cond_fail %39 : $Builtin.Int1, scope 1693       // id: %40
  %41 = builtin "ssub_with_overflow_Int64"(%38 : $Builtin.Int64, %24 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // users: %43, %42
  %42 = tuple_extract %41 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // users: %164, %96, %45
  %43 = tuple_extract %41 : $(Builtin.Int64, Builtin.Int1), 1, scope 1693 // user: %44
  cond_fail %43 : $Builtin.Int1, scope 1693       // id: %44
  %45 = struct $Int (%42 : $Builtin.Int64), scope 1693 // users: %161, %46
  debug_value %45 : $Int, scope 1693              // id: %46
  %47 = load %1 : $*_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // user: %49
  // function_ref _ContiguousArrayBuffer.firstElementAddress.getter
  %48 = function_ref @_TFVs22_ContiguousArrayBufferg19firstElementAddressGSpx_ : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1693 // users: %136, %49
  %49 = apply %48<_Buffer.Element>(%47) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1693 // users: %160, %90, %51, %50
  debug_value %49 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %50
  %51 = struct_extract %49 : $UnsafeMutablePointer<_Buffer.Element>, #UnsafeMutablePointer._rawValue, scope 1693 // user: %59
  %52 = metatype $@thick _Buffer.Element.Type, scope 1693 // user: %53
  %53 = builtin "strideof_nonzero"<_Buffer.Element>(%52 : $@thick _Buffer.Element.Type) : $Builtin.Word, scope 1693 // user: %54
  %54 = builtin "zextOrBitCast_Word_Int64"(%53 : $Builtin.Word) : $Builtin.Int64, scope 1693 // users: %193, %190, %176, %172, %164, %154, %151, %144, %62, %56
  %55 = integer_literal $Builtin.Int1, 0, scope 1693 // users: %176, %172, %164, %62, %56
  %56 = builtin "smul_with_overflow_Int64"(%16 : $Builtin.Int64, %54 : $Builtin.Int64, %55 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // user: %57
  %57 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %58
  %58 = builtin "truncOrBitCast_Int64_Word"(%57 : $Builtin.Int64) : $Builtin.Word, scope 1693 // users: %133, %59
  %59 = index_raw_pointer %51 : $Builtin.RawPointer, %58 : $Builtin.Word, scope 1693 // users: %65, %60
  %60 = struct $UnsafeMutablePointer<_Buffer.Element> (%59 : $Builtin.RawPointer), scope 1693 // users: %163, %61
  debug_value %60 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %61
  %62 = builtin "smul_with_overflow_Int64"(%22 : $Builtin.Int64, %54 : $Builtin.Int64, %55 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // user: %63
  %63 = tuple_extract %62 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %64
  %64 = builtin "truncOrBitCast_Int64_Word"(%63 : $Builtin.Int64) : $Builtin.Word, scope 1693 // user: %65
  %65 = index_raw_pointer %59 : $Builtin.RawPointer, %64 : $Builtin.Word, scope 1693 // user: %66
  %66 = struct $UnsafeMutablePointer<_Buffer.Element> (%65 : $Builtin.RawPointer), scope 1693 // users: %169, %119, %67
  debug_value %66 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %67
  %68 = witness_method $_Buffer, #_ArrayBufferProtocol.requestUniqueMutableBackingBuffer!1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (Int, @inout τ_0_0) -> @owned Optional<_ContiguousArrayBuffer<τ_0_0.Element>>, scope 1693 // user: %69
  %69 = apply %68<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%32, %0) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (Int, @inout τ_0_0) -> @owned Optional<_ContiguousArrayBuffer<τ_0_0.Element>>, scope 1693 // users: %199, %70
  switch_enum %69 : $Optional<_ContiguousArrayBuffer<_Buffer.Element>>, case #Optional.some!enumelt.1: bb2, case #Optional.none!enumelt: bb1, scope 1693 // id: %70

bb1:                                              // Preds: bb0
  %71 = alloc_stack $_Buffer, scope 1693          // users: %77, %75, %74, %72
  copy_addr %0 to [initialization] %71 : $*_Buffer, scope 1693 // id: %72
  %73 = witness_method $_Buffer, #_ArrayBufferProtocol.startIndex!getter.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1693 // user: %74
  %74 = apply %73<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%71) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1693 // users: %89, %78, %76
  destroy_addr %71 : $*_Buffer, scope 1693        // id: %75
  debug_value %74 : $Int, scope 1693              // id: %76
  dealloc_stack %71 : $*_Buffer, scope 1693       // id: %77
  %78 = struct_extract %74 : $Int, #Int._value, scope 1693 // users: %85, %79
  %79 = builtin "sadd_with_overflow_Int64"(%78 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // users: %81, %80
  %80 = tuple_extract %79 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // users: %96, %88, %85
  %81 = tuple_extract %79 : $(Builtin.Int64, Builtin.Int1), 1, scope 1693 // user: %82
  cond_fail %81 : $Builtin.Int1, scope 1693       // id: %82
  %83 = alloc_stack $_Buffer, scope 1693          // users: %93, %91, %90, %84
  copy_addr %0 to [initialization] %83 : $*_Buffer, scope 1693 // id: %84
  %85 = builtin "cmp_sle_Int64"(%78 : $Builtin.Int64, %80 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %86
  %86 = builtin "xor_Int1"(%85 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 1693 // user: %114
  %87 = witness_method $_Buffer, #_ArrayBufferProtocol._copyContents!1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (Range<Int>, UnsafeMutablePointer<τ_0_0.Element>, @in_guaranteed τ_0_0) -> UnsafeMutablePointer<τ_0_0.Element>, scope 1693 // users: %119, %90
  %88 = struct $Int (%80 : $Builtin.Int64), scope 1693 // user: %89
  %89 = struct $Range<Int> (%74 : $Int, %88 : $Int), scope 1693 // user: %90
  %90 = apply %87<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%89, %49, %83) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (Range<Int>, UnsafeMutablePointer<τ_0_0.Element>, @in_guaranteed τ_0_0) -> UnsafeMutablePointer<τ_0_0.Element>, scope 1693 // users: %95, %92
  destroy_addr %83 : $*_Buffer, scope 1693        // id: %91
  debug_value %90 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %92
  dealloc_stack %83 : $*_Buffer, scope 1693       // id: %93
  %94 = witness_method $Initializer, #_PointerFunction.call!1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _PointerFunction> (UnsafeMutablePointer<τ_0_0.Element>, Int, @in_guaranteed τ_0_0) -> (), scope 1693 // user: %95
  %95 = apply %94<Initializer, _Buffer.Element>(%90, %3, %4) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _PointerFunction> (UnsafeMutablePointer<τ_0_0.Element>, Int, @in_guaranteed τ_0_0) -> (), scope 1693
  %96 = builtin "sadd_with_overflow_Int64"(%80 : $Builtin.Int64, %42 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // users: %98, %97
  %97 = tuple_extract %96 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // users: %116, %112
  %98 = tuple_extract %96 : $(Builtin.Int64, Builtin.Int1), 1, scope 1693 // user: %99
  cond_fail %98 : $Builtin.Int1, scope 1693       // id: %99
  %100 = alloc_stack $_Buffer, scope 1693         // users: %109, %105, %104, %101
  copy_addr %0 to [initialization] %100 : $*_Buffer, scope 1693 // id: %101
  %102 = witness_method $_Buffer, #MutableIndexable.endIndex!getter.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : MutableIndexable, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> @out τ_0_0.Index, scope 1693 // user: %104
  %103 = alloc_stack $Int, scope 1693             // users: %108, %106, %104
  %104 = apply %102<_Buffer, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence, _Buffer._Element>(%103, %100) : $@convention(witness_method) <τ_0_0 where τ_0_0 : MutableIndexable, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> @out τ_0_0.Index, scope 1693
  destroy_addr %100 : $*_Buffer, scope 1693       // id: %105
  %106 = struct_element_addr %103 : $*Int, #Int._value, scope 1693 // user: %107
  %107 = load %106 : $*Builtin.Int64, scope 1693  // users: %117, %112
  dealloc_stack %103 : $*Int, scope 1693          // id: %108
  dealloc_stack %100 : $*_Buffer, scope 1693      // id: %109
  %110 = alloc_stack $_Buffer, scope 1693         // users: %121, %120, %119, %111
  copy_addr %0 to [initialization] %110 : $*_Buffer, scope 1693 // id: %111
  %112 = builtin "cmp_sle_Int64"(%97 : $Builtin.Int64, %107 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %113
  %113 = builtin "xor_Int1"(%112 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1, scope 1693 // user: %114
  %114 = builtin "or_Int1"(%86 : $Builtin.Int1, %113 : $Builtin.Int1) : $Builtin.Int1, scope 1693 // user: %115
  cond_fail %114 : $Builtin.Int1, scope 1693      // id: %115
  %116 = struct $Int (%97 : $Builtin.Int64), scope 1693 // user: %118
  %117 = struct $Int (%107 : $Builtin.Int64), scope 1693 // user: %118
  %118 = struct $Range<Int> (%116 : $Int, %117 : $Int), scope 1693 // user: %119
  %119 = apply %87<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%118, %66, %110) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (Range<Int>, UnsafeMutablePointer<τ_0_0.Element>, @in_guaranteed τ_0_0) -> UnsafeMutablePointer<τ_0_0.Element>, scope 1693
  destroy_addr %110 : $*_Buffer, scope 1693       // id: %120
  dealloc_stack %110 : $*_Buffer, scope 1693      // id: %121
  br bb9, scope 1693                              // id: %122

// %123                                           // users: %198, %170, %136, %124
bb2(%123 : $_ContiguousArrayBuffer<_Buffer.Element>): // Preds: bb0
  debug_value %123 : $_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // id: %124
  %125 = alloc_stack $_Buffer, scope 1693         // users: %131, %129, %128, %126
  copy_addr %0 to [initialization] %125 : $*_Buffer, scope 1693 // id: %126
  %127 = witness_method $_Buffer, #_ArrayBufferProtocol.firstElementAddress!getter.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> UnsafeMutablePointer<τ_0_0.Element>, scope 1693 // user: %128
  %128 = apply %127<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%125) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> UnsafeMutablePointer<τ_0_0.Element>, scope 1693 // users: %160, %132, %130
  destroy_addr %125 : $*_Buffer, scope 1693       // id: %129
  debug_value %128 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %130
  dealloc_stack %125 : $*_Buffer, scope 1693      // id: %131
  %132 = struct_extract %128 : $UnsafeMutablePointer<_Buffer.Element>, #UnsafeMutablePointer._rawValue, scope 1693 // users: %179, %138, %133
  %133 = index_raw_pointer %132 : $Builtin.RawPointer, %58 : $Builtin.Word, scope 1693 // users: %167, %134
  %134 = struct $UnsafeMutablePointer<_Buffer.Element> (%133 : $Builtin.RawPointer), scope 1693 // users: %161, %135
  debug_value %134 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %135
  %136 = apply %48<_Buffer.Element>(%123) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> UnsafeMutablePointer<τ_0_0>, scope 1693 // users: %158, %139, %137
  debug_value %136 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %137
  %138 = builtin "ptrtoint_Word"(%132 : $Builtin.RawPointer) : $Builtin.Word, scope 1693 // user: %141
  %139 = struct_extract %136 : $UnsafeMutablePointer<_Buffer.Element>, #UnsafeMutablePointer._rawValue, scope 1693 // users: %175, %140
  %140 = builtin "ptrtoint_Word"(%139 : $Builtin.RawPointer) : $Builtin.Word, scope 1693 // user: %141
  %141 = builtin "sub_Word"(%138 : $Builtin.Word, %140 : $Builtin.Word) : $Builtin.Word, scope 1693 // user: %142
  %142 = builtin "zextOrBitCast_Word_Int64"(%141 : $Builtin.Word) : $Builtin.Int64, scope 1693 // users: %154, %147
  %143 = integer_literal $Builtin.Int64, 0, scope 1693 // users: %196, %144
  %144 = builtin "cmp_eq_Int64"(%54 : $Builtin.Int64, %143 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %145
  cond_fail %144 : $Builtin.Int1, scope 1693      // id: %145
  %146 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1693 // users: %186, %147
  %147 = builtin "cmp_eq_Int64"(%142 : $Builtin.Int64, %146 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %148
  cond_br %147, bb4, bb3, scope 1693              // id: %148

bb3:                                              // Preds: bb2
  br bb5, scope 1693                              // id: %149

bb4:                                              // Preds: bb2
  %150 = integer_literal $Builtin.Int64, -1, scope 1693 // user: %151
  %151 = builtin "cmp_eq_Int64"(%54 : $Builtin.Int64, %150 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %152
  cond_fail %151 : $Builtin.Int1, scope 1693      // id: %152
  br bb5, scope 1693                              // id: %153

bb5:                                              // Preds: bb3 bb4
  %154 = builtin "sdiv_Int64"(%142 : $Builtin.Int64, %54 : $Builtin.Int64) : $Builtin.Int64, scope 1693 // user: %155
  %155 = struct $Int (%154 : $Builtin.Int64), scope 1693 // users: %158, %156
  debug_value %155 : $Int, scope 1693             // id: %156
  // function_ref UnsafeMutablePointer.deinitialize(count : Int) -> UnsafeMutableRawPointer
  %157 = function_ref @_TFSp12deinitializefT5countSi_Sv : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 1693 // users: %195, %161, %158
  %158 = apply %157<_Buffer.Element>(%155, %136) : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 1693
  // function_ref UnsafeMutablePointer.moveInitialize(from : UnsafeMutablePointer<A>, count : Int) -> ()
  %159 = function_ref @_TFSp14moveInitializefT4fromGSpx_5countSi_T_ : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 1693 // users: %169, %160
  %160 = apply %159<_Buffer.Element>(%128, %2, %49) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 1693
  %161 = apply %157<_Buffer.Element>(%45, %134) : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 1693
  %162 = witness_method $Initializer, #_PointerFunction.call!1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _PointerFunction> (UnsafeMutablePointer<τ_0_0.Element>, Int, @in_guaranteed τ_0_0) -> (), scope 1693 // user: %163
  %163 = apply %162<Initializer, _Buffer.Element>(%60, %3, %4) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _PointerFunction> (UnsafeMutablePointer<τ_0_0.Element>, Int, @in_guaranteed τ_0_0) -> (), scope 1693
  %164 = builtin "smul_with_overflow_Int64"(%42 : $Builtin.Int64, %54 : $Builtin.Int64, %55 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // user: %165
  %165 = tuple_extract %164 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %166
  %166 = builtin "truncOrBitCast_Int64_Word"(%165 : $Builtin.Int64) : $Builtin.Word, scope 1693 // user: %167
  %167 = index_raw_pointer %133 : $Builtin.RawPointer, %166 : $Builtin.Word, scope 1693 // user: %168
  %168 = struct $UnsafeMutablePointer<_Buffer.Element> (%167 : $Builtin.RawPointer), scope 1693 // user: %169
  %169 = apply %159<_Buffer.Element>(%168, %27, %66) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> (), scope 1693
  %170 = apply %11<_Buffer.Element>(%123) : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int, scope 1693 // user: %171
  %171 = struct_extract %170 : $Int, #Int._value, scope 1693 // user: %172
  %172 = builtin "smul_with_overflow_Int64"(%171 : $Builtin.Int64, %54 : $Builtin.Int64, %55 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // user: %173
  %173 = tuple_extract %172 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %174
  %174 = builtin "truncOrBitCast_Int64_Word"(%173 : $Builtin.Int64) : $Builtin.Word, scope 1693 // user: %175
  %175 = index_raw_pointer %139 : $Builtin.RawPointer, %174 : $Builtin.Word, scope 1693 // user: %182
  %176 = builtin "smul_with_overflow_Int64"(%36 : $Builtin.Int64, %54 : $Builtin.Int64, %55 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1693 // user: %177
  %177 = tuple_extract %176 : $(Builtin.Int64, Builtin.Int1), 0, scope 1693 // user: %178
  %178 = builtin "truncOrBitCast_Int64_Word"(%177 : $Builtin.Int64) : $Builtin.Word, scope 1693 // user: %179
  %179 = index_raw_pointer %132 : $Builtin.RawPointer, %178 : $Builtin.Word, scope 1693 // users: %183, %180
  %180 = struct $UnsafeMutablePointer<_Buffer.Element> (%179 : $Builtin.RawPointer), scope 1693 // users: %195, %181
  debug_value %180 : $UnsafeMutablePointer<_Buffer.Element>, scope 1693 // id: %181
  %182 = builtin "ptrtoint_Word"(%175 : $Builtin.RawPointer) : $Builtin.Word, scope 1693 // user: %184
  %183 = builtin "ptrtoint_Word"(%179 : $Builtin.RawPointer) : $Builtin.Word, scope 1693 // user: %184
  %184 = builtin "sub_Word"(%182 : $Builtin.Word, %183 : $Builtin.Word) : $Builtin.Word, scope 1693 // user: %185
  %185 = builtin "zextOrBitCast_Word_Int64"(%184 : $Builtin.Word) : $Builtin.Int64, scope 1693 // users: %193, %186
  %186 = builtin "cmp_eq_Int64"(%185 : $Builtin.Int64, %146 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %187
  cond_br %186, bb7, bb6, scope 1693              // id: %187

bb6:                                              // Preds: bb5
  br bb8, scope 1693                              // id: %188

bb7:                                              // Preds: bb5
  %189 = integer_literal $Builtin.Int64, -1, scope 1693 // user: %190
  %190 = builtin "cmp_eq_Int64"(%54 : $Builtin.Int64, %189 : $Builtin.Int64) : $Builtin.Int1, scope 1693 // user: %191
  cond_fail %190 : $Builtin.Int1, scope 1693      // id: %191
  br bb8, scope 1693                              // id: %192

bb8:                                              // Preds: bb6 bb7
  %193 = builtin "sdiv_Int64"(%185 : $Builtin.Int64, %54 : $Builtin.Int64) : $Builtin.Int64, scope 1693 // user: %194
  %194 = struct $Int (%193 : $Builtin.Int64), scope 1693 // user: %195
  %195 = apply %157<_Buffer.Element>(%194, %180) : $@convention(method) <τ_0_0> (Int, UnsafeMutablePointer<τ_0_0>) -> UnsafeMutableRawPointer, scope 1693
  %196 = struct $Int (%143 : $Builtin.Int64), scope 1693 // user: %198
  // function_ref _ContiguousArrayBuffer.count.setter
  %197 = function_ref @_TFVs22_ContiguousArrayBuffers5countSi : $@convention(method) <τ_0_0> (Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1693 // user: %198
  %198 = apply %197<_Buffer.Element>(%196, %123) : $@convention(method) <τ_0_0> (Int, @guaranteed _ContiguousArrayBuffer<τ_0_0>) -> (), scope 1693
  release_value %69 : $Optional<_ContiguousArrayBuffer<_Buffer.Element>>, scope 1693 // id: %199
  br bb9, scope 1693                              // id: %200

bb9:                                              // Preds: bb8 bb1
  %201 = witness_method $_Buffer, #_ArrayBufferProtocol.init!allocator.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@owned _ContiguousArrayBuffer<τ_0_0.Element>, Int, @thick τ_0_0.Type) -> @out τ_0_0, scope 1693 // user: %211
  %202 = metatype $@thick _Buffer.Type, scope 1693 // user: %211
  %203 = load %1 : $*_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // users: %207, %211
  %204 = alloc_stack $_Buffer, scope 1693         // users: %214, %209, %208, %205
  copy_addr %0 to [initialization] %204 : $*_Buffer, scope 1693 // id: %205
  %206 = witness_method $_Buffer, #_ArrayBufferProtocol.startIndex!getter.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1693 // user: %208
  retain_value %203 : $_ContiguousArrayBuffer<_Buffer.Element>, scope 1693 // id: %207
  %208 = apply %206<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%204) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1693 // user: %211
  destroy_addr %204 : $*_Buffer, scope 1693       // id: %209
  %210 = alloc_stack $_Buffer, scope 1693         // users: %213, %212, %211
  %211 = apply %201<_Buffer, _Buffer.Element, Int, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%210, %203, %208, %202) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@owned _ContiguousArrayBuffer<τ_0_0.Element>, Int, @thick τ_0_0.Type) -> @out τ_0_0, scope 1693
  copy_addr [take] %210 to %0 : $*_Buffer, scope 1693 // id: %212
  dealloc_stack %210 : $*_Buffer, scope 1693      // id: %213
  dealloc_stack %204 : $*_Buffer, scope 1693      // id: %214
  destroy_addr %4 : $*Initializer, scope 1693     // id: %215
  %216 = tuple (), scope 1693                     // user: %217
  return %216 : $(), scope 1693                   // id: %217
}

sil_scope 1694 {  parent @_TFVs14_IgnorePointerCfT_GS_x_ : $@convention(method) <τ_0_0> (@thin _IgnorePointer<τ_0_0>.Type) -> _IgnorePointer<τ_0_0> }

// _IgnorePointer.init() -> _IgnorePointer<A>
sil hidden_external [fragile] @_TFVs14_IgnorePointerCfT_GS_x_ : $@convention(method) <T> (@thin _IgnorePointer<T>.Type) -> _IgnorePointer<T> {
bb0(%0 : $@thin _IgnorePointer<T>.Type):
  %1 = struct $_IgnorePointer<T> (), scope 1694   // user: %2
  return %1 : $_IgnorePointer<T>, scope 1694      // id: %2
}

sil_scope 1695 {  parent @_TFVs22_ContiguousArrayBufferg8capacitySi : $@convention(method) <τ_0_0> (@guaranteed _ContiguousArrayBuffer<τ_0_0>) -> Int }

// _ContiguousArrayBuffer.capacity.getter
sil public_external [fragile] @_TFVs22_ContiguousArrayBufferg8capacitySi : $@convention(method) <Element> (@guaranteed _ContiguousArrayBuffer<Element>) -> Int {
// %0                                             // users: %2, %1
bb0(%0 : $_ContiguousArrayBuffer<Element>):
  debug_value %0 : $_ContiguousArrayBuffer<Element>, scope 1695 // id: %1
  %2 = struct_extract %0 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer.__bufferPointer, scope 1695 // user: %4
  // function_ref ManagedBufferPointer.header.nativeOwningAddressor
  %3 = function_ref @_TFVs20ManagedBufferPointerlo6headerx : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> (UnsafePointer<τ_0_0>, @owned Builtin.NativeObject), scope 1695 // user: %4
  %4 = apply %3<_ArrayBody, Element>(%2) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> (UnsafePointer<τ_0_0>, @owned Builtin.NativeObject), scope 1695 // users: %14, %6, %5
  %5 = tuple_extract %4 : $(UnsafePointer<_ArrayBody>, Builtin.NativeObject), 0, scope 1695 // user: %7
  %6 = tuple_extract %4 : $(UnsafePointer<_ArrayBody>, Builtin.NativeObject), 1, scope 1695 // user: %9
  %7 = struct_extract %5 : $UnsafePointer<_ArrayBody>, #UnsafePointer._rawValue, scope 1695 // user: %8
  %8 = pointer_to_address %7 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1695 // user: %9
  %9 = mark_dependence %8 : $*_ArrayBody on %6 : $Builtin.NativeObject, scope 1695 // user: %10
  %10 = struct_element_addr %9 : $*_ArrayBody, #_ArrayBody._storage, scope 1695 // user: %11
  %11 = struct_element_addr %10 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1695 // user: %12
  %12 = struct_element_addr %11 : $*UInt, #UInt._value, scope 1695 // user: %13
  %13 = load %12 : $*Builtin.Int64, scope 1695    // user: %16
  release_value %4 : $(UnsafePointer<_ArrayBody>, Builtin.NativeObject), scope 1695 // id: %14
  %15 = integer_literal $Builtin.Int64, 1, scope 1695 // user: %16
  %16 = builtin "lshr_Int64"(%13 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int64, scope 1695 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), scope 1695 // user: %18
  return %17 : $Int, scope 1695                   // id: %18
}

sil_scope 1696 {  parent @_TFs35_forceCreateUniqueMutableBufferImpluRxs20_ArrayBufferProtocolrFTRx14countForBufferSi14minNewCapacitySi16requiredCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout τ_0_0, Int, Int, Int) -> @owned _ContiguousArrayBuffer<τ_0_0.Element> }

// _forceCreateUniqueMutableBufferImpl<A where ...> (inout A, countForBuffer : Int, minNewCapacity : Int, requiredCapacity : Int) -> _ContiguousArrayBuffer<A.Element>
sil hidden_external [fragile] @_TFs35_forceCreateUniqueMutableBufferImpluRxs20_ArrayBufferProtocolrFTRx14countForBufferSi14minNewCapacitySi16requiredCapacitySi_GVs22_ContiguousArrayBufferwx7Element_ : $@convention(thin) <_Buffer where _Buffer : _ArrayBufferProtocol, _Buffer.Index : Comparable, _Buffer.IndexDistance : SignedInteger, _Buffer.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.IndexDistance.Stride : SignedNumber, _Buffer.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices : RandomAccessCollection, _Buffer.Indices.Index : Comparable, _Buffer.Indices.IndexDistance : SignedInteger, _Buffer.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices : BidirectionalCollection, _Buffer.Indices.Indices : RandomAccessIndexable, _Buffer.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.IndexDistance : SignedInteger, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices : BidirectionalIndexable, _Buffer.Indices.Indices.Indices : Collection, _Buffer.Indices.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.Indices.IndexDistance : SignedInteger, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.Indices.Indices : IndexableBase, _Buffer.Indices.Indices.Indices.Indices : Sequence, _Buffer.Indices.Indices.Indices.Indices.Index : Comparable, _Buffer.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Indices.SubSequence : IndexableBase, _Buffer.Indices.Indices.Indices.SubSequence : Sequence, _Buffer.Indices.Indices.Indices.SubSequence.Index : Comparable, _Buffer.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence : BidirectionalIndexable, _Buffer.Indices.Indices.SubSequence : Collection, _Buffer.Indices.Indices.SubSequence.Index : Comparable, _Buffer.Indices.Indices.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.Indices.SubSequence.Indices : IndexableBase, _Buffer.Indices.Indices.SubSequence.Indices : Sequence, _Buffer.Indices.Indices.SubSequence.Indices.Index : Comparable, _Buffer.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Indices.SubSequence.SubSequence : IndexableBase, _Buffer.Indices.Indices.SubSequence.SubSequence : Sequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence : BidirectionalCollection, _Buffer.Indices.SubSequence : RandomAccessIndexable, _Buffer.Indices.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices : BidirectionalIndexable, _Buffer.Indices.SubSequence.Indices : Collection, _Buffer.Indices.SubSequence.Indices.Index : Comparable, _Buffer.Indices.SubSequence.Indices.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.Indices.Indices : IndexableBase, _Buffer.Indices.SubSequence.Indices.Indices : Sequence, _Buffer.Indices.SubSequence.Indices.Indices.Index : Comparable, _Buffer.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Indices.SubSequence : IndexableBase, _Buffer.Indices.SubSequence.Indices.SubSequence : Sequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence : BidirectionalIndexable, _Buffer.Indices.SubSequence.SubSequence : Collection, _Buffer.Indices.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.Indices.SubSequence.SubSequence.Indices : IndexableBase, _Buffer.Indices.SubSequence.SubSequence.Indices : Sequence, _Buffer.Indices.SubSequence.SubSequence.Indices.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, _Buffer.Indices.SubSequence.SubSequence.SubSequence : Sequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.Iterator : IteratorProtocol, _Buffer.SubSequence : BidirectionalCollection, _Buffer.SubSequence : RandomAccessIndexable, _Buffer.SubSequence.Index : Comparable, _Buffer.SubSequence.IndexDistance : SignedInteger, _Buffer.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices : BidirectionalIndexable, _Buffer.SubSequence.Indices : Collection, _Buffer.SubSequence.Indices.Index : Comparable, _Buffer.SubSequence.Indices.IndexDistance : SignedInteger, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.Indices.Indices : IndexableBase, _Buffer.SubSequence.Indices.Indices : Sequence, _Buffer.SubSequence.Indices.Indices.Index : Comparable, _Buffer.SubSequence.Indices.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.Indices.SubSequence : IndexableBase, _Buffer.SubSequence.Indices.SubSequence : Sequence, _Buffer.SubSequence.Indices.SubSequence.Index : Comparable, _Buffer.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence : BidirectionalIndexable, _Buffer.SubSequence.SubSequence : Collection, _Buffer.SubSequence.SubSequence.Index : Comparable, _Buffer.SubSequence.SubSequence.IndexDistance : SignedInteger, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, _Buffer.SubSequence.SubSequence.Indices : IndexableBase, _Buffer.SubSequence.SubSequence.Indices : Sequence, _Buffer.SubSequence.SubSequence.Indices.Index : Comparable, _Buffer.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence.Iterator : IteratorProtocol, _Buffer.SubSequence.SubSequence.SubSequence : IndexableBase, _Buffer.SubSequence.SubSequence.SubSequence : Sequence, _Buffer.SubSequence.SubSequence.SubSequence.Index : Comparable, _Buffer.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@inout _Buffer, Int, Int, Int) -> @owned _ContiguousArrayBuffer<_Buffer.Element> {
// %0                                             // users: %25, %19, %9, %4
// %1                                             // users: %51, %5
// %2                                             // users: %13, %6
// %3                                             // users: %40, %7
bb0(%0 : $*_Buffer, %1 : $Int, %2 : $Int, %3 : $Int):
  debug_value_addr %0 : $*_Buffer, scope 1696     // id: %4
  debug_value %1 : $Int, scope 1696               // id: %5
  debug_value %2 : $Int, scope 1696               // id: %6
  debug_value %3 : $Int, scope 1696               // id: %7
  %8 = alloc_stack $_Buffer, scope 1696           // users: %16, %12, %11, %9
  copy_addr %0 to [initialization] %8 : $*_Buffer, scope 1696 // id: %9
  %10 = witness_method $_Buffer, #_ArrayBufferProtocol.capacity!getter.1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1696 // users: %26, %20, %11
  %11 = apply %10<_Buffer, _Buffer.Element, _Buffer.Index, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%8) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1696 // user: %14
  destroy_addr %8 : $*_Buffer, scope 1696         // id: %12
  %13 = struct_extract %2 : $Int, #Int._value, scope 1696 // user: %15
  %14 = struct_extract %11 : $Int, #Int._value, scope 1696 // user: %15
  %15 = builtin "cmp_sgt_Int64"(%13 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1, scope 1696 // user: %17
  dealloc_stack %8 : $*_Buffer, scope 1696        // id: %16
  cond_br %15, bb2, bb1, scope 1696               // id: %17

bb1:                                              // Preds: bb0
  %18 = alloc_stack $_Buffer, scope 1696          // users: %22, %21, %20, %19
  copy_addr %0 to [initialization] %18 : $*_Buffer, scope 1696 // id: %19
  %20 = apply %10<_Buffer, _Buffer.Element, _Buffer.Index, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%18) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1696 // user: %23
  destroy_addr %18 : $*_Buffer, scope 1696        // id: %21
  dealloc_stack %18 : $*_Buffer, scope 1696       // id: %22
  br bb3(%20 : $Int), scope 1696                  // id: %23

bb2:                                              // Preds: bb0
  %24 = alloc_stack $_Buffer, scope 1696          // users: %37, %27, %26, %25
  copy_addr %0 to [initialization] %24 : $*_Buffer, scope 1696 // id: %25
  %26 = apply %10<_Buffer, _Buffer.Element, _Buffer.Index, _Buffer.IndexDistance, _Buffer.IndexDistance.IntegerLiteralType, _Buffer.IndexDistance.Stride, _Buffer.IndexDistance.Stride.IntegerLiteralType, _Buffer.IndexDistance._DisabledRangeIndex, _Buffer.Indices, _Buffer.Indices.Index, _Buffer.Indices.IndexDistance, _Buffer.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.IndexDistance.Stride, _Buffer.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices, _Buffer.Indices.Indices.Index, _Buffer.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.IndexDistance, _Buffer.Indices.Indices.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance.Stride, _Buffer.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.Indices.Indices, _Buffer.Indices.Indices.Indices.Indices.Index, _Buffer.Indices.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Indices.Iterator, _Buffer.Indices.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices.Indices._Element, _Buffer.Indices.Indices.Iterator, _Buffer.Indices.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.IndexDistance, _Buffer.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.Indices.SubSequence.Indices, _Buffer.Indices.Indices.SubSequence.Indices.Index, _Buffer.Indices.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.Indices.SubSequence.Indices._Element, _Buffer.Indices.Indices.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.Indices.SubSequence._Element, _Buffer.Indices.Indices._Element, _Buffer.Indices.Iterator, _Buffer.Indices.Iterator.Element, _Buffer.Indices.SubSequence, _Buffer.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices, _Buffer.Indices.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.Indices.IndexDistance, _Buffer.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride, _Buffer.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.Indices.Indices, _Buffer.Indices.SubSequence.Indices.Indices.Index, _Buffer.Indices.SubSequence.Indices.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.Indices._Element, _Buffer.Indices.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence.Index, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.Indices.SubSequence._Element, _Buffer.Indices.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.Iterator, _Buffer.Indices.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.IndexDistance, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.Indices.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.Indices.SubSequence.SubSequence.Indices, _Buffer.Indices.SubSequence.SubSequence.Indices.Index, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator, _Buffer.Indices.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.Indices.SubSequence, _Buffer.Indices.SubSequence.SubSequence.Indices._Element, _Buffer.Indices.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Index, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.Indices.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.Indices.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.Indices.SubSequence.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence.SubSequence._Element, _Buffer.Indices.SubSequence._Element, _Buffer.Indices._Element, _Buffer.Iterator, _Buffer.Iterator.Element, _Buffer.SubSequence, _Buffer.SubSequence.Index, _Buffer.SubSequence.IndexDistance, _Buffer.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices, _Buffer.SubSequence.Indices.Index, _Buffer.SubSequence.Indices.IndexDistance, _Buffer.SubSequence.Indices.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance.Stride, _Buffer.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.Indices.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.Indices.Indices, _Buffer.SubSequence.Indices.Indices.Index, _Buffer.SubSequence.Indices.Indices.Iterator, _Buffer.SubSequence.Indices.Indices.Iterator.Element, _Buffer.SubSequence.Indices.Indices.SubSequence, _Buffer.SubSequence.Indices.Indices._Element, _Buffer.SubSequence.Indices.Iterator, _Buffer.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence, _Buffer.SubSequence.Indices.SubSequence.Index, _Buffer.SubSequence.Indices.SubSequence.Iterator, _Buffer.SubSequence.Indices.SubSequence.Iterator.Element, _Buffer.SubSequence.Indices.SubSequence.SubSequence, _Buffer.SubSequence.Indices.SubSequence._Element, _Buffer.SubSequence.Indices._Element, _Buffer.SubSequence.Iterator, _Buffer.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.IndexDistance, _Buffer.SubSequence.SubSequence.IndexDistance.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance.Stride, _Buffer.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType, _Buffer.SubSequence.SubSequence.IndexDistance._DisabledRangeIndex, _Buffer.SubSequence.SubSequence.Indices, _Buffer.SubSequence.SubSequence.Indices.Index, _Buffer.SubSequence.SubSequence.Indices.Iterator, _Buffer.SubSequence.SubSequence.Indices.Iterator.Element, _Buffer.SubSequence.SubSequence.Indices.SubSequence, _Buffer.SubSequence.SubSequence.Indices._Element, _Buffer.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence.Index, _Buffer.SubSequence.SubSequence.SubSequence.Iterator, _Buffer.SubSequence.SubSequence.SubSequence.Iterator.Element, _Buffer.SubSequence.SubSequence.SubSequence.SubSequence, _Buffer.SubSequence.SubSequence.SubSequence._Element, _Buffer.SubSequence.SubSequence._Element, _Buffer.SubSequence._Element, _Buffer._Element>(%24) : $@convention(witness_method) <τ_0_0 where τ_0_0 : _ArrayBufferProtocol, τ_0_0.Index : Comparable, τ_0_0.IndexDistance : SignedInteger, τ_0_0.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.IndexDistance.Stride : SignedNumber, τ_0_0.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices : RandomAccessCollection, τ_0_0.Indices.Index : Comparable, τ_0_0.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices : BidirectionalCollection, τ_0_0.Indices.Indices : RandomAccessIndexable, τ_0_0.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices : BidirectionalIndexable, τ_0_0.Indices.Indices.Indices : Collection, τ_0_0.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.Indices.Indices : IndexableBase, τ_0_0.Indices.Indices.Indices.Indices : Sequence, τ_0_0.Indices.Indices.Indices.Indices.Index : Comparable, τ_0_0.Indices.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Indices.SubSequence : IndexableBase, τ_0_0.Indices.Indices.Indices.SubSequence : Sequence, τ_0_0.Indices.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence : BidirectionalIndexable, τ_0_0.Indices.Indices.SubSequence : Collection, τ_0_0.Indices.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.Indices.SubSequence.Indices : IndexableBase, τ_0_0.Indices.Indices.SubSequence.Indices : Sequence, τ_0_0.Indices.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Indices.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.Indices.SubSequence.SubSequence : Sequence, τ_0_0.Indices.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence : BidirectionalCollection, τ_0_0.Indices.SubSequence : RandomAccessIndexable, τ_0_0.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices : BidirectionalIndexable, τ_0_0.Indices.SubSequence.Indices : Collection, τ_0_0.Indices.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.Indices.Indices : IndexableBase, τ_0_0.Indices.SubSequence.Indices.Indices : Sequence, τ_0_0.Indices.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.Indices.SubSequence : Sequence, τ_0_0.Indices.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.Indices.SubSequence.SubSequence : Collection, τ_0_0.Indices.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.Indices.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.Indices.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.Indices : Sequence, τ_0_0.Indices.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.Indices.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.Indices.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.Iterator : IteratorProtocol, τ_0_0.SubSequence : BidirectionalCollection, τ_0_0.SubSequence : RandomAccessIndexable, τ_0_0.SubSequence.Index : Comparable, τ_0_0.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices : BidirectionalIndexable, τ_0_0.SubSequence.Indices : Collection, τ_0_0.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.IndexDistance : SignedInteger, τ_0_0.SubSequence.Indices.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.Indices.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.Indices.Indices : IndexableBase, τ_0_0.SubSequence.Indices.Indices : Sequence, τ_0_0.SubSequence.Indices.Indices.Index : Comparable, τ_0_0.SubSequence.Indices.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.Indices.SubSequence : IndexableBase, τ_0_0.SubSequence.Indices.SubSequence : Sequence, τ_0_0.SubSequence.Indices.SubSequence.Index : Comparable, τ_0_0.SubSequence.Indices.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence : BidirectionalIndexable, τ_0_0.SubSequence.SubSequence : Collection, τ_0_0.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.IndexDistance : SignedInteger, τ_0_0.SubSequence.SubSequence.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride : SignedNumber, τ_0_0.SubSequence.SubSequence.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.SubSequence.SubSequence.Indices : IndexableBase, τ_0_0.SubSequence.SubSequence.Indices : Sequence, τ_0_0.SubSequence.SubSequence.Indices.Index : Comparable, τ_0_0.SubSequence.SubSequence.Indices.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.Iterator : IteratorProtocol, τ_0_0.SubSequence.SubSequence.SubSequence : IndexableBase, τ_0_0.SubSequence.SubSequence.SubSequence : Sequence, τ_0_0.SubSequence.SubSequence.SubSequence.Index : Comparable, τ_0_0.SubSequence.SubSequence.SubSequence.Iterator : IteratorProtocol> (@in_guaranteed τ_0_0) -> Int, scope 1696 // users: %30, %28
  destroy_addr %24 : $*_Buffer, scope 1696        // id: %27
  debug_value %26 : $Int, scope 1696              // id: %28
  %29 = integer_literal $Builtin.Int64, 2, scope 1696 // user: %32
  %30 = struct_extract %26 : $Int, #Int._value, scope 1696 // user: %32
  %31 = integer_literal $Builtin.Int1, -1, scope 1696 // user: %32
  %32 = builtin "smul_with_overflow_Int64"(%30 : $Builtin.Int64, %29 : $Builtin.Int64, %31 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1696 // users: %34, %33
  %33 = tuple_extract %32 : $(Builtin.Int64, Builtin.Int1), 0, scope 1696 // user: %36
  %34 = tuple_extract %32 : $(Builtin.Int64, Builtin.Int1), 1, scope 1696 // user: %35
  cond_fail %34 : $Builtin.Int1, scope 1696       // id: %35
  %36 = struct $Int (%33 : $Builtin.Int64), scope 1696 // user: %38
  dealloc_stack %24 : $*_Buffer, scope 1696       // id: %37
  br bb3(%36 : $Int), scope 1696                  // id: %38

// %39                                            // user: %41
bb3(%39 : $Int):                                  // Preds: bb2 bb1
  %40 = struct_extract %3 : $Int, #Int._value, scope 1696 // users: %44, %42
  %41 = struct_extract %39 : $Int, #Int._value, scope 1696 // users: %45, %42
  %42 = builtin "cmp_sge_Int64"(%41 : $Builtin.Int64, %40 : $Builtin.Int64) : $Builtin.Int1, scope 1696 // user: %43
  cond_br %42, bb5, bb4, scope 1696               // id: %43

bb4:                                              // Preds: bb3
  br bb6(%40 : $Builtin.Int64), scope 1696        // id: %44

bb5:                                              // Preds: bb3
  br bb6(%41 : $Builtin.Int64), scope 1696        // id: %45

// %46                                            // user: %47
bb6(%46 : $Builtin.Int64):                        // Preds: bb5 bb4
  %47 = struct $Int (%46 : $Builtin.Int64), scope 1696 // users: %51, %48
  debug_value %47 : $Int, scope 1696              // id: %48
  // function_ref _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
  %49 = function_ref @_TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1696 // user: %51
  %50 = metatype $@thin _ContiguousArrayBuffer<_Buffer.Element>.Type, scope 1696 // user: %51
  %51 = apply %49<_Buffer.Element>(%1, %47, %50) : $@convention(method) <τ_0_0> (Int, Int, @thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0>, scope 1696 // user: %52
  return %51 : $_ContiguousArrayBuffer<_Buffer.Element>, scope 1696 // id: %52
}

sil_scope 1697 {  parent @_TFSp14moveInitializefT4fromGSpx_5countSi_T_ : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, Int, UnsafeMutablePointer<τ_0_0>) -> () }

// UnsafeMutablePointer.moveInitialize(from : UnsafeMutablePointer<A>, count : Int) -> ()
sil public_external [fragile] @_TFSp14moveInitializefT4fromGSpx_5countSi_T_ : $@convention(method) <Pointee> (UnsafeMutablePointer<Pointee>, Int, UnsafeMutablePointer<Pointee>) -> () {
// %0                                             // users: %7, %3
// %1                                             // users: %41, %36, %16, %4
// %2                                             // users: %12, %6, %5
bb0(%0 : $UnsafeMutablePointer<Pointee>, %1 : $Int, %2 : $UnsafeMutablePointer<Pointee>):
  debug_value %0 : $UnsafeMutablePointer<Pointee>, scope 1697 // id: %3
  debug_value %1 : $Int, scope 1697               // id: %4
  debug_value %2 : $UnsafeMutablePointer<Pointee>, scope 1697 // id: %5
  %6 = struct_extract %2 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 1697 // users: %43, %38, %8
  %7 = struct_extract %0 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 1697 // users: %43, %38, %21, %8
  %8 = builtin "cmp_ult_RawPointer"(%6 : $Builtin.RawPointer, %7 : $Builtin.RawPointer) : $Builtin.Int1, scope 1697 // user: %9
  cond_br %8, bb2, bb1, scope 1697                // id: %9

bb1:                                              // Preds: bb0
  // function_ref >= infix<A where ...> (A, A) -> Bool
  %10 = function_ref @_TFsoi2geuRxs10ComparablerFTxx_Sb : $@convention(thin) <τ_0_0 where τ_0_0 : Comparable> (@in τ_0_0, @in τ_0_0) -> Bool, scope 1697 // user: %25
  %11 = alloc_stack $UnsafeMutablePointer<Pointee>, scope 1697 // users: %27, %25, %12
  store %2 to %11 : $*UnsafeMutablePointer<Pointee>, scope 1697 // id: %12
  %13 = metatype $@thick Pointee.Type, scope 1697 // user: %14
  %14 = builtin "strideof_nonzero"<Pointee>(%13 : $@thick Pointee.Type) : $Builtin.Word, scope 1697 // user: %15
  %15 = builtin "zextOrBitCast_Word_Int64"(%14 : $Builtin.Word) : $Builtin.Int64, scope 1697 // user: %18
  %16 = struct_extract %1 : $Int, #Int._value, scope 1697 // user: %18
  %17 = integer_literal $Builtin.Int1, 0, scope 1697 // user: %18
  %18 = builtin "smul_with_overflow_Int64"(%16 : $Builtin.Int64, %15 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1697 // user: %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 1697 // user: %20
  %20 = builtin "truncOrBitCast_Int64_Word"(%19 : $Builtin.Int64) : $Builtin.Word, scope 1697 // user: %21
  %21 = index_raw_pointer %7 : $Builtin.RawPointer, %20 : $Builtin.Word, scope 1697 // user: %22
  %22 = struct $UnsafeMutablePointer<Pointee> (%21 : $Builtin.RawPointer), scope 1697 // user: %24
  %23 = alloc_stack $UnsafeMutablePointer<Pointee>, scope 1697 // users: %26, %25, %24
  store %22 to %23 : $*UnsafeMutablePointer<Pointee>, scope 1697 // id: %24
  %25 = apply %10<UnsafeMutablePointer<Pointee>>(%11, %23) : $@convention(thin) <τ_0_0 where τ_0_0 : Comparable> (@in τ_0_0, @in τ_0_0) -> Bool, scope 1697 // user: %28
  dealloc_stack %23 : $*UnsafeMutablePointer<Pointee>, scope 1697 // id: %26
  dealloc_stack %11 : $*UnsafeMutablePointer<Pointee>, scope 1697 // id: %27
  br bb3(%25 : $Bool), scope 1697                 // id: %28

bb2:                                              // Preds: bb0
  %29 = integer_literal $Builtin.Int1, -1, scope 1697 // user: %30
  %30 = struct $Bool (%29 : $Builtin.Int1), scope 1697 // user: %31
  br bb3(%30 : $Bool), scope 1697                 // id: %31

// %32                                            // user: %33
bb3(%32 : $Bool):                                 // Preds: bb2 bb1
  %33 = struct_extract %32 : $Bool, #Bool._value, scope 1697 // user: %34
  cond_br %33, bb5, bb4, scope 1697               // id: %34

bb4:                                              // Preds: bb3
  %35 = metatype $@thick Pointee.Type, scope 1697 // user: %38
  %36 = struct_extract %1 : $Int, #Int._value, scope 1697 // user: %37
  %37 = builtin "truncOrBitCast_Int64_Word"(%36 : $Builtin.Int64) : $Builtin.Word, scope 1697 // user: %38
  %38 = builtin "takeArrayBackToFront"<Pointee>(%35 : $@thick Pointee.Type, %6 : $Builtin.RawPointer, %7 : $Builtin.RawPointer, %37 : $Builtin.Word) : $(), scope 1697
  br bb6, scope 1697                              // id: %39

bb5:                                              // Preds: bb3
  %40 = metatype $@thick Pointee.Type, scope 1697 // user: %43
  %41 = struct_extract %1 : $Int, #Int._value, scope 1697 // user: %42
  %42 = builtin "truncOrBitCast_Int64_Word"(%41 : $Builtin.Int64) : $Builtin.Word, scope 1697 // user: %43
  %43 = builtin "takeArrayFrontToBack"<Pointee>(%40 : $@thick Pointee.Type, %6 : $Builtin.RawPointer, %7 : $Builtin.RawPointer, %42 : $Builtin.Word) : $(), scope 1697
  br bb6, scope 1697                              // id: %44

bb6:                                              // Preds: bb5 bb4
  %45 = tuple (), scope 1697                      // user: %46
  return %45 : $(), scope 1697                    // id: %46
}

sil_scope 1698 {  parent @_TFVs20ManagedBufferPointerg8capacitySi : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> Int }

// ManagedBufferPointer.capacity.getter
sil public_external [fragile] @_TFVs20ManagedBufferPointerg8capacitySi : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> Int {
// %0                                             // users: %3, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1698 // id: %1
  // function_ref ManagedBufferPointer._capacityInBytes.getter
  %2 = function_ref @_TFVs20ManagedBufferPointerg16_capacityInBytesSi : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> Int, scope 1698 // user: %3
  %3 = apply %2<Header, Element>(%0) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> Int, scope 1698 // user: %7
  %4 = metatype $@thin ManagedBufferPointer<Header, Element>.Type, scope 1698 // user: %6
  // function_ref static ManagedBufferPointer._elementOffset.getter
  %5 = function_ref @_TZFVs20ManagedBufferPointerg14_elementOffsetSi : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1698 // user: %6
  %6 = apply %5<Header, Element>(%4) : $@convention(method) <τ_0_0, τ_0_1> (@thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> Int, scope 1698 // user: %8
  %7 = struct_extract %3 : $Int, #Int._value, scope 1698 // user: %10
  %8 = struct_extract %6 : $Int, #Int._value, scope 1698 // user: %10
  %9 = integer_literal $Builtin.Int1, 0, scope 1698 // user: %10
  %10 = builtin "ssub_with_overflow_Int64"(%7 : $Builtin.Int64, %8 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1698 // user: %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0, scope 1698 // users: %26, %19
  %12 = metatype $@thick Element.Type, scope 1698 // user: %13
  %13 = builtin "strideof_nonzero"<Element>(%12 : $@thick Element.Type) : $Builtin.Word, scope 1698 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 1698 // users: %26, %23, %16
  %15 = integer_literal $Builtin.Int64, 0, scope 1698 // user: %16
  %16 = builtin "cmp_eq_Int64"(%14 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int1, scope 1698 // user: %17
  cond_fail %16 : $Builtin.Int1, scope 1698       // id: %17
  %18 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1698 // user: %19
  %19 = builtin "cmp_eq_Int64"(%11 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int1, scope 1698 // user: %20
  cond_br %19, bb2, bb1, scope 1698               // id: %20

bb1:                                              // Preds: bb0
  br bb3, scope 1698                              // id: %21

bb2:                                              // Preds: bb0
  %22 = integer_literal $Builtin.Int64, -1, scope 1698 // user: %23
  %23 = builtin "cmp_eq_Int64"(%14 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1, scope 1698 // user: %24
  cond_fail %23 : $Builtin.Int1, scope 1698       // id: %24
  br bb3, scope 1698                              // id: %25

bb3:                                              // Preds: bb1 bb2
  %26 = builtin "sdiv_Int64"(%11 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int64, scope 1698 // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64), scope 1698 // user: %28
  return %27 : $Int, scope 1698                   // id: %28
}

sil_scope 1699 {  parent @_TFVs22_ContiguousArrayBufferCfT_GS_x_ : $@convention(method) <τ_0_0> (@thin _ContiguousArrayBuffer<τ_0_0>.Type) -> @owned _ContiguousArrayBuffer<τ_0_0> }

// _ContiguousArrayBuffer.init() -> _ContiguousArrayBuffer<A>
sil public_external [fragile] @_TFVs22_ContiguousArrayBufferCfT_GS_x_ : $@convention(method) <Element> (@thin _ContiguousArrayBuffer<Element>.Type) -> @owned _ContiguousArrayBuffer<Element> {
bb0(%0 : $@thin _ContiguousArrayBuffer<Element>.Type):
  // function_ref ManagedBufferPointer.init(_uncheckedUnsafeBufferObject : AnyObject) -> ManagedBufferPointer<A, B>
  %1 = function_ref @_TFVs20ManagedBufferPointerCfT28_uncheckedUnsafeBufferObjectPs9AnyObject__GS_xq__ : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1699 // user: %7
  %2 = metatype $@thin ManagedBufferPointer<_ArrayBody, Element>.Type, scope 1699 // user: %7
  %3 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 1699 // user: %4
  %4 = address_to_pointer %3 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 1699 // user: %5
  %5 = raw_pointer_to_ref %4 : $Builtin.RawPointer to $_EmptyArrayStorage, scope 1699 // users: %9, %6
  %6 = init_existential_ref %5 : $_EmptyArrayStorage : $_EmptyArrayStorage, $AnyObject, scope 1699 // user: %7
  %7 = apply %1<_ArrayBody, Element>(%6, %2) : $@convention(method) <τ_0_0, τ_0_1> (@owned AnyObject, @thin ManagedBufferPointer<τ_0_0, τ_0_1>.Type) -> @owned ManagedBufferPointer<τ_0_0, τ_0_1>, scope 1699 // user: %8
  %8 = struct $_ContiguousArrayBuffer<Element> (%7 : $ManagedBufferPointer<_ArrayBody, Element>), scope 1699 // user: %10
  strong_retain %5 : $_EmptyArrayStorage, scope 1699 // id: %9
  return %8 : $_ContiguousArrayBuffer<Element>, scope 1699 // id: %10
}

sil_scope 1700 {  parent @_TFVs20ManagedBufferPointerg16_capacityInBytesSi : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> Int }

// ManagedBufferPointer._capacityInBytes.getter
sil hidden_external [fragile] @_TFVs20ManagedBufferPointerg16_capacityInBytesSi : $@convention(method) <Header, Element> (@guaranteed ManagedBufferPointer<Header, Element>) -> Int {
// %0                                             // users: %4, %1
bb0(%0 : $ManagedBufferPointer<Header, Element>):
  debug_value %0 : $ManagedBufferPointer<Header, Element>, scope 1700 // id: %1
  // function_ref _swift_stdlib_malloc_size
  %2 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1700 // user: %8
  // function_ref ManagedBufferPointer._address.getter
  %3 = function_ref @_TFVs20ManagedBufferPointerg8_addressSv : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer, scope 1700 // user: %4
  %4 = apply %3<Header, Element>(%0) : $@convention(method) <τ_0_0, τ_0_1> (@guaranteed ManagedBufferPointer<τ_0_0, τ_0_1>) -> UnsafeMutableRawPointer, scope 1700 // user: %5
  %5 = struct_extract %4 : $UnsafeMutableRawPointer, #UnsafeMutableRawPointer._rawValue, scope 1700 // user: %6
  %6 = struct $UnsafeRawPointer (%5 : $Builtin.RawPointer), scope 1700 // user: %7
  %7 = enum $ImplicitlyUnwrappedOptional<UnsafeRawPointer>, #ImplicitlyUnwrappedOptional.some!enumelt.1, %6 : $UnsafeRawPointer, scope 1700 // user: %8
  %8 = apply %2(%7) : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1700 // user: %9
  return %8 : $Int, scope 1700                    // id: %9
}

sil_scope 1701 {  parent @_TFsoi2geuRxs10ComparablerFTxx_Sb : $@convention(thin) <τ_0_0 where τ_0_0 : Comparable> (@in τ_0_0, @in τ_0_0) -> Bool }

// >= infix<A where ...> (A, A) -> Bool
sil public_external [fragile] @_TFsoi2geuRxs10ComparablerFTxx_Sb : $@convention(thin) <T where T : Comparable> (@in T, @in T) -> Bool {
// %0                                             // users: %6, %2
// %1                                             // users: %6, %3
bb0(%0 : $*T, %1 : $*T):
  debug_value_addr %0 : $*T, scope 1701           // id: %2
  debug_value_addr %1 : $*T, scope 1701           // id: %3
  %4 = witness_method $T, #Comparable."<"!1 : $@convention(witness_method) <τ_0_0 where τ_0_0 : Comparable> (@in τ_0_0, @in τ_0_0, @thick τ_0_0.Type) -> Bool, scope 1701 // user: %6
  %5 = metatype $@thick T.Type, scope 1701        // user: %6
  %6 = apply %4<T>(%0, %1, %5) : $@convention(witness_method) <τ_0_0 where τ_0_0 : Comparable> (@in τ_0_0, @in τ_0_0, @thick τ_0_0.Type) -> Bool, scope 1701 // user: %7
  %7 = struct_extract %6 : $Bool, #Bool._value, scope 1701 // user: %9
  %8 = integer_literal $Builtin.Int1, -1, scope 1701 // user: %9
  %9 = builtin "xor_Int1"(%7 : $Builtin.Int1, %8 : $Builtin.Int1) : $Builtin.Int1, scope 1701 // user: %10
  %10 = struct $Bool (%9 : $Builtin.Int1), scope 1701 // user: %11
  return %10 : $Bool, scope 1701                  // id: %11
}


// _ContiguousArrayStorageBase._getNonVerbatimBridgedCount() -> Int
sil hidden_external [fragile] [thunk] [always_inline] @_TFCs27_ContiguousArrayStorageBase27_getNonVerbatimBridgedCountfT_Si : $@convention(method) (@guaranteed _ContiguousArrayStorageBase) -> Int


// _ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer() -> _HeapBuffer<Int, AnyObject>
sil hidden_external [fragile] [thunk] [always_inline] @_TFCs27_ContiguousArrayStorageBase32_getNonVerbatimBridgedHeapBufferfT_GVs11_HeapBufferSiPs9AnyObject__ : $@convention(method) (@guaranteed _ContiguousArrayStorageBase) -> @owned _HeapBuffer<Int, AnyObject>


// _ContiguousArrayStorageBase.staticElementType.getter
sil hidden_external [fragile] [thunk] [always_inline] @_TFCs27_ContiguousArrayStorageBaseg17staticElementTypePMP_ : $@convention(method) (@guaranteed _ContiguousArrayStorageBase) -> @thick Any.Type


// _ContiguousArrayStorage1._withVerbatimBridgedUnsafeBufferImpl((UnsafeBufferPointer<AnyObject>) throws -> ()) throws -> ()
sil hidden_external [fragile] [thunk] [always_inline] @_TFCs24_ContiguousArrayStorage136_withVerbatimBridgedUnsafeBufferImplfzFzGSRPs9AnyObject__T_T_ : $@convention(method) (@owned @callee_owned (UnsafeBufferPointer<AnyObject>) -> @error Error, @guaranteed _ContiguousArrayStorage1) -> @error Error


// _ContiguousArrayStorage1.__deallocating_deinit
sil hidden_external [fragile] @_TFCs24_ContiguousArrayStorage1D : $@convention(method) (@owned _ContiguousArrayStorage1) -> ()


// _ContiguousArrayStorageBase.__deallocating_deinit
sil hidden_external [fragile] @_TFCs27_ContiguousArrayStorageBaseD : $@convention(method) (@owned _ContiguousArrayStorageBase) -> ()


// _SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A
sil hidden_external [fragile] @_TFCs40_SwiftNativeNSArrayWithContiguousStorage25withUnsafeBufferOfObjectsurfzFzGSRPs9AnyObject__xx : $@convention(method) <R> (@owned @callee_owned (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), @guaranteed _SwiftNativeNSArrayWithContiguousStorage) -> (@out R, @error Error)


// _SwiftNativeNSArrayWithContiguousStorage.__deallocating_deinit
sil hidden_external [fragile] @_TFCs40_SwiftNativeNSArrayWithContiguousStorageD : $@convention(method) (@owned _SwiftNativeNSArrayWithContiguousStorage) -> ()


// _SwiftNativeNSArray.__deallocating_deinit
sil hidden_external [fragile] @_TFCs19_SwiftNativeNSArrayD : $@convention(method) (@owned _SwiftNativeNSArray) -> ()


// _AnyIteratorBoxBase.next() -> A?
sil hidden_external [fragile] @_TFCs19_AnyIteratorBoxBase4nextfT_GSqx_ : $@convention(method) <Element> (@guaranteed _AnyIteratorBoxBase<Element>) -> @out Optional<Element>


// _AnyIteratorBoxBase.__deallocating_deinit
sil hidden_external [fragile] @_TFCs19_AnyIteratorBoxBaseD : $@convention(method) <Element> (@owned _AnyIteratorBoxBase<Element>) -> ()


// _swift_stdlib_getUnsafeArgvArgc
sil [clang _swift_stdlib_getUnsafeArgvArgc] @_swift_stdlib_getUnsafeArgvArgc : $@convention(c) (UnsafeMutablePointer<Int32>) -> UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>

sil_scope 1702 {  parent @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never }

// _abstract(file : StaticString, line : UInt) -> Never
sil hidden_external [fragile] [noinline] @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never {
// %0                                             // users: %23, %2
// %1                                             // users: %23, %3
bb0(%0 : $StaticString, %1 : $UInt):
  debug_value %0 : $StaticString, scope 1702      // id: %2
  debug_value %1 : $UInt, scope 1702              // id: %3
  %4 = string_literal utf8 "Method must be overridden", scope 1702 // users: %6, %5
  debug_value %4 : $Builtin.RawPointer, scope 1702 // id: %5
  %6 = struct $UnsafeMutableRawPointer (%4 : $Builtin.RawPointer), scope 1702 // user: %7
  %7 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %6 : $UnsafeMutableRawPointer, scope 1702 // users: %20, %9
  %8 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 1702 // users: %20, %10
  debug_value %7 : $Optional<UnsafeMutableRawPointer>, scope 1702 // id: %9
  debug_value %8 : $Optional<AnyObject>, scope 1702 // id: %10
  %11 = integer_literal $Builtin.Int32, 0, scope 1702 // user: %22
  // function_ref _assertionFailed(StaticString, String, StaticString, UInt, flags : UInt32) -> Never
  %12 = function_ref @_TFs16_assertionFailedFTVs12StaticStringSSS_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, @owned String, StaticString, UInt, UInt32) -> Never, scope 1702 // user: %23
  %13 = string_literal utf8 "fatal error", scope 1702 // user: %15
  %14 = integer_literal $Builtin.Word, 11, scope 1702 // user: %17
  %15 = builtin "ptrtoint_Word"(%13 : $Builtin.RawPointer) : $Builtin.Word, scope 1702 // user: %17
  %16 = integer_literal $Builtin.Int8, 2, scope 1702 // user: %17
  %17 = struct $StaticString (%15 : $Builtin.Word, %14 : $Builtin.Word, %16 : $Builtin.Int8), scope 1702 // user: %23
  %18 = integer_literal $Builtin.Int64, 25, scope 1702 // user: %19
  %19 = struct $UInt (%18 : $Builtin.Int64), scope 1702 // user: %20
  %20 = struct $_StringCore (%7 : $Optional<UnsafeMutableRawPointer>, %19 : $UInt, %8 : $Optional<AnyObject>), scope 1702 // user: %21
  %21 = struct $String (%20 : $_StringCore), scope 1702 // user: %23
  %22 = struct $UInt32 (%11 : $Builtin.Int32), scope 1702 // user: %23
  %23 = apply %12(%17, %21, %0, %1, %22) : $@convention(thin) (StaticString, @owned String, StaticString, UInt, UInt32) -> Never, scope 1702
  unreachable, scope 1702                         // id: %24
}


// _assertionFailed(StaticString, String, StaticString, UInt, flags : UInt32) -> Never
sil [fragile] [noinline] [_semantics "stdlib_binary_only"] @_TFs16_assertionFailedFTVs12StaticStringSSS_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, @owned String, StaticString, UInt, UInt32) -> Never


// protocol witness for IndexableBase.startIndex.getter in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g10startIndexwx5Index : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed CountableRange<Bound>) -> @out Bound


// protocol witness for IndexableBase.endIndex.getter in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g8endIndexwx5Index : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed CountableRange<Bound>) -> @out Bound


// protocol witness for IndexableBase.subscript.getter in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g9subscriptFwx5Indexwx8_Element : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in Bound, @in_guaranteed CountableRange<Bound>) -> @out Bound


// protocol witness for IndexableBase.subscript.getter in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g9subscriptFGVs5Rangewx5Index_wx11SubSequence : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in Range<Bound>, @in_guaranteed CountableRange<Bound>) -> @out CountableRange<Bound>


// protocol witness for IndexableBase._failEarlyRangeCheck(A.Index, bounds : Range<A.Index>) -> () in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_20_failEarlyRangeCheckfTwx5Index6boundsGVs5RangewxS5___T_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in Bound, @in Range<Bound>, @in_guaranteed CountableRange<Bound>) -> ()


// protocol witness for IndexableBase._failEarlyRangeCheck(Range<A.Index>, bounds : Range<A.Index>) -> () in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_20_failEarlyRangeCheckfTGVs5Rangewx5Index_6boundsGS5_wxS6___T_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in Range<Bound>, @in Range<Bound>, @in_guaranteed CountableRange<Bound>) -> ()


// protocol witness for IndexableBase.index(after : A.Index) -> A.Index in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_5indexfT5afterwx5Index_wxS5_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in Bound, @in_guaranteed CountableRange<Bound>) -> @out Bound


// protocol witness for IndexableBase.formIndex(after : inout A.Index) -> () in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] [always_inline] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_9formIndexfT5afterRwx5Index_T_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@inout Bound, @in_guaranteed CountableRange<Bound>) -> ()


// protocol witness for static Equatable.== infix(A, A) -> Bool in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis9EquatablesZFS_oi2eefTxx_Sb : $@convention(witness_method) (@in Int, @in Int, @thick Int.Type) -> Bool


// protocol witness for _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral : Builtin.Int2048) -> A in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis35_ExpressibleByBuiltinIntegerLiteralsFS_CfT22_builtinIntegerLiteralBi2048__x : $@convention(witness_method) (Builtin.Int2048, @thick Int.Type) -> @out Int


// protocol witness for _Strideable.distance(to : A) -> A.Stride in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis11_StrideablesFS_8distancefT2tox_wx6Stride : $@convention(witness_method) (@in Int, @in_guaranteed Int) -> @out Int


// protocol witness for _Strideable.advanced(by : A.Stride) -> A in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis11_StrideablesFS_8advancedfT2bywx6Stride_x : $@convention(witness_method) (@in Int, @in_guaranteed Int) -> @out Int


// protocol witness for static _Strideable._step(after : (index : Int?, value : A), from : A, by : A.Stride) -> (index : Int?, value : A) in conformance Int
sil [transparent] [fragile] [thunk] @_TTWSis11_StrideablesZFS_5_stepfT5afterT5indexGSqSi_5valuex_4fromx2bywx6Stride_T5indexGSqSi_5valuex_ : $@convention(witness_method) (Optional<Int>, @in Int, @in Int, @in Int, @thick Int.Type) -> (Optional<Int>, @out Int)


// protocol witness for Sequence.makeIterator() -> A.Iterator in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_12makeIteratorfT_wx8Iterator : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed CountableRange<Bound>) -> @out IndexingIterator<CountableRange<Bound>>


// protocol witness for Sequence.underestimatedCount.getter in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_g19underestimatedCountSi : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed CountableRange<Bound>) -> Int


// protocol witness for Sequence.map<A> ((A.Iterator.Element) throws -> A1) throws -> [A1] in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_3mapurfzFzWx8Iterator7Element_qd__GSaqd___ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral><T> (@owned @callee_owned (@in Bound) -> (@out T, @error Error), @in_guaranteed CountableRange<Bound>) -> (@owned Array<T>, @error Error)


// protocol witness for Sequence.filter((A.Iterator.Element) throws -> Bool) throws -> [A.Iterator.Element] in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_6filterfzFzWx8Iterator7Element_SbGSaWxS5_S6___ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@owned @callee_owned (@in Bound) -> (Bool, @error Error), @in_guaranteed CountableRange<Bound>) -> (@owned Array<Bound>, @error Error)


// protocol witness for Sequence.forEach((A.Iterator.Element) throws -> ()) throws -> () in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_7forEachfzFzWx8Iterator7Element_T_T_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@owned @callee_owned (@in Bound) -> @error Error, @in_guaranteed CountableRange<Bound>) -> @error Error


// protocol witness for Sequence.dropFirst(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_9dropFirstfSiwx11SubSequence : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (Int, @in_guaranteed CountableRange<Bound>) -> @out CountableRange<Bound>


// protocol witness for Sequence.dropLast(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_8dropLastfSiwx11SubSequence : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (Int, @in_guaranteed CountableRange<Bound>) -> @out CountableRange<Bound>


// protocol witness for Sequence.prefix(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_6prefixfSiwx11SubSequence : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (Int, @in_guaranteed CountableRange<Bound>) -> @out CountableRange<Bound>


// protocol witness for Sequence.suffix(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_6suffixfSiwx11SubSequence : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (Int, @in_guaranteed CountableRange<Bound>) -> @out CountableRange<Bound>


// protocol witness for Sequence.split(maxSplits : Int, omittingEmptySubsequences : Bool, whereSeparator : (A.Iterator.Element) throws -> Bool) throws -> [A.SubSequence] in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_5splitfzT9maxSplitsSi25omittingEmptySubsequencesSb14whereSeparatorFzWx8Iterator7Element_Sb_GSawx11SubSequence_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (Int, Bool, @owned @callee_owned (@in Bound) -> (Bool, @error Error), @in_guaranteed CountableRange<Bound>) -> (@owned Array<CountableRange<Bound>>, @error Error)


// protocol witness for Sequence._customContainsEquatableElement(A.Iterator.Element) -> Bool? in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_31_customContainsEquatableElementfWx8Iterator7Element_GSqSb_ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in Bound, @in_guaranteed CountableRange<Bound>) -> Optional<Bool>


// protocol witness for Sequence._preprocessingPass<A> (() throws -> A1) throws -> A1? in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_18_preprocessingPassurfzFzT_qd__GSqqd___ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral><R> (@owned @callee_owned () -> (@out R, @error Error), @in_guaranteed CountableRange<Bound>) -> (@out Optional<R>, @error Error)


// protocol witness for Sequence._copyToContiguousArray() -> ContiguousArray<A.Iterator.Element> in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_22_copyToContiguousArrayfT_GVs15ContiguousArrayWx8Iterator7Element__ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed CountableRange<Bound>) -> @owned ContiguousArray<Bound>


// protocol witness for Sequence._copyContents(initializing : UnsafeMutablePointer<A.Iterator.Element>) -> UnsafeMutablePointer<A.Iterator.Element> in conformance <A where ...> CountableRange<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_13_copyContentsfT12initializingGSpWx8Iterator7Element___GSpWxS5_S6___ : $@convention(witness_method) <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (UnsafeMutablePointer<Bound>, @in_guaranteed CountableRange<Bound>) -> UnsafeMutablePointer<Bound>


// protocol witness for IteratorProtocol.next() -> A.Element? in conformance <A where ...> IndexingIterator<A>
sil [transparent] [fragile] [thunk] @_TTWuRxs13IndexableBaserGVs16IndexingIteratorx_s16IteratorProtocolsFS1_4nextfT_GSqwx7Element_ : $@convention(witness_method) <Elements where Elements : IndexableBase, Elements.Index : Comparable> (@inout IndexingIterator<Elements>) -> @out Optional<Elements._Element>


// protocol witness for _ArrayBufferProtocol.init() -> A in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_CfT_x : $@convention(witness_method) <Element> (@thick _ArrayBuffer<Element>.Type) -> @out _ArrayBuffer<Element>


// protocol witness for _ArrayBufferProtocol.init(_ContiguousArrayBuffer<A.Element>, shiftedToStartIndex : Int) -> A in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_CfTGVs22_ContiguousArrayBufferwx7Element_19shiftedToStartIndexSi_x : $@convention(witness_method) <Element> (@owned _ContiguousArrayBuffer<Element>, Int, @thick _ArrayBuffer<Element>.Type) -> @out _ArrayBuffer<Element>


// protocol witness for _ArrayBufferProtocol._copyContents(subRange : Range<Int>, initializing : UnsafeMutablePointer<A.Element>) -> UnsafeMutablePointer<A.Element> in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpwx7Element__GSpwxS2__ : $@convention(witness_method) <Element> (Range<Int>, UnsafeMutablePointer<Element>, @in_guaranteed _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element>


// protocol witness for _ArrayBufferProtocol.subscript.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g9subscriptFSiwx7Element : $@convention(witness_method) <Element> (Int, @in_guaranteed _ArrayBuffer<Element>) -> @out Element


// protocol witness for _ArrayBufferProtocol.subscript.setter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_s9subscriptFSiwx7Element : $@convention(witness_method) <Element> (@in Element, Int, @in_guaranteed _ArrayBuffer<Element>) -> ()


// protocol witness for _ArrayBufferProtocol.subscript.materializeForSet in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_m9subscriptFSiwx7Element : $@convention(witness_method) <Element> (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, Int, @inout _ArrayBuffer<Element>) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>)


// protocol witness for _ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity : Int) -> _ContiguousArrayBuffer<A.Element>? in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_33requestUniqueMutableBackingBufferfT15minimumCapacitySi_GSqGVs22_ContiguousArrayBufferwx7Element__ : $@convention(witness_method) <Element> (Int, @inout _ArrayBuffer<Element>) -> @owned Optional<_ContiguousArrayBuffer<Element>>


// protocol witness for _ArrayBufferProtocol.isMutableAndUniquelyReferenced() -> Bool in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_30isMutableAndUniquelyReferencedfT_Sb : $@convention(witness_method) <Element> (@inout _ArrayBuffer<Element>) -> Bool


// protocol witness for _ArrayBufferProtocol.requestNativeBuffer() -> _ContiguousArrayBuffer<A.Element>? in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_19requestNativeBufferfT_GSqGVs22_ContiguousArrayBufferwx7Element__ : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> @owned Optional<_ContiguousArrayBuffer<Element>>


// protocol witness for _ArrayBufferProtocol.replace<A where ...> (subRange : Range<Int>, with : Int, elementsOf : A1) -> () in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_7replaceuRd__s10Collectionwx7ElementzWd__8Iterator7Element_rfT8subRangeGVs5RangeSi_4withSi10elementsOfqd___T_ : $@convention(witness_method) <Element><C where C : Collection, C.Index : Comparable, C.IndexDistance : SignedInteger, C.IndexDistance.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, C.IndexDistance.Stride : SignedNumber, C.IndexDistance.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, C.Indices : IndexableBase, C.Indices : Sequence, C.Indices.Index : Comparable, C.Indices.Iterator : IteratorProtocol, C.Iterator : IteratorProtocol, C.SubSequence : IndexableBase, C.SubSequence : Sequence, C.SubSequence.Index : Comparable, C.SubSequence.Iterator : IteratorProtocol, C.Iterator.Element == Element> (Range<Int>, Int, @in C, @inout _ArrayBuffer<Element>) -> ()


// protocol witness for _ArrayBufferProtocol.subscript.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g9subscriptFGVs5RangeSi_GVs12_SliceBufferwx7Element_ : $@convention(witness_method) <Element> (Range<Int>, @in_guaranteed _ArrayBuffer<Element>) -> @owned _SliceBuffer<Element>


// protocol witness for _ArrayBufferProtocol.withUnsafeBufferPointer<A> ((UnsafeBufferPointer<A.Element>) throws -> A1) throws -> A1 in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_23withUnsafeBufferPointerurfzFzGSRwx7Element_qd__qd__ : $@convention(witness_method) <Element><R> (@owned @callee_owned (UnsafeBufferPointer<Element>) -> (@out R, @error Error), @in_guaranteed _ArrayBuffer<Element>) -> (@out R, @error Error)


// protocol witness for _ArrayBufferProtocol.withUnsafeMutableBufferPointer<A> ((UnsafeMutableBufferPointer<A.Element>) throws -> A1) throws -> A1 in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_30withUnsafeMutableBufferPointerurfzFzGSrwx7Element_qd__qd__ : $@convention(witness_method) <Element><R> (@owned @callee_owned (UnsafeMutableBufferPointer<Element>) -> (@out R, @error Error), @inout _ArrayBuffer<Element>) -> (@out R, @error Error)


// protocol witness for _ArrayBufferProtocol.count.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] [always_inline] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g5countSi : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> Int


// protocol witness for _ArrayBufferProtocol.count.setter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_s5countSi : $@convention(witness_method) <Element> (Int, @inout _ArrayBuffer<Element>) -> ()


// protocol witness for _ArrayBufferProtocol.count.materializeForSet in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_m5countSi : $@convention(witness_method) <Element> (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @inout _ArrayBuffer<Element>) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>)


// protocol witness for _ArrayBufferProtocol.capacity.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g8capacitySi : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> Int


// protocol witness for _ArrayBufferProtocol.owner.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g5ownerPs9AnyObject_ : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> @owned AnyObject


// protocol witness for _ArrayBufferProtocol.firstElementAddress.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g19firstElementAddressGSpwx7Element_ : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element>


// protocol witness for _ArrayBufferProtocol.firstElementAddressIfContiguous.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g31firstElementAddressIfContiguousGSqGSpwx7Element__ : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> Optional<UnsafeMutablePointer<Element>>


// protocol witness for _ArrayBufferProtocol.subscriptBaseAddress.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g20subscriptBaseAddressGSpwx7Element_ : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> UnsafeMutablePointer<Element>


// protocol witness for _ArrayBufferProtocol.identity.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g8identitySV : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> UnsafeRawPointer


// protocol witness for _ArrayBufferProtocol.startIndex.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g10startIndexSi : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> Int


// protocol witness for _PointerFunction.call(UnsafeMutablePointer<A.Element>, count : Int) -> () in conformance <A> _IgnorePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs14_IgnorePointerx_s16_PointerFunctionsFS0_4callfTGSpwx7Element_5countSi_T_ : $@convention(witness_method) <T> (UnsafeMutablePointer<T>, Int, @in_guaranteed _IgnorePointer<T>) -> ()


// protocol witness for MutableIndexable.startIndex.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g10startIndexwx5Index : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> @out Int


// protocol witness for MutableIndexable.endIndex.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g8endIndexwx5Index : $@convention(witness_method) <Element> (@in_guaranteed _ArrayBuffer<Element>) -> @out Int


// protocol witness for MutableIndexable.subscript.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g9subscriptFwx5Indexwx8_Element : $@convention(witness_method) <Element> (@in Int, @in_guaranteed _ArrayBuffer<Element>) -> @out Element


// protocol witness for MutableIndexable.subscript.setter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_s9subscriptFwx5Indexwx8_Element : $@convention(witness_method) <Element> (@in Element, @in Int, @inout _ArrayBuffer<Element>) -> ()


// protocol witness for MutableIndexable.subscript.materializeForSet in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_m9subscriptFwx5Indexwx8_Element : $@convention(witness_method) <Element> (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @in Int, @inout _ArrayBuffer<Element>) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>)


// protocol witness for MutableIndexable.subscript.getter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g9subscriptFGVs5Rangewx5Index_wx11SubSequence : $@convention(witness_method) <Element> (@in Range<Int>, @in_guaranteed _ArrayBuffer<Element>) -> @out _SliceBuffer<Element>


// protocol witness for MutableIndexable.subscript.setter in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_s9subscriptFGVs5Rangewx5Index_wx11SubSequence : $@convention(witness_method) <Element> (@in _SliceBuffer<Element>, @in Range<Int>, @inout _ArrayBuffer<Element>) -> ()


// protocol witness for MutableIndexable.subscript.materializeForSet in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_m9subscriptFGVs5Rangewx5Index_wx11SubSequence : $@convention(witness_method) <Element> (Builtin.RawPointer, @inout Builtin.UnsafeValueBuffer, @in Range<Int>, @inout _ArrayBuffer<Element>) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>)


// protocol witness for MutableIndexable._failEarlyRangeCheck(A.Index, bounds : Range<A.Index>) -> () in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_20_failEarlyRangeCheckfTwx5Index6boundsGVs5RangewxS1___T_ : $@convention(witness_method) <Element> (@in Int, @in Range<Int>, @in_guaranteed _ArrayBuffer<Element>) -> ()


// protocol witness for MutableIndexable._failEarlyRangeCheck(Range<A.Index>, bounds : Range<A.Index>) -> () in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_20_failEarlyRangeCheckfTGVs5Rangewx5Index_6boundsGS1_wxS2___T_ : $@convention(witness_method) <Element> (@in Range<Int>, @in Range<Int>, @in_guaranteed _ArrayBuffer<Element>) -> ()


// protocol witness for MutableIndexable.index(after : A.Index) -> A.Index in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_5indexfT5afterwx5Index_wxS1_ : $@convention(witness_method) <Element> (@in Int, @in_guaranteed _ArrayBuffer<Element>) -> @out Int


// protocol witness for MutableIndexable.formIndex(after : inout A.Index) -> () in conformance <A> _ArrayBuffer<A>
sil [transparent] [fragile] [thunk] [always_inline] @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_9formIndexfT5afterRwx5Index_T_ : $@convention(witness_method) <Element> (@inout Int, @in_guaranteed _ArrayBuffer<Element>) -> ()


// protocol witness for static Comparable.< infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSPx_s10ComparablesZFS_oi1lfTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafePointer<Pointee>, @in UnsafePointer<Pointee>, @thick UnsafePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.<= infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSPx_s10ComparablesZFS_oi2lefTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafePointer<Pointee>, @in UnsafePointer<Pointee>, @thick UnsafePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.>= infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSPx_s10ComparablesZFS_oi2gefTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafePointer<Pointee>, @in UnsafePointer<Pointee>, @thick UnsafePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.> infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSPx_s10ComparablesZFS_oi1gfTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafePointer<Pointee>, @in UnsafePointer<Pointee>, @thick UnsafePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.< infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSpx_s10ComparablesZFS_oi1lfTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafeMutablePointer<Pointee>, @in UnsafeMutablePointer<Pointee>, @thick UnsafeMutablePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.<= infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSpx_s10ComparablesZFS_oi2lefTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafeMutablePointer<Pointee>, @in UnsafeMutablePointer<Pointee>, @thick UnsafeMutablePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.>= infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSpx_s10ComparablesZFS_oi2gefTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafeMutablePointer<Pointee>, @in UnsafeMutablePointer<Pointee>, @thick UnsafeMutablePointer<Pointee>.Type) -> Bool


// protocol witness for static Comparable.> infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
sil [transparent] [fragile] [thunk] @_TTWurGSpx_s10ComparablesZFS_oi1gfTxx_Sb : $@convention(witness_method) <Pointee> (@in UnsafeMutablePointer<Pointee>, @in UnsafeMutablePointer<Pointee>, @thick UnsafeMutablePointer<Pointee>.Type) -> Bool


// protocol witness for IndexableBase.startIndex.getter in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_g10startIndexwx5Index : $@convention(witness_method) <Element> (@in_guaranteed Array<Element>) -> @out Int


// protocol witness for IndexableBase.endIndex.getter in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_g8endIndexwx5Index : $@convention(witness_method) <Element> (@in_guaranteed Array<Element>) -> @out Int


// protocol witness for IndexableBase.subscript.getter in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_g9subscriptFwx5Indexwx8_Element : $@convention(witness_method) <Element> (@in Int, @in_guaranteed Array<Element>) -> @out Element


// protocol witness for IndexableBase.subscript.getter in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_g9subscriptFGVs5Rangewx5Index_wx11SubSequence : $@convention(witness_method) <Element> (@in Range<Int>, @in_guaranteed Array<Element>) -> @out ArraySlice<Element>


// protocol witness for IndexableBase._failEarlyRangeCheck(A.Index, bounds : Range<A.Index>) -> () in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_20_failEarlyRangeCheckfTwx5Index6boundsGVs5RangewxS0___T_ : $@convention(witness_method) <Element> (@in Int, @in Range<Int>, @in_guaranteed Array<Element>) -> ()


// protocol witness for IndexableBase._failEarlyRangeCheck(Range<A.Index>, bounds : Range<A.Index>) -> () in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_20_failEarlyRangeCheckfTGVs5Rangewx5Index_6boundsGS0_wxS1___T_ : $@convention(witness_method) <Element> (@in Range<Int>, @in Range<Int>, @in_guaranteed Array<Element>) -> ()


// protocol witness for IndexableBase.index(after : A.Index) -> A.Index in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_5indexfT5afterwx5Index_wxS0_ : $@convention(witness_method) <Element> (@in Int, @in_guaranteed Array<Element>) -> @out Int


// protocol witness for IndexableBase.formIndex(after : inout A.Index) -> () in conformance <A> [A]
sil [transparent] [fragile] [thunk] @_TTWurGSax_s13IndexableBasesFS_9formIndexfT5afterRwx5Index_T_ : $@convention(witness_method) <Element> (@inout Int, @in_guaranteed Array<Element>) -> ()


// swift_bufferDeallocateFromStack
sil hidden_external [fragile] @swift_bufferDeallocateFromStack : $@convention(thin) (@guaranteed AnyObject) -> ()


// swift_bufferAllocateOnStack
sil hidden_external [fragile] @swift_bufferAllocateOnStack : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject

sil_scope 1703 {  parent @_TTSf4n_n_d___TTSg5SS___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 1704 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBufferCfT_GS_x_ : $@convention(method) (@thin _ContiguousArrayBuffer<String>.Type) -> @owned _ContiguousArrayBuffer<String> }
sil_scope 1705 {  parent 1703 }
sil_scope 1706 {  parent 1704 inlined_at 1705 }
sil_scope 1707 {  parent 1703 }
sil_scope 1708 {  parent 30 inlined_at 1707 }
sil_scope 1709 {  parent 36 inlined_at 1707 }
sil_scope 1710 {  parent 42 inlined_at 1707 }
sil_scope 1711 {  parent 47 inlined_at 1707 }
sil_scope 1712 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg16_capacityInBytesSi : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> Int }
sil_scope 1713 {  parent @_TTSg5Vs10_ArrayBody_SS___TFVs20ManagedBufferPointerg8capacitySi : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, String>) -> Int }
sil_scope 1714 {  parent 1713 }
sil_scope 1715 {  parent 1712 inlined_at 1714 }
sil_scope 1716 {  parent 1703 }
sil_scope 1717 {  parent 1715 inlined_at 1716 }
sil_scope 1718 {  parent 1712 }
sil_scope 1719 {  parent 68 inlined_at 1718 }
sil_scope 1720 {  parent 1719 inlined_at 1714 }
sil_scope 1721 {  parent 1720 inlined_at 1716 }
sil_scope 1722 {  parent 1713 }
sil_scope 1723 {  parent 34 inlined_at 1722 }
sil_scope 1724 {  parent 1723 inlined_at 1716 }
sil_scope 1725 {  parent 41 inlined_at 1722 }
sil_scope 1726 {  parent 1725 inlined_at 1716 }
sil_scope 1727 {  parent 1713 inlined_at 1716 }
sil_scope 1728 {  parent 1703 }
sil_scope 1729 {  parent 57 inlined_at 1728 }
sil_scope 1730 {  parent 64 inlined_at 1728 }
sil_scope 1731 {  parent 77 inlined_at 1728 }
sil_scope 1732 {  parent 83 inlined_at 1728 }

// specialized specialized _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
sil shared @_TTSf4n_n_d___TTSg5SS___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<String> {
// %0                                             // users: %139, %132, %127, %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $Int, %1 : $Int):
  debug_value %0 : $Int, scope 1703               // id: %2
  debug_value %1 : $Int, scope 1703               // id: %3
  %4 = struct_extract %0 : $Int, #Int._value, scope 1703 // users: %145, %6
  %5 = struct_extract %1 : $Int, #Int._value, scope 1703 // users: %8, %6
  %6 = builtin "cmp_sge_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 1703 // user: %7
  cond_br %6, bb1, bb15, scope 1703               // id: %7

bb1:                                              // Preds: bb0
  br bb2(%5 : $Builtin.Int64), scope 1703         // id: %8

// %9                                             // users: %77, %11
bb2(%9 : $Builtin.Int64):                         // Preds: bb15 bb1
  %10 = integer_literal $Builtin.Int64, 0, scope 1703 // users: %114, %11
  %11 = builtin "cmp_eq_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 1703 // user: %12
  cond_br %11, bb3, bb5, scope 1703               // id: %12

bb3:                                              // Preds: bb2
  %13 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 1706 // user: %14
  %14 = address_to_pointer %13 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 1706 // user: %15
  %15 = raw_pointer_to_ref %14 : $Builtin.RawPointer to $_EmptyArrayStorage, scope 1706 // users: %17, %16
  %16 = unchecked_ref_cast %15 : $_EmptyArrayStorage to $Builtin.NativeObject, scope 1706 // user: %18
  strong_retain %15 : $_EmptyArrayStorage, scope 1703 // id: %17
  br bb4(%16 : $Builtin.NativeObject), scope 1703 // id: %18

// %19                                            // user: %20
bb4(%19 : $Builtin.NativeObject):                 // Preds: bb14 bb3
  %20 = struct $ManagedBufferPointer<_ArrayBody, String> (%19 : $Builtin.NativeObject), scope 1703 // user: %21
  %21 = struct $_ContiguousArrayBuffer<String> (%20 : $ManagedBufferPointer<_ArrayBody, String>), scope 1703 // user: %22
  return %21 : $_ContiguousArrayBuffer<String>, scope 1703 // id: %22

bb5:                                              // Preds: bb2
  %23 = metatype $@thick _ContiguousArrayStorage<String>.Type, scope 1703 // user: %24
  %24 = init_existential_metatype %23 : $@thick _ContiguousArrayStorage<String>.Type, $@thick AnyObject.Type, scope 1703 // users: %101, %25
  debug_value %24 : $@thick AnyObject.Type, scope 1708 // id: %25
  %26 = integer_literal $Builtin.Int1, -1, scope 1708 // users: %81, %77, %61, %54, %35
  %27 = builtin "onFastPath"() : $(), scope 1709
  %28 = builtin "onFastPath"() : $(), scope 1710
  %29 = metatype $@thick HeapObject.Type, scope 1710 // users: %91, %30
  %30 = builtin "sizeof"<HeapObject>(%29 : $@thick HeapObject.Type) : $Builtin.Word, scope 1710 // user: %31
  %31 = builtin "zextOrBitCast_Word_Int64"(%30 : $Builtin.Word) : $Builtin.Int64, scope 1710 // user: %35
  %32 = metatype $@thick _ArrayBody.Type, scope 1710 // users: %52, %33
  %33 = builtin "alignof"<_ArrayBody>(%32 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1710 // user: %34
  %34 = builtin "zextOrBitCast_Word_Int64"(%33 : $Builtin.Word) : $Builtin.Int64, scope 1710 // users: %121, %87, %43, %35
  %35 = builtin "uadd_with_overflow_Int64"(%31 : $Builtin.Int64, %34 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1710 // users: %37, %36
  %36 = tuple_extract %35 : $(Builtin.Int64, Builtin.Int1), 0, scope 1710 // user: %41
  %37 = tuple_extract %35 : $(Builtin.Int64, Builtin.Int1), 1, scope 1710 // user: %38
  cond_fail %37 : $Builtin.Int1, scope 1710       // id: %38
  %39 = integer_literal $Builtin.Int64, 1, scope 1710 // users: %137, %98, %67, %65, %43, %41
  %40 = integer_literal $Builtin.Int1, 0, scope 1710 // users: %112, %98, %67, %65, %43, %41
  %41 = builtin "usub_with_overflow_Int64"(%36 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1710 // user: %42
  %42 = tuple_extract %41 : $(Builtin.Int64, Builtin.Int1), 0, scope 1710 // user: %47
  %43 = builtin "usub_with_overflow_Int64"(%34 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1710 // user: %44
  %44 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 0, scope 1710 // user: %46
  %45 = integer_literal $Builtin.Int64, -1, scope 1710 // users: %122, %69, %46
  %46 = builtin "xor_Int64"(%44 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int64, scope 1710 // user: %47
  %47 = builtin "and_Int64"(%42 : $Builtin.Int64, %46 : $Builtin.Int64) : $Builtin.Int64, scope 1710 // user: %48
  %48 = builtin "u_to_s_checked_conversion_Int64"(%47 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1710 // users: %50, %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, scope 1710 // users: %130, %54
  %50 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 1, scope 1710 // user: %51
  cond_fail %50 : $Builtin.Int1, scope 1710       // id: %51
  %52 = builtin "sizeof"<_ArrayBody>(%32 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1709 // user: %53
  %53 = builtin "zextOrBitCast_Word_Int64"(%52 : $Builtin.Word) : $Builtin.Int64, scope 1709 // user: %54
  %54 = builtin "sadd_with_overflow_Int64"(%49 : $Builtin.Int64, %53 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1709 // users: %56, %55
  %55 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 0, scope 1709 // user: %61
  %56 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 1, scope 1709 // user: %57
  cond_fail %56 : $Builtin.Int1, scope 1709       // id: %57
  %58 = metatype $@thick String.Type, scope 1709  // users: %75, %59
  %59 = builtin "alignof"<String>(%58 : $@thick String.Type) : $Builtin.Word, scope 1709 // user: %60
  %60 = builtin "zextOrBitCast_Word_Int64"(%59 : $Builtin.Word) : $Builtin.Int64, scope 1709 // users: %89, %87, %67, %61
  %61 = builtin "uadd_with_overflow_Int64"(%55 : $Builtin.Int64, %60 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1709 // users: %63, %62
  %62 = tuple_extract %61 : $(Builtin.Int64, Builtin.Int1), 0, scope 1709 // user: %65
  %63 = tuple_extract %61 : $(Builtin.Int64, Builtin.Int1), 1, scope 1709 // user: %64
  cond_fail %63 : $Builtin.Int1, scope 1709       // id: %64
  %65 = builtin "usub_with_overflow_Int64"(%62 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1709 // user: %66
  %66 = tuple_extract %65 : $(Builtin.Int64, Builtin.Int1), 0, scope 1709 // user: %70
  %67 = builtin "usub_with_overflow_Int64"(%60 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1709 // user: %68
  %68 = tuple_extract %67 : $(Builtin.Int64, Builtin.Int1), 0, scope 1709 // user: %69
  %69 = builtin "xor_Int64"(%68 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int64, scope 1709 // user: %70
  %70 = builtin "and_Int64"(%66 : $Builtin.Int64, %69 : $Builtin.Int64) : $Builtin.Int64, scope 1709 // user: %71
  %71 = builtin "u_to_s_checked_conversion_Int64"(%70 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1709 // users: %73, %72
  %72 = tuple_extract %71 : $(Builtin.Int64, Builtin.Int1), 0, scope 1709 // users: %112, %81
  %73 = tuple_extract %71 : $(Builtin.Int64, Builtin.Int1), 1, scope 1709 // user: %74
  cond_fail %73 : $Builtin.Int1, scope 1709       // id: %74
  %75 = builtin "strideof_nonzero"<String>(%58 : $@thick String.Type) : $Builtin.Word, scope 1708 // user: %76
  %76 = builtin "zextOrBitCast_Word_Int64"(%75 : $Builtin.Word) : $Builtin.Int64, scope 1708 // users: %114, %122, %126, %77
  %77 = builtin "smul_with_overflow_Int64"(%9 : $Builtin.Int64, %76 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1708 // users: %79, %78
  %78 = tuple_extract %77 : $(Builtin.Int64, Builtin.Int1), 0, scope 1708 // user: %81
  %79 = tuple_extract %77 : $(Builtin.Int64, Builtin.Int1), 1, scope 1708 // user: %80
  cond_fail %79 : $Builtin.Int1, scope 1708       // id: %80
  %81 = builtin "sadd_with_overflow_Int64"(%72 : $Builtin.Int64, %78 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1708 // users: %83, %82
  %82 = tuple_extract %81 : $(Builtin.Int64, Builtin.Int1), 0, scope 1708 // user: %85
  %83 = tuple_extract %81 : $(Builtin.Int64, Builtin.Int1), 1, scope 1708 // user: %84
  cond_fail %83 : $Builtin.Int1, scope 1708       // id: %84
  %85 = struct $Int (%82 : $Builtin.Int64), scope 1708 // users: %101, %86
  debug_value %85 : $Int, scope 1708              // id: %86
  %87 = builtin "cmp_sge_Int64"(%60 : $Builtin.Int64, %34 : $Builtin.Int64) : $Builtin.Int1, scope 1711 // user: %88
  cond_br %87, bb6, bb12, scope 1711              // id: %88

bb6:                                              // Preds: bb5
  br bb7(%60 : $Builtin.Int64), scope 1711        // id: %89

// %90                                            // users: %95, %93
bb7(%90 : $Builtin.Int64):                        // Preds: bb12 bb6
  %91 = builtin "alignof"<HeapObject>(%29 : $@thick HeapObject.Type) : $Builtin.Word, scope 1711 // user: %92
  %92 = builtin "zextOrBitCast_Word_Int64"(%91 : $Builtin.Word) : $Builtin.Int64, scope 1711 // users: %120, %93
  %93 = builtin "cmp_sge_Int64"(%90 : $Builtin.Int64, %92 : $Builtin.Int64) : $Builtin.Int1, scope 1711 // user: %94
  cond_br %93, bb8, bb11, scope 1711              // id: %94

bb8:                                              // Preds: bb7
  br bb9(%90 : $Builtin.Int64), scope 1711        // id: %95

// %96                                            // user: %98
bb9(%96 : $Builtin.Int64):                        // Preds: bb11 bb8
  // function_ref swift_bufferAllocate
  %97 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1708 // user: %101
  %98 = builtin "ssub_with_overflow_Int64"(%96 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1711 // user: %99
  %99 = tuple_extract %98 : $(Builtin.Int64, Builtin.Int1), 0, scope 1711 // user: %100
  %100 = struct $Int (%99 : $Builtin.Int64), scope 1711 // user: %101
  %101 = apply %97(%24, %85, %100) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1708 // users: %103, %102
  debug_value %101 : $AnyObject, scope 1708       // id: %102
  %103 = open_existential_ref %101 : $AnyObject to $@opened("2C08BC14-F9C8-11E6-91E8-A8667F09828A") AnyObject, scope 1708 // users: %105, %125
  // function_ref _swift_stdlib_malloc_size
  %104 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1717 // user: %108
  %105 = ref_to_raw_pointer %103 : $@opened("2C08BC14-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.RawPointer, scope 1721 // users: %131, %106
  %106 = struct $UnsafeRawPointer (%105 : $Builtin.RawPointer), scope 1717 // user: %107
  %107 = enum $ImplicitlyUnwrappedOptional<UnsafeRawPointer>, #ImplicitlyUnwrappedOptional.some!enumelt.1, %106 : $UnsafeRawPointer, scope 1717 // user: %108
  %108 = apply %104(%107) : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1717 // user: %111
  %109 = builtin "onFastPath"() : $(), scope 1724
  %110 = builtin "onFastPath"() : $(), scope 1726
  %111 = struct_extract %108 : $Int, #Int._value, scope 1727 // user: %112
  %112 = builtin "ssub_with_overflow_Int64"(%111 : $Builtin.Int64, %72 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1727 // user: %113
  %113 = tuple_extract %112 : $(Builtin.Int64, Builtin.Int1), 0, scope 1727 // users: %126, %117
  %114 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 1727 // user: %115
  cond_fail %114 : $Builtin.Int1, scope 1727      // id: %115
  %116 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1727 // user: %117
  %117 = builtin "cmp_eq_Int64"(%113 : $Builtin.Int64, %116 : $Builtin.Int64) : $Builtin.Int1, scope 1727 // user: %118
  cond_br %117, bb13, bb10, scope 1727            // id: %118

bb10:                                             // Preds: bb9
  br bb14, scope 1703                             // id: %119

bb11:                                             // Preds: bb7
  br bb9(%92 : $Builtin.Int64), scope 1711        // id: %120

bb12:                                             // Preds: bb5
  br bb7(%34 : $Builtin.Int64), scope 1711        // id: %121

bb13:                                             // Preds: bb9
  %122 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1, scope 1727 // user: %123
  cond_fail %122 : $Builtin.Int1, scope 1727      // id: %123
  br bb14, scope 1727                             // id: %124

bb14:                                             // Preds: bb10 bb13
  %125 = unchecked_ref_cast %103 : $@opened("2C08BC14-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.NativeObject, scope 1708 // user: %144
  %126 = builtin "sdiv_Int64"(%113 : $Builtin.Int64, %76 : $Builtin.Int64) : $Builtin.Int64, scope 1727 // user: %133
  debug_value %0 : $Int, scope 1729               // id: %127
  %128 = builtin "onFastPath"() : $(), scope 1730
  %129 = builtin "onFastPath"() : $(), scope 1731
  %130 = builtin "truncOrBitCast_Int64_Word"(%49 : $Builtin.Int64) : $Builtin.Word, scope 1730 // user: %131
  %131 = index_raw_pointer %105 : $Builtin.RawPointer, %130 : $Builtin.Word, scope 1730 // user: %142
  debug_value %0 : $Int, scope 1729               // id: %132
  %133 = builtin "s_to_u_checked_conversion_Int64"(%126 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1729 // users: %136, %134
  %134 = tuple_extract %133 : $(Builtin.Int64, Builtin.Int1), 1, scope 1729 // user: %135
  cond_fail %134 : $Builtin.Int1, scope 1729      // id: %135
  %136 = tuple_extract %133 : $(Builtin.Int64, Builtin.Int1), 0, scope 1729 // user: %137
  %137 = builtin "shl_Int64"(%136 : $Builtin.Int64, %39 : $Builtin.Int64) : $Builtin.Int64, scope 1729 // user: %138
  %138 = struct $UInt (%137 : $Builtin.Int64), scope 1729 // user: %139
  %139 = struct $_SwiftArrayBodyStorage (%0 : $Int, %138 : $UInt), scope 1729 // user: %140
  %140 = struct $_ArrayBody (%139 : $_SwiftArrayBodyStorage), scope 1729 // users: %143, %141
  debug_value %140 : $_ArrayBody, scope 1732      // id: %141
  %142 = pointer_to_address %131 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1732 // user: %143
  store %140 to %142 : $*_ArrayBody, scope 1732   // id: %143
  br bb4(%125 : $Builtin.NativeObject), scope 1703 // id: %144

bb15:                                             // Preds: bb0
  br bb2(%4 : $Builtin.Int64), scope 1703         // id: %145
}

sil_scope 1733 {  parent @_TTSf4n_n_n_n_d___TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols_GVs14_IgnorePointerSS_GS1_SS_s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<String>, @inout _ContiguousArrayBuffer<String>, Int, Int) -> () }
sil_scope 1734 {  parent 526 }
sil_scope 1735 {  parent 525 inlined_at 1734 }
sil_scope 1736 {  parent 1733 }
sil_scope 1737 {  parent 1735 inlined_at 1736 }
sil_scope 1738 {  parent 536 inlined_at 1734 }
sil_scope 1739 {  parent 1738 inlined_at 1736 }
sil_scope 1740 {  parent 543 inlined_at 1734 }
sil_scope 1741 {  parent 1740 inlined_at 1736 }
sil_scope 1742 {  parent 526 inlined_at 1736 }
sil_scope 1743 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g5countSi : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1744 {  parent 1743 }
sil_scope 1745 {  parent 510 inlined_at 1744 }
sil_scope 1746 {  parent 1733 }
sil_scope 1747 {  parent 1745 inlined_at 1746 }
sil_scope 1748 {  parent 530 inlined_at 1744 }
sil_scope 1749 {  parent 1748 inlined_at 1746 }
sil_scope 1750 {  parent 537 inlined_at 1744 }
sil_scope 1751 {  parent 1750 inlined_at 1746 }
sil_scope 1752 {  parent 544 inlined_at 1744 }
sil_scope 1753 {  parent 1752 inlined_at 1746 }
sil_scope 1754 {  parent 528 inlined_at 1744 }
sil_scope 1755 {  parent 1754 inlined_at 1746 }
sil_scope 1756 {  parent 1733 }
sil_scope 1757 {  parent 98 inlined_at 1756 }
sil_scope 1758 {  parent 104 inlined_at 1756 }
sil_scope 1759 {  parent 108 inlined_at 1756 }
sil_scope 1760 {  parent @_TTSg5SS___TFVs12_ArrayBuffer33requestUniqueMutableBackingBufferfT15minimumCapacitySi_GSqGVs22_ContiguousArrayBufferx__ : $@convention(method) (Int, @inout _ArrayBuffer<String>) -> @owned Optional<_ContiguousArrayBuffer<String>> }
sil_scope 1761 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_33requestUniqueMutableBackingBufferfT15minimumCapacitySi_GSqGVs22_ContiguousArrayBufferwx7Element__ : $@convention(witness_method) (Int, @inout _ArrayBuffer<String>) -> @owned Optional<_ContiguousArrayBuffer<String>> }
sil_scope 1762 {  parent 1733 }
sil_scope 1763 {  parent 1761 inlined_at 1762 }
sil_scope 1764 {  parent 1763 }
sil_scope 1765 {  parent 1760 inlined_at 1764 }
sil_scope 1766 {  parent 1760 }
sil_scope 1767 {  parent 1014 inlined_at 1766 }
sil_scope 1768 {  parent 1767 inlined_at 1764 }
sil_scope 1769 {  parent 1760 }
sil_scope 1770 {  parent 1031 inlined_at 1769 }
sil_scope 1771 {  parent 1770 inlined_at 1764 }
sil_scope 1772 {  parent 1039 inlined_at 1769 }
sil_scope 1773 {  parent 1772 inlined_at 1764 }
sil_scope 1774 {  parent 1029 inlined_at 1769 }
sil_scope 1775 {  parent 1774 inlined_at 1764 }
sil_scope 1776 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g19firstElementAddressGSpwx7Element_ : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<String>) -> UnsafeMutablePointer<String> }
sil_scope 1777 {  parent 1733 }
sil_scope 1778 {  parent 1776 inlined_at 1777 }
sil_scope 1779 {  parent 1778 }
sil_scope 1780 {  parent 953 inlined_at 1779 }
sil_scope 1781 {  parent 957 inlined_at 1779 }
sil_scope 1782 {  parent 961 inlined_at 1779 }
sil_scope 1783 {  parent 1733 }
sil_scope 1784 {  parent 98 inlined_at 1783 }
sil_scope 1785 {  parent 104 inlined_at 1783 }
sil_scope 1786 {  parent 108 inlined_at 1783 }
sil_scope 1787 {  parent @_TTSg5SS___TFSp12deinitializefT5countSi_Sv : $@convention(method) (Int, UnsafeMutablePointer<String>) -> UnsafeMutableRawPointer }
sil_scope 1788 {  parent 1733 }
sil_scope 1789 {  parent 1787 inlined_at 1788 }
sil_scope 1790 {  parent @_TTSg5SS___TFSp14moveInitializefT4fromGSpx_5countSi_T_ : $@convention(method) (UnsafeMutablePointer<String>, Int, UnsafeMutablePointer<String>) -> () }
sil_scope 1791 {  parent 1733 }
sil_scope 1792 {  parent 1790 inlined_at 1791 }
sil_scope 1793 {  parent @_TTSg5SS___TFsoi1lurFTGSpx_GSpx__Sb : $@convention(thin) (UnsafeMutablePointer<String>, UnsafeMutablePointer<String>) -> Bool }
sil_scope 1794 {  parent @_TTSg5SS___TTWurGSpx_s10ComparablesZFS_oi1lfTxx_Sb : $@convention(witness_method) (UnsafeMutablePointer<String>, UnsafeMutablePointer<String>, @thick UnsafeMutablePointer<String>.Type) -> Bool }
sil_scope 1795 {  parent 1794 }
sil_scope 1796 {  parent 1793 inlined_at 1795 }
sil_scope 1797 {  parent @_TTSg5GSpSS_GSpSS_s10Comparables___TFsoi2geuRxs10ComparablerFTxx_Sb : $@convention(thin) (UnsafeMutablePointer<String>, UnsafeMutablePointer<String>) -> Bool }
sil_scope 1798 {  parent 1797 }
sil_scope 1799 {  parent 1796 inlined_at 1798 }
sil_scope 1800 {  parent 1790 }
sil_scope 1801 {  parent 1799 inlined_at 1800 }
sil_scope 1802 {  parent 1801 inlined_at 1791 }
sil_scope 1803 {  parent 1733 }
sil_scope 1804 {  parent 1787 inlined_at 1803 }
sil_scope 1805 {  parent 1733 }
sil_scope 1806 {  parent 1790 inlined_at 1805 }
sil_scope 1807 {  parent 1801 inlined_at 1805 }
sil_scope 1808 {  parent 1733 }
sil_scope 1809 {  parent 1735 inlined_at 1808 }
sil_scope 1810 {  parent 1740 inlined_at 1808 }
sil_scope 1811 {  parent 526 inlined_at 1808 }
sil_scope 1812 {  parent 1733 }
sil_scope 1813 {  parent 1787 inlined_at 1812 }
sil_scope 1814 {  parent 1733 }
sil_scope 1815 {  parent 1053 inlined_at 1814 }
sil_scope 1816 {  parent 1055 inlined_at 1814 }
sil_scope 1817 {  parent 1061 inlined_at 1814 }
sil_scope 1818 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_CfTGVs22_ContiguousArrayBufferwx7Element_19shiftedToStartIndexSi_x : $@convention(witness_method) (@owned _ContiguousArrayBuffer<String>, Int, @thick _ArrayBuffer<String>.Type) -> @owned _ArrayBuffer<String> }
sil_scope 1819 {  parent 1818 }
sil_scope 1820 {  parent 87 inlined_at 1819 }
sil_scope 1821 {  parent 1733 }
sil_scope 1822 {  parent 1820 inlined_at 1821 }
sil_scope 1823 {  parent @_TTSg5SS___TFVs12_ArrayBufferg10startIndexSi : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1824 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g10startIndexSi : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1825 {  parent 1824 }
sil_scope 1826 {  parent 1823 inlined_at 1825 }
sil_scope 1827 {  parent 1733 }
sil_scope 1828 {  parent 1826 inlined_at 1827 }
sil_scope 1829 {  parent @_TTSg5SS___TFVs22_ContiguousArrayBuffer13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpx__GSpx_ : $@convention(method) (Range<Int>, UnsafeMutablePointer<String>, @guaranteed _ContiguousArrayBuffer<String>) -> UnsafeMutablePointer<String> }
sil_scope 1830 {  parent 1829 }
sil_scope 1831 {  parent 98 inlined_at 1830 }
sil_scope 1832 {  parent @_TTSg5SS___TFVs12_ArrayBuffer13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpx__GSpx_ : $@convention(method) (Range<Int>, UnsafeMutablePointer<String>, @guaranteed _ArrayBuffer<String>) -> UnsafeMutablePointer<String> }
sil_scope 1833 {  parent 1832 }
sil_scope 1834 {  parent 1831 inlined_at 1833 }
sil_scope 1835 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpwx7Element__GSpwxS2__ : $@convention(witness_method) (Range<Int>, UnsafeMutablePointer<String>, @in_guaranteed _ArrayBuffer<String>) -> UnsafeMutablePointer<String> }
sil_scope 1836 {  parent 1733 }
sil_scope 1837 {  parent 1835 inlined_at 1836 }
sil_scope 1838 {  parent 1837 }
sil_scope 1839 {  parent 1834 inlined_at 1838 }
sil_scope 1840 {  parent 104 inlined_at 1830 }
sil_scope 1841 {  parent 1840 inlined_at 1833 }
sil_scope 1842 {  parent 1841 inlined_at 1838 }
sil_scope 1843 {  parent 108 inlined_at 1830 }
sil_scope 1844 {  parent 1843 inlined_at 1833 }
sil_scope 1845 {  parent 1844 inlined_at 1838 }
sil_scope 1846 {  parent @_TTSg5SS___TFSp10initializefT4fromGSPx_5countSi_T_ : $@convention(method) (UnsafePointer<String>, Int, UnsafeMutablePointer<String>) -> () }
sil_scope 1847 {  parent 1829 }
sil_scope 1848 {  parent 1846 inlined_at 1847 }
sil_scope 1849 {  parent 1848 inlined_at 1833 }
sil_scope 1850 {  parent 1849 inlined_at 1838 }
sil_scope 1851 {  parent 1829 inlined_at 1833 }
sil_scope 1852 {  parent 1851 inlined_at 1838 }
sil_scope 1853 {  parent @_TTSg5SS___TFVs12_ArrayBufferg8endIndexSi : $@convention(method) (@guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1854 {  parent 1853 }
sil_scope 1855 {  parent 510 inlined_at 1854 }
sil_scope 1856 {  parent @_TTSg5SS___TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g8endIndexwx5Index : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<String>) -> Int }
sil_scope 1857 {  parent 1856 }
sil_scope 1858 {  parent 1855 inlined_at 1857 }
sil_scope 1859 {  parent 1733 }
sil_scope 1860 {  parent 1858 inlined_at 1859 }
sil_scope 1861 {  parent 530 inlined_at 1854 }
sil_scope 1862 {  parent 1861 inlined_at 1857 }
sil_scope 1863 {  parent 1862 inlined_at 1859 }
sil_scope 1864 {  parent 537 inlined_at 1854 }
sil_scope 1865 {  parent 1864 inlined_at 1857 }
sil_scope 1866 {  parent 1865 inlined_at 1859 }
sil_scope 1867 {  parent 544 inlined_at 1854 }
sil_scope 1868 {  parent 1867 inlined_at 1857 }
sil_scope 1869 {  parent 1868 inlined_at 1859 }
sil_scope 1870 {  parent 528 inlined_at 1854 }
sil_scope 1871 {  parent 1870 inlined_at 1857 }
sil_scope 1872 {  parent 1871 inlined_at 1859 }
sil_scope 1873 {  parent 1733 }
sil_scope 1874 {  parent 1835 inlined_at 1873 }
sil_scope 1875 {  parent 1874 }
sil_scope 1876 {  parent 1851 inlined_at 1875 }
sil_scope 1877 {  parent 1834 inlined_at 1875 }
sil_scope 1878 {  parent 1841 inlined_at 1875 }
sil_scope 1879 {  parent 1844 inlined_at 1875 }
sil_scope 1880 {  parent 1849 inlined_at 1875 }

// specialized specialized _arrayOutOfPlaceUpdate<A, B where ...> (inout A, inout _ContiguousArrayBuffer<A.Element>, Int, Int, B) -> ()
sil shared [noinline] @_TTSf4n_n_n_n_d___TTSg5GVs12_ArrayBufferSS_GS_SS_s20_ArrayBufferProtocols_GVs14_IgnorePointerSS_GS1_SS_s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<String>, @inout _ContiguousArrayBuffer<String>, Int, Int) -> () {
// %0                                             // users: %57, %109, %108, %250, %4
// %1                                             // users: %8, %5
// %2                                             // users: %146, %47, %6
// %3                                             // users: %52, %7
bb0(%0 : $*_ArrayBuffer<String>, %1 : $*_ContiguousArrayBuffer<String>, %2 : $Int, %3 : $Int):
  debug_value_addr %0 : $*_ArrayBuffer<String>, scope 1733 // id: %4
  debug_value_addr %1 : $*_ContiguousArrayBuffer<String>, scope 1733 // id: %5
  debug_value %2 : $Int, scope 1733               // id: %6
  debug_value %3 : $Int, scope 1733               // id: %7
  %8 = struct_element_addr %1 : $*_ContiguousArrayBuffer<String>, #_ContiguousArrayBuffer.__bufferPointer, scope 1733 // user: %9
  %9 = struct_element_addr %8 : $*ManagedBufferPointer<_ArrayBody, String>, #ManagedBufferPointer._nativeBuffer, scope 1733 // users: %243, %10
  %10 = load %9 : $*Builtin.NativeObject, scope 1733 // users: %12, %41
  %11 = builtin "onFastPath"() : $(), scope 1737
  %12 = ref_to_raw_pointer %10 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1739 // users: %107, %39
  %13 = builtin "onFastPath"() : $(), scope 1741
  %14 = metatype $@thick HeapObject.Type, scope 1741 // user: %15
  %15 = builtin "sizeof"<HeapObject>(%14 : $@thick HeapObject.Type) : $Builtin.Word, scope 1741 // user: %16
  %16 = builtin "zextOrBitCast_Word_Int64"(%15 : $Builtin.Word) : $Builtin.Int64, scope 1741 // user: %21
  %17 = metatype $@thick _ArrayBody.Type, scope 1741 // users: %83, %18
  %18 = builtin "alignof"<_ArrayBody>(%17 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1741 // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 1741 // users: %29, %21
  %20 = integer_literal $Builtin.Int1, -1, scope 1741 // users: %283, %113, %123, %85, %92, %48, %53, %72, %76, %255, %262, %280, %21
  %21 = builtin "uadd_with_overflow_Int64"(%16 : $Builtin.Int64, %19 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1741 // users: %23, %22
  %22 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 0, scope 1741 // user: %27
  %23 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 1, scope 1741 // user: %24
  cond_fail %23 : $Builtin.Int1, scope 1741       // id: %24
  %25 = integer_literal $Builtin.Int64, 1, scope 1741 // users: %121, %96, %98, %29, %27
  %26 = integer_literal $Builtin.Int1, 0, scope 1741 // users: %186, %128, %160, %166, %211, %215, %96, %98, %29, %27
  %27 = builtin "usub_with_overflow_Int64"(%22 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1741 // user: %28
  %28 = tuple_extract %27 : $(Builtin.Int64, Builtin.Int1), 0, scope 1741 // user: %33
  %29 = builtin "usub_with_overflow_Int64"(%19 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1741 // user: %30
  %30 = tuple_extract %29 : $(Builtin.Int64, Builtin.Int1), 0, scope 1741 // user: %32
  %31 = integer_literal $Builtin.Int64, -1, scope 1741 // users: %226, %100, %32
  %32 = builtin "xor_Int64"(%30 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int64, scope 1741 // user: %33
  %33 = builtin "and_Int64"(%28 : $Builtin.Int64, %32 : $Builtin.Int64) : $Builtin.Int64, scope 1741 // user: %34
  %34 = builtin "u_to_s_checked_conversion_Int64"(%33 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1741 // users: %36, %35
  %35 = tuple_extract %34 : $(Builtin.Int64, Builtin.Int1), 0, scope 1741 // users: %85, %38
  %36 = tuple_extract %34 : $(Builtin.Int64, Builtin.Int1), 1, scope 1741 // user: %37
  cond_fail %36 : $Builtin.Int1, scope 1741       // id: %37
  %38 = builtin "truncOrBitCast_Int64_Word"(%35 : $Builtin.Int64) : $Builtin.Word, scope 1737 // users: %271, %64, %39
  %39 = index_raw_pointer %12 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 1737 // user: %40
  %40 = pointer_to_address %39 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1742 // user: %41
  %41 = mark_dependence %40 : $*_ArrayBody on %10 : $Builtin.NativeObject, scope 1742 // user: %42
  %42 = struct_element_addr %41 : $*_ArrayBody, #_ArrayBody._storage, scope 1742 // user: %43
  %43 = struct_element_addr %42 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1742 // user: %44
  %44 = struct_element_addr %43 : $*Int, #Int._value, scope 1742 // user: %45
  %45 = load %44 : $*Builtin.Int64, scope 1742    // user: %46
  %46 = builtin "assumeNonNegative_Int64"(%45 : $Builtin.Int64) : $Builtin.Int64, scope 1742 // user: %48
  %47 = struct_extract %2 : $Int, #Int._value, scope 1733 // users: %195, %175, %156, %150, %260, %254, %262, %128, %72, %48
  %48 = builtin "ssub_with_overflow_Int64"(%46 : $Builtin.Int64, %47 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // users: %50, %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %53
  %50 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 1, scope 1733 // user: %51
  cond_fail %50 : $Builtin.Int1, scope 1733       // id: %51
  %52 = struct_extract %3 : $Int, #Int._value, scope 1733 // users: %197, %177, %298, %160, %53
  %53 = builtin "ssub_with_overflow_Int64"(%49 : $Builtin.Int64, %52 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // users: %55, %54
  %54 = tuple_extract %53 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // users: %173, %186, %193, %76
  %55 = tuple_extract %53 : $(Builtin.Int64, Builtin.Int1), 1, scope 1733 // user: %56
  cond_fail %55 : $Builtin.Int1, scope 1733       // id: %56
  %57 = struct_element_addr %0 : $*_ArrayBuffer<String>, #_ArrayBuffer._storage, scope 1733 // users: %110, %58
  %58 = struct_element_addr %57 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1733 // users: %266, %247, %111, %59
  %59 = load %58 : $*Builtin.BridgeObject, scope 1733 // users: %241, %144, %62, %60
  %60 = unchecked_ref_cast %59 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1747 // user: %66
  %61 = builtin "onFastPath"() : $(), scope 1749
  %62 = ref_to_raw_pointer %59 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1751 // users: %259, %134, %64
  %63 = builtin "onFastPath"() : $(), scope 1753
  %64 = index_raw_pointer %62 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 1749 // user: %65
  %65 = pointer_to_address %64 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1755 // users: %238, %236, %66
  %66 = mark_dependence %65 : $*_ArrayBody on %60 : $Builtin.NativeObject, scope 1755 // user: %67
  %67 = struct_element_addr %66 : $*_ArrayBody, #_ArrayBody._storage, scope 1755 // users: %118, %68
  %68 = struct_element_addr %67 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1755 // user: %69
  %69 = struct_element_addr %68 : $*Int, #Int._value, scope 1755 // users: %209, %70
  %70 = load %69 : $*Builtin.Int64, scope 1755    // user: %71
  %71 = builtin "assumeNonNegative_Int64"(%70 : $Builtin.Int64) : $Builtin.Int64, scope 1755 // users: %122, %72, %215
  %72 = builtin "ssub_with_overflow_Int64"(%71 : $Builtin.Int64, %47 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // users: %74, %73
  %73 = tuple_extract %72 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %76
  %74 = tuple_extract %72 : $(Builtin.Int64, Builtin.Int1), 1, scope 1733 // user: %75
  cond_fail %74 : $Builtin.Int1, scope 1733       // id: %75
  %76 = builtin "ssub_with_overflow_Int64"(%73 : $Builtin.Int64, %54 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // users: %78, %77
  %77 = tuple_extract %76 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // users: %164, %262, %166
  %78 = tuple_extract %76 : $(Builtin.Int64, Builtin.Int1), 1, scope 1733 // user: %79
  cond_fail %78 : $Builtin.Int1, scope 1733       // id: %79
  %80 = builtin "onFastPath"() : $(), scope 1757
  %81 = builtin "onFastPath"() : $(), scope 1758
  %82 = builtin "onFastPath"() : $(), scope 1759
  %83 = builtin "sizeof"<_ArrayBody>(%17 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1758 // user: %84
  %84 = builtin "zextOrBitCast_Word_Int64"(%83 : $Builtin.Word) : $Builtin.Int64, scope 1758 // user: %85
  %85 = builtin "sadd_with_overflow_Int64"(%35 : $Builtin.Int64, %84 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1758 // users: %87, %86
  %86 = tuple_extract %85 : $(Builtin.Int64, Builtin.Int1), 0, scope 1758 // user: %92
  %87 = tuple_extract %85 : $(Builtin.Int64, Builtin.Int1), 1, scope 1758 // user: %88
  cond_fail %87 : $Builtin.Int1, scope 1758       // id: %88
  %89 = metatype $@thick String.Type, scope 1758  // users: %204, %184, %301, %261, %157, %231, %165, %151, %145, %126, %90
  %90 = builtin "alignof"<String>(%89 : $@thick String.Type) : $Builtin.Word, scope 1758 // user: %91
  %91 = builtin "zextOrBitCast_Word_Int64"(%90 : $Builtin.Word) : $Builtin.Int64, scope 1758 // users: %98, %92
  %92 = builtin "uadd_with_overflow_Int64"(%86 : $Builtin.Int64, %91 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1758 // users: %94, %93
  %93 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 0, scope 1758 // user: %96
  %94 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 1, scope 1758 // user: %95
  cond_fail %94 : $Builtin.Int1, scope 1758       // id: %95
  %96 = builtin "usub_with_overflow_Int64"(%93 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1758 // user: %97
  %97 = tuple_extract %96 : $(Builtin.Int64, Builtin.Int1), 0, scope 1758 // user: %101
  %98 = builtin "usub_with_overflow_Int64"(%91 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1758 // user: %99
  %99 = tuple_extract %98 : $(Builtin.Int64, Builtin.Int1), 0, scope 1758 // user: %100
  %100 = builtin "xor_Int64"(%99 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int64, scope 1758 // user: %101
  %101 = builtin "and_Int64"(%97 : $Builtin.Int64, %100 : $Builtin.Int64) : $Builtin.Int64, scope 1758 // user: %102
  %102 = builtin "u_to_s_checked_conversion_Int64"(%101 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1758 // users: %104, %103
  %103 = tuple_extract %102 : $(Builtin.Int64, Builtin.Int1), 0, scope 1758 // user: %106
  %104 = tuple_extract %102 : $(Builtin.Int64, Builtin.Int1), 1, scope 1758 // user: %105
  cond_fail %104 : $Builtin.Int1, scope 1758      // id: %105
  %106 = builtin "truncOrBitCast_Int64_Word"(%103 : $Builtin.Int64) : $Builtin.Word, scope 1757 // users: %290, %259, %134, %107
  %107 = index_raw_pointer %12 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 1757 // users: %194, %174, %296, %147, %151, %153, %157, %261, %159
  debug_value_addr %0 : $*_ArrayBuffer<String>, scope 1765 // id: %108
  debug_value_addr %0 : $*_ArrayBuffer<String>, scope 1768 // id: %109
  debug_value_addr %57 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1768 // id: %110
  %111 = unchecked_addr_cast %58 : $*Builtin.BridgeObject to $*Builtin.NativeObject, scope 1768 // user: %112
  %112 = is_unique %111 : $*Builtin.NativeObject, scope 1768 // user: %113
  %113 = builtin "int_expect_Int1"(%112 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1765 // user: %114
  cond_br %113, bb2, bb1, scope 1765              // id: %114

bb1:                                              // Preds: bb0
  br bb21, scope 1733                             // id: %115

bb2:                                              // Preds: bb0
  %116 = builtin "onFastPath"() : $(), scope 1771
  %117 = builtin "onFastPath"() : $(), scope 1773
  %118 = struct_element_addr %67 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1775 // user: %119
  %119 = struct_element_addr %118 : $*UInt, #UInt._value, scope 1775 // user: %120
  %120 = load %119 : $*Builtin.Int64, scope 1775  // user: %121
  %121 = builtin "lshr_Int64"(%120 : $Builtin.Int64, %25 : $Builtin.Int64) : $Builtin.Int64, scope 1775 // user: %122
  %122 = builtin "cmp_sge_Int64"(%121 : $Builtin.Int64, %71 : $Builtin.Int64) : $Builtin.Int1, scope 1765 // user: %123
  %123 = builtin "int_expect_Int1"(%122 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1765 // user: %124
  cond_br %123, bb4, bb3, scope 1765              // id: %124

bb3:                                              // Preds: bb2
  br bb21, scope 1733                             // id: %125

bb4:                                              // Preds: bb2
  %126 = builtin "strideof_nonzero"<String>(%89 : $@thick String.Type) : $Builtin.Word, scope 1733 // user: %127
  %127 = builtin "zextOrBitCast_Word_Int64"(%126 : $Builtin.Word) : $Builtin.Int64, scope 1733 // users: %186, %229, %226, %215, %211, %166, %142, %140, %160, %128
  %128 = builtin "smul_with_overflow_Int64"(%47 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // user: %129
  %129 = tuple_extract %128 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %130
  %130 = builtin "truncOrBitCast_Int64_Word"(%129 : $Builtin.Int64) : $Builtin.Word, scope 1733 // users: %135, %159
  %131 = builtin "onFastPath"() : $(), scope 1780
  %132 = builtin "onFastPath"() : $(), scope 1781
  %133 = builtin "onFastPath"() : $(), scope 1782
  %134 = index_raw_pointer %62 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 1780 // users: %200, %180, %214, %145, %147, %151, %157, %135, %218
  %135 = index_raw_pointer %134 : $Builtin.RawPointer, %130 : $Builtin.Word, scope 1733 // users: %153, %165, %169
  %136 = builtin "onFastPath"() : $(), scope 1784
  %137 = builtin "onFastPath"() : $(), scope 1785
  %138 = builtin "onFastPath"() : $(), scope 1786
  %139 = integer_literal $Builtin.Int64, 0, scope 1733 // users: %140, %232, %142
  %140 = builtin "cmp_eq_Int64"(%127 : $Builtin.Int64, %139 : $Builtin.Int64) : $Builtin.Int1, scope 1733 // user: %141
  cond_fail %140 : $Builtin.Int1, scope 1733      // id: %141
  %142 = builtin "sdiv_Int64"(%139 : $Builtin.Int64, %127 : $Builtin.Int64) : $Builtin.Int64, scope 1733 // user: %143
  %143 = builtin "truncOrBitCast_Int64_Word"(%142 : $Builtin.Int64) : $Builtin.Word, scope 1789 // user: %145
  strong_retain %59 : $Builtin.BridgeObject, scope 1733 // id: %144
  %145 = builtin "destroyArray"<String>(%89 : $@thick String.Type, %134 : $Builtin.RawPointer, %143 : $Builtin.Word) : $(), scope 1789
  debug_value %2 : $Int, scope 1792               // id: %146
  %147 = builtin "cmp_ult_RawPointer"(%107 : $Builtin.RawPointer, %134 : $Builtin.RawPointer) : $Builtin.Int1, scope 1792 // user: %148
  cond_br %147, bb5, bb7, scope 1792              // id: %148

bb5:                                              // Preds: bb4
  br bb6, scope 1733                              // id: %149

bb6:                                              // Preds: bb8 bb5
  %150 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1792 // user: %151
  %151 = builtin "takeArrayFrontToBack"<String>(%89 : $@thick String.Type, %107 : $Builtin.RawPointer, %134 : $Builtin.RawPointer, %150 : $Builtin.Word) : $(), scope 1792
  br bb10, scope 1792                             // id: %152

bb7:                                              // Preds: bb4
  %153 = builtin "cmp_ult_RawPointer"(%107 : $Builtin.RawPointer, %135 : $Builtin.RawPointer) : $Builtin.Int1, scope 1802 // user: %154
  cond_br %153, bb9, bb8, scope 1792              // id: %154

bb8:                                              // Preds: bb7
  br bb6, scope 1733                              // id: %155

bb9:                                              // Preds: bb7
  %156 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1792 // user: %157
  %157 = builtin "takeArrayBackToFront"<String>(%89 : $@thick String.Type, %107 : $Builtin.RawPointer, %134 : $Builtin.RawPointer, %156 : $Builtin.Word) : $(), scope 1792
  br bb10, scope 1792                             // id: %158

bb10:                                             // Preds: bb9 bb6
  %159 = index_raw_pointer %107 : $Builtin.RawPointer, %130 : $Builtin.Word, scope 1733 // user: %163
  %160 = builtin "smul_with_overflow_Int64"(%52 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // user: %161
  %161 = tuple_extract %160 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %162
  %162 = builtin "truncOrBitCast_Int64_Word"(%161 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %163
  %163 = index_raw_pointer %159 : $Builtin.RawPointer, %162 : $Builtin.Word, scope 1733 // users: %170, %190
  %164 = builtin "truncOrBitCast_Int64_Word"(%77 : $Builtin.Int64) : $Builtin.Word, scope 1804 // users: %202, %182, %165
  %165 = builtin "destroyArray"<String>(%89 : $@thick String.Type, %135 : $Builtin.RawPointer, %164 : $Builtin.Word) : $(), scope 1804
  %166 = builtin "smul_with_overflow_Int64"(%77 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // user: %167
  %167 = tuple_extract %166 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %168
  %168 = builtin "truncOrBitCast_Int64_Word"(%167 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %169
  %169 = index_raw_pointer %135 : $Builtin.RawPointer, %168 : $Builtin.Word, scope 1733 // users: %170, %189
  %170 = builtin "cmp_ult_RawPointer"(%163 : $Builtin.RawPointer, %169 : $Builtin.RawPointer) : $Builtin.Int1, scope 1806 // user: %171
  cond_br %170, bb11, bb13, scope 1806            // id: %171

bb11:                                             // Preds: bb10
  br bb12, scope 1733                             // id: %172

bb12:                                             // Preds: bb14 bb11
  %173 = builtin "truncOrBitCast_Int64_Word"(%54 : $Builtin.Int64) : $Builtin.Word, scope 1806 // user: %184
  %174 = pointer_to_address %107 : $Builtin.RawPointer to [strict] $*String, scope 1733 // user: %176
  %175 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1733 // users: %181, %176
  %176 = index_addr %174 : $*String, %175 : $Builtin.Word, scope 1733 // user: %178
  %177 = builtin "truncOrBitCast_Int64_Word"(%52 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %178
  %178 = index_addr %176 : $*String, %177 : $Builtin.Word, scope 1733 // user: %179
  %179 = address_to_pointer %178 : $*String to $Builtin.RawPointer, scope 1733 // user: %184
  %180 = pointer_to_address %134 : $Builtin.RawPointer to [strict] $*String, scope 1733 // user: %181
  %181 = index_addr %180 : $*String, %175 : $Builtin.Word, scope 1733 // user: %182
  %182 = index_addr %181 : $*String, %164 : $Builtin.Word, scope 1733 // user: %183
  %183 = address_to_pointer %182 : $*String to $Builtin.RawPointer, scope 1733 // user: %184
  %184 = builtin "takeArrayFrontToBack"<String>(%89 : $@thick String.Type, %179 : $Builtin.RawPointer, %183 : $Builtin.RawPointer, %173 : $Builtin.Word) : $(), scope 1733
  br bb16, scope 1806                             // id: %185

bb13:                                             // Preds: bb10
  %186 = builtin "smul_with_overflow_Int64"(%54 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1806 // user: %187
  %187 = tuple_extract %186 : $(Builtin.Int64, Builtin.Int1), 0, scope 1806 // user: %188
  %188 = builtin "truncOrBitCast_Int64_Word"(%187 : $Builtin.Int64) : $Builtin.Word, scope 1806 // user: %189
  %189 = index_raw_pointer %169 : $Builtin.RawPointer, %188 : $Builtin.Word, scope 1806 // user: %190
  %190 = builtin "cmp_ult_RawPointer"(%163 : $Builtin.RawPointer, %189 : $Builtin.RawPointer) : $Builtin.Int1, scope 1807 // user: %191
  cond_br %190, bb15, bb14, scope 1806            // id: %191

bb14:                                             // Preds: bb13
  br bb12, scope 1733                             // id: %192

bb15:                                             // Preds: bb13
  %193 = builtin "truncOrBitCast_Int64_Word"(%54 : $Builtin.Int64) : $Builtin.Word, scope 1806 // user: %204
  %194 = pointer_to_address %107 : $Builtin.RawPointer to [strict] $*String, scope 1733 // user: %196
  %195 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1733 // users: %201, %196
  %196 = index_addr %194 : $*String, %195 : $Builtin.Word, scope 1733 // user: %198
  %197 = builtin "truncOrBitCast_Int64_Word"(%52 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %198
  %198 = index_addr %196 : $*String, %197 : $Builtin.Word, scope 1733 // user: %199
  %199 = address_to_pointer %198 : $*String to $Builtin.RawPointer, scope 1733 // user: %204
  %200 = pointer_to_address %134 : $Builtin.RawPointer to [strict] $*String, scope 1733 // user: %201
  %201 = index_addr %200 : $*String, %195 : $Builtin.Word, scope 1733 // user: %202
  %202 = index_addr %201 : $*String, %164 : $Builtin.Word, scope 1733 // user: %203
  %203 = address_to_pointer %202 : $*String to $Builtin.RawPointer, scope 1733 // user: %204
  %204 = builtin "takeArrayBackToFront"<String>(%89 : $@thick String.Type, %199 : $Builtin.RawPointer, %203 : $Builtin.RawPointer, %193 : $Builtin.Word) : $(), scope 1733
  br bb16, scope 1806                             // id: %205

bb16:                                             // Preds: bb15 bb12
  %206 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1733 // user: %223
  %207 = builtin "onFastPath"() : $(), scope 1809
  %208 = builtin "onFastPath"() : $(), scope 1810
  %209 = load %69 : $*Builtin.Int64, scope 1811   // user: %210
  %210 = builtin "assumeNonNegative_Int64"(%209 : $Builtin.Int64) : $Builtin.Int64, scope 1811 // user: %211
  %211 = builtin "smul_with_overflow_Int64"(%210 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // user: %212
  %212 = tuple_extract %211 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %213
  %213 = builtin "truncOrBitCast_Int64_Word"(%212 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %214
  %214 = index_raw_pointer %134 : $Builtin.RawPointer, %213 : $Builtin.Word, scope 1733 // user: %219
  %215 = builtin "smul_with_overflow_Int64"(%71 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // user: %216
  %216 = tuple_extract %215 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // user: %217
  %217 = builtin "truncOrBitCast_Int64_Word"(%216 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %218
  %218 = index_raw_pointer %134 : $Builtin.RawPointer, %217 : $Builtin.Word, scope 1733 // users: %231, %220
  %219 = builtin "ptrtoint_Word"(%214 : $Builtin.RawPointer) : $Builtin.Word, scope 1733 // user: %221
  %220 = builtin "ptrtoint_Word"(%218 : $Builtin.RawPointer) : $Builtin.Word, scope 1733 // user: %221
  %221 = builtin "sub_Word"(%219 : $Builtin.Word, %220 : $Builtin.Word) : $Builtin.Word, scope 1733 // user: %222
  %222 = builtin "zextOrBitCast_Word_Int64"(%221 : $Builtin.Word) : $Builtin.Int64, scope 1733 // users: %229, %223
  %223 = builtin "cmp_eq_Int64"(%222 : $Builtin.Int64, %206 : $Builtin.Int64) : $Builtin.Int1, scope 1733 // user: %224
  cond_br %223, bb18, bb17, scope 1733            // id: %224

bb17:                                             // Preds: bb16
  br bb19, scope 1733                             // id: %225

bb18:                                             // Preds: bb16
  %226 = builtin "cmp_eq_Int64"(%127 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int1, scope 1733 // user: %227
  cond_fail %226 : $Builtin.Int1, scope 1733      // id: %227
  br bb19, scope 1733                             // id: %228

bb19:                                             // Preds: bb17 bb18
  %229 = builtin "sdiv_Int64"(%222 : $Builtin.Int64, %127 : $Builtin.Int64) : $Builtin.Int64, scope 1733 // user: %230
  %230 = builtin "truncOrBitCast_Int64_Word"(%229 : $Builtin.Int64) : $Builtin.Word, scope 1813 // user: %231
  %231 = builtin "destroyArray"<String>(%89 : $@thick String.Type, %218 : $Builtin.RawPointer, %230 : $Builtin.Word) : $(), scope 1813
  %232 = struct $Int (%139 : $Builtin.Int64), scope 1733 // users: %240, %237, %233
  debug_value %232 : $Int, scope 1815             // id: %233
  %234 = builtin "onFastPath"() : $(), scope 1816
  %235 = builtin "onFastPath"() : $(), scope 1817
  debug_value_addr %65 : $*_ArrayBody, scope 1815 // id: %236
  debug_value %232 : $Int, scope 1815             // id: %237
  %238 = struct_element_addr %65 : $*_ArrayBody, #_ArrayBody._storage, scope 1815 // user: %239
  %239 = struct_element_addr %238 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1815 // user: %240
  store %232 to %239 : $*Int, scope 1815          // id: %240
  strong_release %59 : $Builtin.BridgeObject, scope 1733 // id: %241
  br bb20, scope 1733                             // id: %242

bb20:                                             // Preds: bb21 bb19
  %243 = load %9 : $*Builtin.NativeObject, scope 1733 // users: %248, %244
  %244 = unchecked_ref_cast %243 : $Builtin.NativeObject to $Builtin.BridgeObject, scope 1822 // user: %245
  %245 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%244 : $Builtin.BridgeObject), scope 1733 // user: %246
  %246 = struct $_ArrayBuffer<String> (%245 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1733 // user: %250
  %247 = load %58 : $*Builtin.BridgeObject, scope 1733 // user: %249
  strong_retain %243 : $Builtin.NativeObject, scope 1733 // id: %248
  strong_release %247 : $Builtin.BridgeObject, scope 1733 // id: %249
  store %246 to %0 : $*_ArrayBuffer<String>, scope 1733 // id: %250
  %251 = tuple (), scope 1733                     // user: %252
  return %251 : $(), scope 1733                   // id: %252

bb21:                                             // Preds: bb3 bb1
  %253 = integer_literal $Builtin.Int64, 0, scope 1828 // user: %254
  %254 = builtin "cmp_sle_Int64"(%253 : $Builtin.Int64, %47 : $Builtin.Int64) : $Builtin.Int1, scope 1733 // user: %255
  %255 = builtin "xor_Int1"(%254 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1733 // user: %281
  %256 = builtin "onFastPath"() : $(), scope 1839
  %257 = builtin "onFastPath"() : $(), scope 1842
  %258 = builtin "onFastPath"() : $(), scope 1845
  %259 = index_raw_pointer %62 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 1839 // user: %261
  %260 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1850 // users: %297, %261
  %261 = builtin "copyArray"<String>(%89 : $@thick String.Type, %107 : $Builtin.RawPointer, %259 : $Builtin.RawPointer, %260 : $Builtin.Word) : $(), scope 1852
  %262 = builtin "sadd_with_overflow_Int64"(%47 : $Builtin.Int64, %77 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1733 // users: %264, %263
  %263 = tuple_extract %262 : $(Builtin.Int64, Builtin.Int1), 0, scope 1733 // users: %283, %293, %279
  %264 = tuple_extract %262 : $(Builtin.Int64, Builtin.Int1), 1, scope 1733 // user: %265
  cond_fail %264 : $Builtin.Int1, scope 1733      // id: %265
  %266 = load %58 : $*Builtin.BridgeObject, scope 1733 // users: %269, %267
  %267 = unchecked_ref_cast %266 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1860 // user: %273
  %268 = builtin "onFastPath"() : $(), scope 1863
  %269 = ref_to_raw_pointer %266 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1866 // users: %290, %271
  %270 = builtin "onFastPath"() : $(), scope 1869
  %271 = index_raw_pointer %269 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 1863 // user: %272
  %272 = pointer_to_address %271 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1872 // user: %273
  %273 = mark_dependence %272 : $*_ArrayBody on %267 : $Builtin.NativeObject, scope 1872 // user: %274
  %274 = struct_element_addr %273 : $*_ArrayBody, #_ArrayBody._storage, scope 1872 // user: %275
  %275 = struct_element_addr %274 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1872 // user: %276
  %276 = struct_element_addr %275 : $*Int, #Int._value, scope 1872 // user: %277
  %277 = load %276 : $*Builtin.Int64, scope 1872  // user: %278
  %278 = builtin "assumeNonNegative_Int64"(%277 : $Builtin.Int64) : $Builtin.Int64, scope 1872 // users: %283, %279
  %279 = builtin "cmp_sle_Int64"(%263 : $Builtin.Int64, %278 : $Builtin.Int64) : $Builtin.Int1, scope 1733 // user: %280
  %280 = builtin "xor_Int1"(%279 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1733 // user: %281
  %281 = builtin "or_Int1"(%255 : $Builtin.Int1, %280 : $Builtin.Int1) : $Builtin.Int1, scope 1876 // user: %282
  cond_fail %281 : $Builtin.Int1, scope 1876      // id: %282
  %283 = builtin "ssub_with_overflow_Int64"(%278 : $Builtin.Int64, %263 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1876 // users: %285, %284
  %284 = tuple_extract %283 : $(Builtin.Int64, Builtin.Int1), 0, scope 1876 // user: %291
  %285 = tuple_extract %283 : $(Builtin.Int64, Builtin.Int1), 1, scope 1876 // user: %286
  cond_fail %285 : $Builtin.Int1, scope 1876      // id: %286
  %287 = builtin "onFastPath"() : $(), scope 1877
  %288 = builtin "onFastPath"() : $(), scope 1878
  %289 = builtin "onFastPath"() : $(), scope 1879
  %290 = index_raw_pointer %269 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 1877 // user: %292
  %291 = builtin "truncOrBitCast_Int64_Word"(%284 : $Builtin.Int64) : $Builtin.Word, scope 1880 // user: %301
  %292 = pointer_to_address %290 : $Builtin.RawPointer to [strict] $*String, scope 1876 // user: %294
  %293 = builtin "truncOrBitCast_Int64_Word"(%263 : $Builtin.Int64) : $Builtin.Word, scope 1876 // user: %294
  %294 = index_addr %292 : $*String, %293 : $Builtin.Word, scope 1876 // user: %295
  %295 = address_to_pointer %294 : $*String to $Builtin.RawPointer, scope 1876 // user: %301
  %296 = pointer_to_address %107 : $Builtin.RawPointer to [strict] $*String, scope 1733 // user: %297
  %297 = index_addr %296 : $*String, %260 : $Builtin.Word, scope 1733 // user: %299
  %298 = builtin "truncOrBitCast_Int64_Word"(%52 : $Builtin.Int64) : $Builtin.Word, scope 1733 // user: %299
  %299 = index_addr %297 : $*String, %298 : $Builtin.Word, scope 1733 // user: %300
  %300 = address_to_pointer %299 : $*String to $Builtin.RawPointer, scope 1733 // user: %301
  %301 = builtin "copyArray"<String>(%89 : $@thick String.Type, %300 : $Builtin.RawPointer, %295 : $Builtin.RawPointer, %291 : $Builtin.Word) : $(), scope 1733
  br bb20, scope 1733                             // id: %302
}

sil_scope 1881 {  parent @_TTSf4n_n_d___TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<Employee> }
sil_scope 1882 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferCfT_GS_x_ : $@convention(method) (@thin _ContiguousArrayBuffer<Employee>.Type) -> @owned _ContiguousArrayBuffer<Employee> }
sil_scope 1883 {  parent 1881 }
sil_scope 1884 {  parent 1882 inlined_at 1883 }
sil_scope 1885 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerCfT21_uncheckedBufferClassPMPs9AnyObject_15minimumCapacitySi_GS_xq__ : $@convention(method) (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<_ArrayBody, Employee>.Type) -> @owned ManagedBufferPointer<_ArrayBody, Employee> }
sil_scope 1886 {  parent 1881 }
sil_scope 1887 {  parent 1885 inlined_at 1886 }
sil_scope 1888 {  parent 1885 }
sil_scope 1889 {  parent 1243 inlined_at 1888 }
sil_scope 1890 {  parent 1889 inlined_at 1886 }
sil_scope 1891 {  parent 1253 inlined_at 1888 }
sil_scope 1892 {  parent 1891 inlined_at 1886 }
sil_scope 1893 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TZFVs20ManagedBufferPointerg14_alignmentMaskSi : $@convention(method) (@thin ManagedBufferPointer<_ArrayBody, Employee>.Type) -> Int }
sil_scope 1894 {  parent 1885 }
sil_scope 1895 {  parent 1893 inlined_at 1894 }
sil_scope 1896 {  parent 1895 inlined_at 1886 }
sil_scope 1897 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerg16_capacityInBytesSi : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Employee>) -> Int }
sil_scope 1898 {  parent @_TTSg5Vs10_ArrayBody_V4Main8Employee___TFVs20ManagedBufferPointerg8capacitySi : $@convention(method) (@guaranteed ManagedBufferPointer<_ArrayBody, Employee>) -> Int }
sil_scope 1899 {  parent 1898 }
sil_scope 1900 {  parent 1897 inlined_at 1899 }
sil_scope 1901 {  parent 1881 }
sil_scope 1902 {  parent 1900 inlined_at 1901 }
sil_scope 1903 {  parent 1897 }
sil_scope 1904 {  parent 1358 inlined_at 1903 }
sil_scope 1905 {  parent 1904 inlined_at 1899 }
sil_scope 1906 {  parent 1905 inlined_at 1901 }
sil_scope 1907 {  parent 1898 }
sil_scope 1908 {  parent 1243 inlined_at 1907 }
sil_scope 1909 {  parent 1908 inlined_at 1901 }
sil_scope 1910 {  parent 1253 inlined_at 1907 }
sil_scope 1911 {  parent 1910 inlined_at 1901 }
sil_scope 1912 {  parent 1898 inlined_at 1901 }
sil_scope 1913 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBuffer18_initStorageHeaderfT5countSi8capacitySi_T_ : $@convention(method) (Int, Int, @guaranteed _ContiguousArrayBuffer<Employee>) -> () }
sil_scope 1914 {  parent 1881 }
sil_scope 1915 {  parent 1913 inlined_at 1914 }
sil_scope 1916 {  parent 1913 }
sil_scope 1917 {  parent 1346 inlined_at 1916 }
sil_scope 1918 {  parent 1917 inlined_at 1914 }
sil_scope 1919 {  parent 1367 inlined_at 1916 }
sil_scope 1920 {  parent 1919 inlined_at 1914 }
sil_scope 1921 {  parent 1913 }
sil_scope 1922 {  parent 81 inlined_at 1921 }
sil_scope 1923 {  parent 1922 inlined_at 1914 }

// specialized specialized _ContiguousArrayBuffer.init(uninitializedCount : Int, minimumCapacity : Int) -> _ContiguousArrayBuffer<A>
sil shared @_TTSf4n_n_d___TTSg5V4Main8Employee___TFVs22_ContiguousArrayBufferCfT18uninitializedCountSi15minimumCapacitySi_GS_x_ : $@convention(thin) (Int, Int) -> @owned _ContiguousArrayBuffer<Employee> {
// %0                                             // users: %139, %132, %127, %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $Int, %1 : $Int):
  debug_value %0 : $Int, scope 1881               // id: %2
  debug_value %1 : $Int, scope 1881               // id: %3
  %4 = struct_extract %0 : $Int, #Int._value, scope 1881 // users: %145, %6
  %5 = struct_extract %1 : $Int, #Int._value, scope 1881 // users: %8, %6
  %6 = builtin "cmp_sge_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1, scope 1881 // user: %7
  cond_br %6, bb1, bb15, scope 1881               // id: %7

bb1:                                              // Preds: bb0
  br bb2(%5 : $Builtin.Int64), scope 1881         // id: %8

// %9                                             // users: %77, %11
bb2(%9 : $Builtin.Int64):                         // Preds: bb15 bb1
  %10 = integer_literal $Builtin.Int64, 0, scope 1881 // users: %114, %11
  %11 = builtin "cmp_eq_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 1881 // user: %12
  cond_br %11, bb3, bb5, scope 1881               // id: %12

bb3:                                              // Preds: bb2
  %13 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 1884 // user: %14
  %14 = address_to_pointer %13 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 1884 // user: %15
  %15 = raw_pointer_to_ref %14 : $Builtin.RawPointer to $_EmptyArrayStorage, scope 1884 // users: %17, %16
  %16 = unchecked_ref_cast %15 : $_EmptyArrayStorage to $Builtin.NativeObject, scope 1884 // user: %18
  strong_retain %15 : $_EmptyArrayStorage, scope 1881 // id: %17
  br bb4(%16 : $Builtin.NativeObject), scope 1881 // id: %18

// %19                                            // user: %20
bb4(%19 : $Builtin.NativeObject):                 // Preds: bb14 bb3
  %20 = struct $ManagedBufferPointer<_ArrayBody, Employee> (%19 : $Builtin.NativeObject), scope 1881 // user: %21
  %21 = struct $_ContiguousArrayBuffer<Employee> (%20 : $ManagedBufferPointer<_ArrayBody, Employee>), scope 1881 // user: %22
  return %21 : $_ContiguousArrayBuffer<Employee>, scope 1881 // id: %22

bb5:                                              // Preds: bb2
  %23 = metatype $@thick _ContiguousArrayStorage<Employee>.Type, scope 1881 // user: %24
  %24 = init_existential_metatype %23 : $@thick _ContiguousArrayStorage<Employee>.Type, $@thick AnyObject.Type, scope 1881 // users: %101, %25
  debug_value %24 : $@thick AnyObject.Type, scope 1887 // id: %25
  %26 = integer_literal $Builtin.Int1, -1, scope 1887 // users: %81, %77, %61, %54, %35
  %27 = builtin "onFastPath"() : $(), scope 1890
  %28 = builtin "onFastPath"() : $(), scope 1892
  %29 = metatype $@thick HeapObject.Type, scope 1892 // users: %91, %30
  %30 = builtin "sizeof"<HeapObject>(%29 : $@thick HeapObject.Type) : $Builtin.Word, scope 1892 // user: %31
  %31 = builtin "zextOrBitCast_Word_Int64"(%30 : $Builtin.Word) : $Builtin.Int64, scope 1892 // user: %35
  %32 = metatype $@thick _ArrayBody.Type, scope 1892 // users: %52, %33
  %33 = builtin "alignof"<_ArrayBody>(%32 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1892 // user: %34
  %34 = builtin "zextOrBitCast_Word_Int64"(%33 : $Builtin.Word) : $Builtin.Int64, scope 1892 // users: %121, %87, %43, %35
  %35 = builtin "uadd_with_overflow_Int64"(%31 : $Builtin.Int64, %34 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1892 // users: %37, %36
  %36 = tuple_extract %35 : $(Builtin.Int64, Builtin.Int1), 0, scope 1892 // user: %41
  %37 = tuple_extract %35 : $(Builtin.Int64, Builtin.Int1), 1, scope 1892 // user: %38
  cond_fail %37 : $Builtin.Int1, scope 1892       // id: %38
  %39 = integer_literal $Builtin.Int64, 1, scope 1892 // users: %137, %98, %67, %65, %43, %41
  %40 = integer_literal $Builtin.Int1, 0, scope 1892 // users: %112, %98, %67, %65, %43, %41
  %41 = builtin "usub_with_overflow_Int64"(%36 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1892 // user: %42
  %42 = tuple_extract %41 : $(Builtin.Int64, Builtin.Int1), 0, scope 1892 // user: %47
  %43 = builtin "usub_with_overflow_Int64"(%34 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1892 // user: %44
  %44 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 0, scope 1892 // user: %46
  %45 = integer_literal $Builtin.Int64, -1, scope 1892 // users: %122, %69, %46
  %46 = builtin "xor_Int64"(%44 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int64, scope 1892 // user: %47
  %47 = builtin "and_Int64"(%42 : $Builtin.Int64, %46 : $Builtin.Int64) : $Builtin.Int64, scope 1892 // user: %48
  %48 = builtin "u_to_s_checked_conversion_Int64"(%47 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1892 // users: %50, %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, scope 1892 // users: %130, %54
  %50 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 1, scope 1892 // user: %51
  cond_fail %50 : $Builtin.Int1, scope 1892       // id: %51
  %52 = builtin "sizeof"<_ArrayBody>(%32 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1890 // user: %53
  %53 = builtin "zextOrBitCast_Word_Int64"(%52 : $Builtin.Word) : $Builtin.Int64, scope 1890 // user: %54
  %54 = builtin "sadd_with_overflow_Int64"(%49 : $Builtin.Int64, %53 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1890 // users: %56, %55
  %55 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 0, scope 1890 // user: %61
  %56 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 1, scope 1890 // user: %57
  cond_fail %56 : $Builtin.Int1, scope 1890       // id: %57
  %58 = metatype $@thick Employee.Type, scope 1890 // users: %75, %59
  %59 = builtin "alignof"<Employee>(%58 : $@thick Employee.Type) : $Builtin.Word, scope 1890 // user: %60
  %60 = builtin "zextOrBitCast_Word_Int64"(%59 : $Builtin.Word) : $Builtin.Int64, scope 1890 // users: %89, %87, %67, %61
  %61 = builtin "uadd_with_overflow_Int64"(%55 : $Builtin.Int64, %60 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1890 // users: %63, %62
  %62 = tuple_extract %61 : $(Builtin.Int64, Builtin.Int1), 0, scope 1890 // user: %65
  %63 = tuple_extract %61 : $(Builtin.Int64, Builtin.Int1), 1, scope 1890 // user: %64
  cond_fail %63 : $Builtin.Int1, scope 1890       // id: %64
  %65 = builtin "usub_with_overflow_Int64"(%62 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1890 // user: %66
  %66 = tuple_extract %65 : $(Builtin.Int64, Builtin.Int1), 0, scope 1890 // user: %70
  %67 = builtin "usub_with_overflow_Int64"(%60 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1890 // user: %68
  %68 = tuple_extract %67 : $(Builtin.Int64, Builtin.Int1), 0, scope 1890 // user: %69
  %69 = builtin "xor_Int64"(%68 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int64, scope 1890 // user: %70
  %70 = builtin "and_Int64"(%66 : $Builtin.Int64, %69 : $Builtin.Int64) : $Builtin.Int64, scope 1890 // user: %71
  %71 = builtin "u_to_s_checked_conversion_Int64"(%70 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1890 // users: %73, %72
  %72 = tuple_extract %71 : $(Builtin.Int64, Builtin.Int1), 0, scope 1890 // users: %112, %81
  %73 = tuple_extract %71 : $(Builtin.Int64, Builtin.Int1), 1, scope 1890 // user: %74
  cond_fail %73 : $Builtin.Int1, scope 1890       // id: %74
  %75 = builtin "strideof_nonzero"<Employee>(%58 : $@thick Employee.Type) : $Builtin.Word, scope 1887 // user: %76
  %76 = builtin "zextOrBitCast_Word_Int64"(%75 : $Builtin.Word) : $Builtin.Int64, scope 1887 // users: %114, %122, %126, %77
  %77 = builtin "smul_with_overflow_Int64"(%9 : $Builtin.Int64, %76 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1887 // users: %79, %78
  %78 = tuple_extract %77 : $(Builtin.Int64, Builtin.Int1), 0, scope 1887 // user: %81
  %79 = tuple_extract %77 : $(Builtin.Int64, Builtin.Int1), 1, scope 1887 // user: %80
  cond_fail %79 : $Builtin.Int1, scope 1887       // id: %80
  %81 = builtin "sadd_with_overflow_Int64"(%72 : $Builtin.Int64, %78 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1887 // users: %83, %82
  %82 = tuple_extract %81 : $(Builtin.Int64, Builtin.Int1), 0, scope 1887 // user: %85
  %83 = tuple_extract %81 : $(Builtin.Int64, Builtin.Int1), 1, scope 1887 // user: %84
  cond_fail %83 : $Builtin.Int1, scope 1887       // id: %84
  %85 = struct $Int (%82 : $Builtin.Int64), scope 1887 // users: %101, %86
  debug_value %85 : $Int, scope 1887              // id: %86
  %87 = builtin "cmp_sge_Int64"(%60 : $Builtin.Int64, %34 : $Builtin.Int64) : $Builtin.Int1, scope 1896 // user: %88
  cond_br %87, bb6, bb12, scope 1896              // id: %88

bb6:                                              // Preds: bb5
  br bb7(%60 : $Builtin.Int64), scope 1896        // id: %89

// %90                                            // users: %95, %93
bb7(%90 : $Builtin.Int64):                        // Preds: bb12 bb6
  %91 = builtin "alignof"<HeapObject>(%29 : $@thick HeapObject.Type) : $Builtin.Word, scope 1896 // user: %92
  %92 = builtin "zextOrBitCast_Word_Int64"(%91 : $Builtin.Word) : $Builtin.Int64, scope 1896 // users: %120, %93
  %93 = builtin "cmp_sge_Int64"(%90 : $Builtin.Int64, %92 : $Builtin.Int64) : $Builtin.Int1, scope 1896 // user: %94
  cond_br %93, bb8, bb11, scope 1896              // id: %94

bb8:                                              // Preds: bb7
  br bb9(%90 : $Builtin.Int64), scope 1896        // id: %95

// %96                                            // user: %98
bb9(%96 : $Builtin.Int64):                        // Preds: bb11 bb8
  // function_ref swift_bufferAllocate
  %97 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1887 // user: %101
  %98 = builtin "ssub_with_overflow_Int64"(%96 : $Builtin.Int64, %39 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1896 // user: %99
  %99 = tuple_extract %98 : $(Builtin.Int64, Builtin.Int1), 0, scope 1896 // user: %100
  %100 = struct $Int (%99 : $Builtin.Int64), scope 1896 // user: %101
  %101 = apply %97(%24, %85, %100) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 1887 // users: %103, %102
  debug_value %101 : $AnyObject, scope 1887       // id: %102
  %103 = open_existential_ref %101 : $AnyObject to $@opened("2C00AD62-F9C8-11E6-91E8-A8667F09828A") AnyObject, scope 1887 // users: %105, %125
  // function_ref _swift_stdlib_malloc_size
  %104 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1902 // user: %108
  %105 = ref_to_raw_pointer %103 : $@opened("2C00AD62-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.RawPointer, scope 1906 // users: %131, %106
  %106 = struct $UnsafeRawPointer (%105 : $Builtin.RawPointer), scope 1902 // user: %107
  %107 = enum $ImplicitlyUnwrappedOptional<UnsafeRawPointer>, #ImplicitlyUnwrappedOptional.some!enumelt.1, %106 : $UnsafeRawPointer, scope 1902 // user: %108
  %108 = apply %104(%107) : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 1902 // user: %111
  %109 = builtin "onFastPath"() : $(), scope 1909
  %110 = builtin "onFastPath"() : $(), scope 1911
  %111 = struct_extract %108 : $Int, #Int._value, scope 1912 // user: %112
  %112 = builtin "ssub_with_overflow_Int64"(%111 : $Builtin.Int64, %72 : $Builtin.Int64, %40 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1912 // user: %113
  %113 = tuple_extract %112 : $(Builtin.Int64, Builtin.Int1), 0, scope 1912 // users: %126, %117
  %114 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 1912 // user: %115
  cond_fail %114 : $Builtin.Int1, scope 1912      // id: %115
  %116 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1912 // user: %117
  %117 = builtin "cmp_eq_Int64"(%113 : $Builtin.Int64, %116 : $Builtin.Int64) : $Builtin.Int1, scope 1912 // user: %118
  cond_br %117, bb13, bb10, scope 1912            // id: %118

bb10:                                             // Preds: bb9
  br bb14, scope 1881                             // id: %119

bb11:                                             // Preds: bb7
  br bb9(%92 : $Builtin.Int64), scope 1896        // id: %120

bb12:                                             // Preds: bb5
  br bb7(%34 : $Builtin.Int64), scope 1896        // id: %121

bb13:                                             // Preds: bb9
  %122 = builtin "cmp_eq_Int64"(%76 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1, scope 1912 // user: %123
  cond_fail %122 : $Builtin.Int1, scope 1912      // id: %123
  br bb14, scope 1912                             // id: %124

bb14:                                             // Preds: bb10 bb13
  %125 = unchecked_ref_cast %103 : $@opened("2C00AD62-F9C8-11E6-91E8-A8667F09828A") AnyObject to $Builtin.NativeObject, scope 1887 // user: %144
  %126 = builtin "sdiv_Int64"(%113 : $Builtin.Int64, %76 : $Builtin.Int64) : $Builtin.Int64, scope 1912 // user: %133
  debug_value %0 : $Int, scope 1915               // id: %127
  %128 = builtin "onFastPath"() : $(), scope 1918
  %129 = builtin "onFastPath"() : $(), scope 1920
  %130 = builtin "truncOrBitCast_Int64_Word"(%49 : $Builtin.Int64) : $Builtin.Word, scope 1918 // user: %131
  %131 = index_raw_pointer %105 : $Builtin.RawPointer, %130 : $Builtin.Word, scope 1918 // user: %142
  debug_value %0 : $Int, scope 1915               // id: %132
  %133 = builtin "s_to_u_checked_conversion_Int64"(%126 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1915 // users: %136, %134
  %134 = tuple_extract %133 : $(Builtin.Int64, Builtin.Int1), 1, scope 1915 // user: %135
  cond_fail %134 : $Builtin.Int1, scope 1915      // id: %135
  %136 = tuple_extract %133 : $(Builtin.Int64, Builtin.Int1), 0, scope 1915 // user: %137
  %137 = builtin "shl_Int64"(%136 : $Builtin.Int64, %39 : $Builtin.Int64) : $Builtin.Int64, scope 1915 // user: %138
  %138 = struct $UInt (%137 : $Builtin.Int64), scope 1915 // user: %139
  %139 = struct $_SwiftArrayBodyStorage (%0 : $Int, %138 : $UInt), scope 1915 // user: %140
  %140 = struct $_ArrayBody (%139 : $_SwiftArrayBodyStorage), scope 1915 // users: %143, %141
  debug_value %140 : $_ArrayBody, scope 1923      // id: %141
  %142 = pointer_to_address %131 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1923 // user: %143
  store %140 to %142 : $*_ArrayBody, scope 1923   // id: %143
  br bb4(%125 : $Builtin.NativeObject), scope 1881 // id: %144

bb15:                                             // Preds: bb0
  br bb2(%4 : $Builtin.Int64), scope 1881         // id: %145
}

sil_scope 1924 {  parent @_TTSf4n_n_n_n_d___TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols_GVs14_IgnorePointerS1__GS3_S1__s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, @inout _ContiguousArrayBuffer<Employee>, Int, Int) -> () }
sil_scope 1925 {  parent 1350 }
sil_scope 1926 {  parent 1349 inlined_at 1925 }
sil_scope 1927 {  parent 1924 }
sil_scope 1928 {  parent 1926 inlined_at 1927 }
sil_scope 1929 {  parent 1361 inlined_at 1925 }
sil_scope 1930 {  parent 1929 inlined_at 1927 }
sil_scope 1931 {  parent 1368 inlined_at 1925 }
sil_scope 1932 {  parent 1931 inlined_at 1927 }
sil_scope 1933 {  parent 1350 inlined_at 1927 }
sil_scope 1934 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g5countSi : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 1935 {  parent 1934 }
sil_scope 1936 {  parent 1339 inlined_at 1935 }
sil_scope 1937 {  parent 1924 }
sil_scope 1938 {  parent 1936 inlined_at 1937 }
sil_scope 1939 {  parent 1354 inlined_at 1935 }
sil_scope 1940 {  parent 1939 inlined_at 1937 }
sil_scope 1941 {  parent 1362 inlined_at 1935 }
sil_scope 1942 {  parent 1941 inlined_at 1937 }
sil_scope 1943 {  parent 1369 inlined_at 1935 }
sil_scope 1944 {  parent 1943 inlined_at 1937 }
sil_scope 1945 {  parent 1352 inlined_at 1935 }
sil_scope 1946 {  parent 1945 inlined_at 1937 }
sil_scope 1947 {  parent 1924 }
sil_scope 1948 {  parent 1237 inlined_at 1947 }
sil_scope 1949 {  parent 1246 inlined_at 1947 }
sil_scope 1950 {  parent 1255 inlined_at 1947 }
sil_scope 1951 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBuffer33requestUniqueMutableBackingBufferfT15minimumCapacitySi_GSqGVs22_ContiguousArrayBufferx__ : $@convention(method) (Int, @inout _ArrayBuffer<Employee>) -> @owned Optional<_ContiguousArrayBuffer<Employee>> }
sil_scope 1952 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_33requestUniqueMutableBackingBufferfT15minimumCapacitySi_GSqGVs22_ContiguousArrayBufferwx7Element__ : $@convention(witness_method) (Int, @inout _ArrayBuffer<Employee>) -> @owned Optional<_ContiguousArrayBuffer<Employee>> }
sil_scope 1953 {  parent 1924 }
sil_scope 1954 {  parent 1952 inlined_at 1953 }
sil_scope 1955 {  parent 1954 }
sil_scope 1956 {  parent 1951 inlined_at 1955 }
sil_scope 1957 {  parent 1951 }
sil_scope 1958 {  parent 1331 inlined_at 1957 }
sil_scope 1959 {  parent 1958 inlined_at 1955 }
sil_scope 1960 {  parent 1951 }
sil_scope 1961 {  parent 1382 inlined_at 1960 }
sil_scope 1962 {  parent 1961 inlined_at 1955 }
sil_scope 1963 {  parent 1390 inlined_at 1960 }
sil_scope 1964 {  parent 1963 inlined_at 1955 }
sil_scope 1965 {  parent 1380 inlined_at 1960 }
sil_scope 1966 {  parent 1965 inlined_at 1955 }
sil_scope 1967 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g19firstElementAddressGSpwx7Element_ : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 1968 {  parent 1924 }
sil_scope 1969 {  parent 1967 inlined_at 1968 }
sil_scope 1970 {  parent 1969 }
sil_scope 1971 {  parent 1239 inlined_at 1970 }
sil_scope 1972 {  parent 1247 inlined_at 1970 }
sil_scope 1973 {  parent 1256 inlined_at 1970 }
sil_scope 1974 {  parent 1924 }
sil_scope 1975 {  parent 1237 inlined_at 1974 }
sil_scope 1976 {  parent 1246 inlined_at 1974 }
sil_scope 1977 {  parent 1255 inlined_at 1974 }
sil_scope 1978 {  parent @_TTSg5V4Main8Employee___TFSp12deinitializefT5countSi_Sv : $@convention(method) (Int, UnsafeMutablePointer<Employee>) -> UnsafeMutableRawPointer }
sil_scope 1979 {  parent 1924 }
sil_scope 1980 {  parent 1978 inlined_at 1979 }
sil_scope 1981 {  parent @_TTSg5V4Main8Employee___TFSp14moveInitializefT4fromGSpx_5countSi_T_ : $@convention(method) (UnsafeMutablePointer<Employee>, Int, UnsafeMutablePointer<Employee>) -> () }
sil_scope 1982 {  parent 1924 }
sil_scope 1983 {  parent 1981 inlined_at 1982 }
sil_scope 1984 {  parent @_TTSg5V4Main8Employee___TFsoi1lurFTGSpx_GSpx__Sb : $@convention(thin) (UnsafeMutablePointer<Employee>, UnsafeMutablePointer<Employee>) -> Bool }
sil_scope 1985 {  parent @_TTSg5V4Main8Employee___TTWurGSpx_s10ComparablesZFS_oi1lfTxx_Sb : $@convention(witness_method) (UnsafeMutablePointer<Employee>, UnsafeMutablePointer<Employee>, @thick UnsafeMutablePointer<Employee>.Type) -> Bool }
sil_scope 1986 {  parent 1985 }
sil_scope 1987 {  parent 1984 inlined_at 1986 }
sil_scope 1988 {  parent @_TTSg5GSpV4Main8Employee_GSpS0__s10Comparables___TFsoi2geuRxs10ComparablerFTxx_Sb : $@convention(thin) (UnsafeMutablePointer<Employee>, UnsafeMutablePointer<Employee>) -> Bool }
sil_scope 1989 {  parent 1988 }
sil_scope 1990 {  parent 1987 inlined_at 1989 }
sil_scope 1991 {  parent 1981 }
sil_scope 1992 {  parent 1990 inlined_at 1991 }
sil_scope 1993 {  parent 1992 inlined_at 1982 }
sil_scope 1994 {  parent 1924 }
sil_scope 1995 {  parent 1978 inlined_at 1994 }
sil_scope 1996 {  parent 1924 }
sil_scope 1997 {  parent 1981 inlined_at 1996 }
sil_scope 1998 {  parent 1992 inlined_at 1996 }
sil_scope 1999 {  parent 1924 }
sil_scope 2000 {  parent 1926 inlined_at 1999 }
sil_scope 2001 {  parent 1931 inlined_at 1999 }
sil_scope 2002 {  parent 1350 inlined_at 1999 }
sil_scope 2003 {  parent 1924 }
sil_scope 2004 {  parent 1978 inlined_at 2003 }
sil_scope 2005 {  parent 1924 }
sil_scope 2006 {  parent 1408 inlined_at 2005 }
sil_scope 2007 {  parent 1415 inlined_at 2005 }
sil_scope 2008 {  parent 1425 inlined_at 2005 }
sil_scope 2009 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferCfTGVs22_ContiguousArrayBufferx_19shiftedToStartIndexSi_GS_x_ : $@convention(method) (@owned _ContiguousArrayBuffer<Employee>, Int, @thin _ArrayBuffer<Employee>.Type) -> @owned _ArrayBuffer<Employee> }
sil_scope 2010 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_CfTGVs22_ContiguousArrayBufferwx7Element_19shiftedToStartIndexSi_x : $@convention(witness_method) (@owned _ContiguousArrayBuffer<Employee>, Int, @thick _ArrayBuffer<Employee>.Type) -> @owned _ArrayBuffer<Employee> }
sil_scope 2011 {  parent 2010 }
sil_scope 2012 {  parent 2009 inlined_at 2011 }
sil_scope 2013 {  parent 1924 }
sil_scope 2014 {  parent 2012 inlined_at 2013 }
sil_scope 2015 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferg10startIndexSi : $@convention(method) (@guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 2016 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g10startIndexSi : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 2017 {  parent 2016 }
sil_scope 2018 {  parent 2015 inlined_at 2017 }
sil_scope 2019 {  parent 1924 }
sil_scope 2020 {  parent 2018 inlined_at 2019 }
sil_scope 2021 {  parent @_TTSg5V4Main8Employee___TFVs22_ContiguousArrayBuffer13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpx__GSpx_ : $@convention(method) (Range<Int>, UnsafeMutablePointer<Employee>, @guaranteed _ContiguousArrayBuffer<Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 2022 {  parent 2021 }
sil_scope 2023 {  parent 1237 inlined_at 2022 }
sil_scope 2024 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBuffer13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpx__GSpx_ : $@convention(method) (Range<Int>, UnsafeMutablePointer<Employee>, @guaranteed _ArrayBuffer<Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 2025 {  parent 2024 }
sil_scope 2026 {  parent 2023 inlined_at 2025 }
sil_scope 2027 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpwx7Element__GSpwxS2__ : $@convention(witness_method) (Range<Int>, UnsafeMutablePointer<Employee>, @in_guaranteed _ArrayBuffer<Employee>) -> UnsafeMutablePointer<Employee> }
sil_scope 2028 {  parent 1924 }
sil_scope 2029 {  parent 2027 inlined_at 2028 }
sil_scope 2030 {  parent 2029 }
sil_scope 2031 {  parent 2026 inlined_at 2030 }
sil_scope 2032 {  parent 1246 inlined_at 2022 }
sil_scope 2033 {  parent 2032 inlined_at 2025 }
sil_scope 2034 {  parent 2033 inlined_at 2030 }
sil_scope 2035 {  parent 1255 inlined_at 2022 }
sil_scope 2036 {  parent 2035 inlined_at 2025 }
sil_scope 2037 {  parent 2036 inlined_at 2030 }
sil_scope 2038 {  parent @_TTSg5V4Main8Employee___TFSp10initializefT4fromGSPx_5countSi_T_ : $@convention(method) (UnsafePointer<Employee>, Int, UnsafeMutablePointer<Employee>) -> () }
sil_scope 2039 {  parent 2021 }
sil_scope 2040 {  parent 2038 inlined_at 2039 }
sil_scope 2041 {  parent 2040 inlined_at 2025 }
sil_scope 2042 {  parent 2041 inlined_at 2030 }
sil_scope 2043 {  parent 2021 inlined_at 2025 }
sil_scope 2044 {  parent 2043 inlined_at 2030 }
sil_scope 2045 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferg8endIndexSi : $@convention(method) (@guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 2046 {  parent 2045 }
sil_scope 2047 {  parent 1339 inlined_at 2046 }
sil_scope 2048 {  parent @_TTSg5V4Main8Employee___TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g8endIndexwx5Index : $@convention(witness_method) (@in_guaranteed _ArrayBuffer<Employee>) -> Int }
sil_scope 2049 {  parent 2048 }
sil_scope 2050 {  parent 2047 inlined_at 2049 }
sil_scope 2051 {  parent 1924 }
sil_scope 2052 {  parent 2050 inlined_at 2051 }
sil_scope 2053 {  parent 1354 inlined_at 2046 }
sil_scope 2054 {  parent 2053 inlined_at 2049 }
sil_scope 2055 {  parent 2054 inlined_at 2051 }
sil_scope 2056 {  parent 1362 inlined_at 2046 }
sil_scope 2057 {  parent 2056 inlined_at 2049 }
sil_scope 2058 {  parent 2057 inlined_at 2051 }
sil_scope 2059 {  parent 1369 inlined_at 2046 }
sil_scope 2060 {  parent 2059 inlined_at 2049 }
sil_scope 2061 {  parent 2060 inlined_at 2051 }
sil_scope 2062 {  parent 1352 inlined_at 2046 }
sil_scope 2063 {  parent 2062 inlined_at 2049 }
sil_scope 2064 {  parent 2063 inlined_at 2051 }
sil_scope 2065 {  parent 1924 }
sil_scope 2066 {  parent 2027 inlined_at 2065 }
sil_scope 2067 {  parent 2066 }
sil_scope 2068 {  parent 2043 inlined_at 2067 }
sil_scope 2069 {  parent 2026 inlined_at 2067 }
sil_scope 2070 {  parent 2033 inlined_at 2067 }
sil_scope 2071 {  parent 2036 inlined_at 2067 }
sil_scope 2072 {  parent 2041 inlined_at 2067 }

// specialized specialized _arrayOutOfPlaceUpdate<A, B where ...> (inout A, inout _ContiguousArrayBuffer<A.Element>, Int, Int, B) -> ()
sil shared [noinline] @_TTSf4n_n_n_n_d___TTSg5GVs12_ArrayBufferV4Main8Employee_GS_S1__s20_ArrayBufferProtocols_GVs14_IgnorePointerS1__GS3_S1__s16_PointerFunctions___TFs22_arrayOutOfPlaceUpdateu0_Rxs20_ArrayBufferProtocol_s16_PointerFunctionwx5IndexzSiwx7Elementzw_7ElementrFTRxRGVs22_ContiguousArrayBufferwxS2__SiSiq__T_ : $@convention(thin) (@inout _ArrayBuffer<Employee>, @inout _ContiguousArrayBuffer<Employee>, Int, Int) -> () {
// %0                                             // users: %57, %109, %108, %250, %4
// %1                                             // users: %8, %5
// %2                                             // users: %146, %47, %6
// %3                                             // users: %52, %7
bb0(%0 : $*_ArrayBuffer<Employee>, %1 : $*_ContiguousArrayBuffer<Employee>, %2 : $Int, %3 : $Int):
  debug_value_addr %0 : $*_ArrayBuffer<Employee>, scope 1924 // id: %4
  debug_value_addr %1 : $*_ContiguousArrayBuffer<Employee>, scope 1924 // id: %5
  debug_value %2 : $Int, scope 1924               // id: %6
  debug_value %3 : $Int, scope 1924               // id: %7
  %8 = struct_element_addr %1 : $*_ContiguousArrayBuffer<Employee>, #_ContiguousArrayBuffer.__bufferPointer, scope 1924 // user: %9
  %9 = struct_element_addr %8 : $*ManagedBufferPointer<_ArrayBody, Employee>, #ManagedBufferPointer._nativeBuffer, scope 1924 // users: %243, %10
  %10 = load %9 : $*Builtin.NativeObject, scope 1924 // users: %12, %41
  %11 = builtin "onFastPath"() : $(), scope 1928
  %12 = ref_to_raw_pointer %10 : $Builtin.NativeObject to $Builtin.RawPointer, scope 1930 // users: %107, %39
  %13 = builtin "onFastPath"() : $(), scope 1932
  %14 = metatype $@thick HeapObject.Type, scope 1932 // user: %15
  %15 = builtin "sizeof"<HeapObject>(%14 : $@thick HeapObject.Type) : $Builtin.Word, scope 1932 // user: %16
  %16 = builtin "zextOrBitCast_Word_Int64"(%15 : $Builtin.Word) : $Builtin.Int64, scope 1932 // user: %21
  %17 = metatype $@thick _ArrayBody.Type, scope 1932 // users: %83, %18
  %18 = builtin "alignof"<_ArrayBody>(%17 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1932 // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64, scope 1932 // users: %29, %21
  %20 = integer_literal $Builtin.Int1, -1, scope 1932 // users: %283, %113, %123, %85, %92, %48, %53, %72, %76, %255, %262, %280, %21
  %21 = builtin "uadd_with_overflow_Int64"(%16 : $Builtin.Int64, %19 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1932 // users: %23, %22
  %22 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 0, scope 1932 // user: %27
  %23 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 1, scope 1932 // user: %24
  cond_fail %23 : $Builtin.Int1, scope 1932       // id: %24
  %25 = integer_literal $Builtin.Int64, 1, scope 1932 // users: %121, %96, %98, %29, %27
  %26 = integer_literal $Builtin.Int1, 0, scope 1932 // users: %186, %128, %160, %166, %211, %215, %96, %98, %29, %27
  %27 = builtin "usub_with_overflow_Int64"(%22 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1932 // user: %28
  %28 = tuple_extract %27 : $(Builtin.Int64, Builtin.Int1), 0, scope 1932 // user: %33
  %29 = builtin "usub_with_overflow_Int64"(%19 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1932 // user: %30
  %30 = tuple_extract %29 : $(Builtin.Int64, Builtin.Int1), 0, scope 1932 // user: %32
  %31 = integer_literal $Builtin.Int64, -1, scope 1932 // users: %226, %100, %32
  %32 = builtin "xor_Int64"(%30 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int64, scope 1932 // user: %33
  %33 = builtin "and_Int64"(%28 : $Builtin.Int64, %32 : $Builtin.Int64) : $Builtin.Int64, scope 1932 // user: %34
  %34 = builtin "u_to_s_checked_conversion_Int64"(%33 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1932 // users: %36, %35
  %35 = tuple_extract %34 : $(Builtin.Int64, Builtin.Int1), 0, scope 1932 // users: %85, %38
  %36 = tuple_extract %34 : $(Builtin.Int64, Builtin.Int1), 1, scope 1932 // user: %37
  cond_fail %36 : $Builtin.Int1, scope 1932       // id: %37
  %38 = builtin "truncOrBitCast_Int64_Word"(%35 : $Builtin.Int64) : $Builtin.Word, scope 1928 // users: %271, %64, %39
  %39 = index_raw_pointer %12 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 1928 // user: %40
  %40 = pointer_to_address %39 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1933 // user: %41
  %41 = mark_dependence %40 : $*_ArrayBody on %10 : $Builtin.NativeObject, scope 1933 // user: %42
  %42 = struct_element_addr %41 : $*_ArrayBody, #_ArrayBody._storage, scope 1933 // user: %43
  %43 = struct_element_addr %42 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1933 // user: %44
  %44 = struct_element_addr %43 : $*Int, #Int._value, scope 1933 // user: %45
  %45 = load %44 : $*Builtin.Int64, scope 1933    // user: %46
  %46 = builtin "assumeNonNegative_Int64"(%45 : $Builtin.Int64) : $Builtin.Int64, scope 1933 // user: %48
  %47 = struct_extract %2 : $Int, #Int._value, scope 1924 // users: %195, %175, %156, %150, %260, %254, %262, %128, %72, %48
  %48 = builtin "ssub_with_overflow_Int64"(%46 : $Builtin.Int64, %47 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // users: %50, %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %53
  %50 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 1, scope 1924 // user: %51
  cond_fail %50 : $Builtin.Int1, scope 1924       // id: %51
  %52 = struct_extract %3 : $Int, #Int._value, scope 1924 // users: %197, %177, %298, %160, %53
  %53 = builtin "ssub_with_overflow_Int64"(%49 : $Builtin.Int64, %52 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // users: %55, %54
  %54 = tuple_extract %53 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // users: %173, %186, %193, %76
  %55 = tuple_extract %53 : $(Builtin.Int64, Builtin.Int1), 1, scope 1924 // user: %56
  cond_fail %55 : $Builtin.Int1, scope 1924       // id: %56
  %57 = struct_element_addr %0 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 1924 // users: %110, %58
  %58 = struct_element_addr %57 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1924 // users: %266, %247, %111, %59
  %59 = load %58 : $*Builtin.BridgeObject, scope 1924 // users: %241, %144, %62, %60
  %60 = unchecked_ref_cast %59 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1938 // user: %66
  %61 = builtin "onFastPath"() : $(), scope 1940
  %62 = ref_to_raw_pointer %59 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1942 // users: %259, %134, %64
  %63 = builtin "onFastPath"() : $(), scope 1944
  %64 = index_raw_pointer %62 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 1940 // user: %65
  %65 = pointer_to_address %64 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1946 // users: %238, %236, %66
  %66 = mark_dependence %65 : $*_ArrayBody on %60 : $Builtin.NativeObject, scope 1946 // user: %67
  %67 = struct_element_addr %66 : $*_ArrayBody, #_ArrayBody._storage, scope 1946 // users: %118, %68
  %68 = struct_element_addr %67 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1946 // user: %69
  %69 = struct_element_addr %68 : $*Int, #Int._value, scope 1946 // users: %209, %70
  %70 = load %69 : $*Builtin.Int64, scope 1946    // user: %71
  %71 = builtin "assumeNonNegative_Int64"(%70 : $Builtin.Int64) : $Builtin.Int64, scope 1946 // users: %122, %72, %215
  %72 = builtin "ssub_with_overflow_Int64"(%71 : $Builtin.Int64, %47 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // users: %74, %73
  %73 = tuple_extract %72 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %76
  %74 = tuple_extract %72 : $(Builtin.Int64, Builtin.Int1), 1, scope 1924 // user: %75
  cond_fail %74 : $Builtin.Int1, scope 1924       // id: %75
  %76 = builtin "ssub_with_overflow_Int64"(%73 : $Builtin.Int64, %54 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // users: %78, %77
  %77 = tuple_extract %76 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // users: %164, %262, %166
  %78 = tuple_extract %76 : $(Builtin.Int64, Builtin.Int1), 1, scope 1924 // user: %79
  cond_fail %78 : $Builtin.Int1, scope 1924       // id: %79
  %80 = builtin "onFastPath"() : $(), scope 1948
  %81 = builtin "onFastPath"() : $(), scope 1949
  %82 = builtin "onFastPath"() : $(), scope 1950
  %83 = builtin "sizeof"<_ArrayBody>(%17 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1949 // user: %84
  %84 = builtin "zextOrBitCast_Word_Int64"(%83 : $Builtin.Word) : $Builtin.Int64, scope 1949 // user: %85
  %85 = builtin "sadd_with_overflow_Int64"(%35 : $Builtin.Int64, %84 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1949 // users: %87, %86
  %86 = tuple_extract %85 : $(Builtin.Int64, Builtin.Int1), 0, scope 1949 // user: %92
  %87 = tuple_extract %85 : $(Builtin.Int64, Builtin.Int1), 1, scope 1949 // user: %88
  cond_fail %87 : $Builtin.Int1, scope 1949       // id: %88
  %89 = metatype $@thick Employee.Type, scope 1949 // users: %204, %184, %301, %261, %157, %231, %165, %151, %145, %126, %90
  %90 = builtin "alignof"<Employee>(%89 : $@thick Employee.Type) : $Builtin.Word, scope 1949 // user: %91
  %91 = builtin "zextOrBitCast_Word_Int64"(%90 : $Builtin.Word) : $Builtin.Int64, scope 1949 // users: %98, %92
  %92 = builtin "uadd_with_overflow_Int64"(%86 : $Builtin.Int64, %91 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1949 // users: %94, %93
  %93 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 0, scope 1949 // user: %96
  %94 = tuple_extract %92 : $(Builtin.Int64, Builtin.Int1), 1, scope 1949 // user: %95
  cond_fail %94 : $Builtin.Int1, scope 1949       // id: %95
  %96 = builtin "usub_with_overflow_Int64"(%93 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1949 // user: %97
  %97 = tuple_extract %96 : $(Builtin.Int64, Builtin.Int1), 0, scope 1949 // user: %101
  %98 = builtin "usub_with_overflow_Int64"(%91 : $Builtin.Int64, %25 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1949 // user: %99
  %99 = tuple_extract %98 : $(Builtin.Int64, Builtin.Int1), 0, scope 1949 // user: %100
  %100 = builtin "xor_Int64"(%99 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int64, scope 1949 // user: %101
  %101 = builtin "and_Int64"(%97 : $Builtin.Int64, %100 : $Builtin.Int64) : $Builtin.Int64, scope 1949 // user: %102
  %102 = builtin "u_to_s_checked_conversion_Int64"(%101 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1949 // users: %104, %103
  %103 = tuple_extract %102 : $(Builtin.Int64, Builtin.Int1), 0, scope 1949 // user: %106
  %104 = tuple_extract %102 : $(Builtin.Int64, Builtin.Int1), 1, scope 1949 // user: %105
  cond_fail %104 : $Builtin.Int1, scope 1949      // id: %105
  %106 = builtin "truncOrBitCast_Int64_Word"(%103 : $Builtin.Int64) : $Builtin.Word, scope 1948 // users: %290, %259, %134, %107
  %107 = index_raw_pointer %12 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 1948 // users: %194, %174, %296, %147, %151, %153, %157, %261, %159
  debug_value_addr %0 : $*_ArrayBuffer<Employee>, scope 1956 // id: %108
  debug_value_addr %0 : $*_ArrayBuffer<Employee>, scope 1959 // id: %109
  debug_value_addr %57 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1959 // id: %110
  %111 = unchecked_addr_cast %58 : $*Builtin.BridgeObject to $*Builtin.NativeObject, scope 1959 // user: %112
  %112 = is_unique %111 : $*Builtin.NativeObject, scope 1959 // user: %113
  %113 = builtin "int_expect_Int1"(%112 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1956 // user: %114
  cond_br %113, bb2, bb1, scope 1956              // id: %114

bb1:                                              // Preds: bb0
  br bb21, scope 1924                             // id: %115

bb2:                                              // Preds: bb0
  %116 = builtin "onFastPath"() : $(), scope 1962
  %117 = builtin "onFastPath"() : $(), scope 1964
  %118 = struct_element_addr %67 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1966 // user: %119
  %119 = struct_element_addr %118 : $*UInt, #UInt._value, scope 1966 // user: %120
  %120 = load %119 : $*Builtin.Int64, scope 1966  // user: %121
  %121 = builtin "lshr_Int64"(%120 : $Builtin.Int64, %25 : $Builtin.Int64) : $Builtin.Int64, scope 1966 // user: %122
  %122 = builtin "cmp_sge_Int64"(%121 : $Builtin.Int64, %71 : $Builtin.Int64) : $Builtin.Int1, scope 1956 // user: %123
  %123 = builtin "int_expect_Int1"(%122 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1956 // user: %124
  cond_br %123, bb4, bb3, scope 1956              // id: %124

bb3:                                              // Preds: bb2
  br bb21, scope 1924                             // id: %125

bb4:                                              // Preds: bb2
  %126 = builtin "strideof_nonzero"<Employee>(%89 : $@thick Employee.Type) : $Builtin.Word, scope 1924 // user: %127
  %127 = builtin "zextOrBitCast_Word_Int64"(%126 : $Builtin.Word) : $Builtin.Int64, scope 1924 // users: %186, %229, %226, %215, %211, %166, %142, %140, %160, %128
  %128 = builtin "smul_with_overflow_Int64"(%47 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // user: %129
  %129 = tuple_extract %128 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %130
  %130 = builtin "truncOrBitCast_Int64_Word"(%129 : $Builtin.Int64) : $Builtin.Word, scope 1924 // users: %135, %159
  %131 = builtin "onFastPath"() : $(), scope 1971
  %132 = builtin "onFastPath"() : $(), scope 1972
  %133 = builtin "onFastPath"() : $(), scope 1973
  %134 = index_raw_pointer %62 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 1971 // users: %200, %180, %214, %145, %147, %151, %157, %135, %218
  %135 = index_raw_pointer %134 : $Builtin.RawPointer, %130 : $Builtin.Word, scope 1924 // users: %153, %165, %169
  %136 = builtin "onFastPath"() : $(), scope 1975
  %137 = builtin "onFastPath"() : $(), scope 1976
  %138 = builtin "onFastPath"() : $(), scope 1977
  %139 = integer_literal $Builtin.Int64, 0, scope 1924 // users: %140, %232, %142
  %140 = builtin "cmp_eq_Int64"(%127 : $Builtin.Int64, %139 : $Builtin.Int64) : $Builtin.Int1, scope 1924 // user: %141
  cond_fail %140 : $Builtin.Int1, scope 1924      // id: %141
  %142 = builtin "sdiv_Int64"(%139 : $Builtin.Int64, %127 : $Builtin.Int64) : $Builtin.Int64, scope 1924 // user: %143
  %143 = builtin "truncOrBitCast_Int64_Word"(%142 : $Builtin.Int64) : $Builtin.Word, scope 1980 // user: %145
  strong_retain %59 : $Builtin.BridgeObject, scope 1924 // id: %144
  %145 = builtin "destroyArray"<Employee>(%89 : $@thick Employee.Type, %134 : $Builtin.RawPointer, %143 : $Builtin.Word) : $(), scope 1980
  debug_value %2 : $Int, scope 1983               // id: %146
  %147 = builtin "cmp_ult_RawPointer"(%107 : $Builtin.RawPointer, %134 : $Builtin.RawPointer) : $Builtin.Int1, scope 1983 // user: %148
  cond_br %147, bb5, bb7, scope 1983              // id: %148

bb5:                                              // Preds: bb4
  br bb6, scope 1924                              // id: %149

bb6:                                              // Preds: bb8 bb5
  %150 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1983 // user: %151
  %151 = builtin "takeArrayFrontToBack"<Employee>(%89 : $@thick Employee.Type, %107 : $Builtin.RawPointer, %134 : $Builtin.RawPointer, %150 : $Builtin.Word) : $(), scope 1983
  br bb10, scope 1983                             // id: %152

bb7:                                              // Preds: bb4
  %153 = builtin "cmp_ult_RawPointer"(%107 : $Builtin.RawPointer, %135 : $Builtin.RawPointer) : $Builtin.Int1, scope 1993 // user: %154
  cond_br %153, bb9, bb8, scope 1983              // id: %154

bb8:                                              // Preds: bb7
  br bb6, scope 1924                              // id: %155

bb9:                                              // Preds: bb7
  %156 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1983 // user: %157
  %157 = builtin "takeArrayBackToFront"<Employee>(%89 : $@thick Employee.Type, %107 : $Builtin.RawPointer, %134 : $Builtin.RawPointer, %156 : $Builtin.Word) : $(), scope 1983
  br bb10, scope 1983                             // id: %158

bb10:                                             // Preds: bb9 bb6
  %159 = index_raw_pointer %107 : $Builtin.RawPointer, %130 : $Builtin.Word, scope 1924 // user: %163
  %160 = builtin "smul_with_overflow_Int64"(%52 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // user: %161
  %161 = tuple_extract %160 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %162
  %162 = builtin "truncOrBitCast_Int64_Word"(%161 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %163
  %163 = index_raw_pointer %159 : $Builtin.RawPointer, %162 : $Builtin.Word, scope 1924 // users: %170, %190
  %164 = builtin "truncOrBitCast_Int64_Word"(%77 : $Builtin.Int64) : $Builtin.Word, scope 1995 // users: %202, %182, %165
  %165 = builtin "destroyArray"<Employee>(%89 : $@thick Employee.Type, %135 : $Builtin.RawPointer, %164 : $Builtin.Word) : $(), scope 1995
  %166 = builtin "smul_with_overflow_Int64"(%77 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // user: %167
  %167 = tuple_extract %166 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %168
  %168 = builtin "truncOrBitCast_Int64_Word"(%167 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %169
  %169 = index_raw_pointer %135 : $Builtin.RawPointer, %168 : $Builtin.Word, scope 1924 // users: %170, %189
  %170 = builtin "cmp_ult_RawPointer"(%163 : $Builtin.RawPointer, %169 : $Builtin.RawPointer) : $Builtin.Int1, scope 1997 // user: %171
  cond_br %170, bb11, bb13, scope 1997            // id: %171

bb11:                                             // Preds: bb10
  br bb12, scope 1924                             // id: %172

bb12:                                             // Preds: bb14 bb11
  %173 = builtin "truncOrBitCast_Int64_Word"(%54 : $Builtin.Int64) : $Builtin.Word, scope 1997 // user: %184
  %174 = pointer_to_address %107 : $Builtin.RawPointer to [strict] $*Employee, scope 1924 // user: %176
  %175 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1924 // users: %181, %176
  %176 = index_addr %174 : $*Employee, %175 : $Builtin.Word, scope 1924 // user: %178
  %177 = builtin "truncOrBitCast_Int64_Word"(%52 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %178
  %178 = index_addr %176 : $*Employee, %177 : $Builtin.Word, scope 1924 // user: %179
  %179 = address_to_pointer %178 : $*Employee to $Builtin.RawPointer, scope 1924 // user: %184
  %180 = pointer_to_address %134 : $Builtin.RawPointer to [strict] $*Employee, scope 1924 // user: %181
  %181 = index_addr %180 : $*Employee, %175 : $Builtin.Word, scope 1924 // user: %182
  %182 = index_addr %181 : $*Employee, %164 : $Builtin.Word, scope 1924 // user: %183
  %183 = address_to_pointer %182 : $*Employee to $Builtin.RawPointer, scope 1924 // user: %184
  %184 = builtin "takeArrayFrontToBack"<Employee>(%89 : $@thick Employee.Type, %179 : $Builtin.RawPointer, %183 : $Builtin.RawPointer, %173 : $Builtin.Word) : $(), scope 1924
  br bb16, scope 1997                             // id: %185

bb13:                                             // Preds: bb10
  %186 = builtin "smul_with_overflow_Int64"(%54 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1997 // user: %187
  %187 = tuple_extract %186 : $(Builtin.Int64, Builtin.Int1), 0, scope 1997 // user: %188
  %188 = builtin "truncOrBitCast_Int64_Word"(%187 : $Builtin.Int64) : $Builtin.Word, scope 1997 // user: %189
  %189 = index_raw_pointer %169 : $Builtin.RawPointer, %188 : $Builtin.Word, scope 1997 // user: %190
  %190 = builtin "cmp_ult_RawPointer"(%163 : $Builtin.RawPointer, %189 : $Builtin.RawPointer) : $Builtin.Int1, scope 1998 // user: %191
  cond_br %190, bb15, bb14, scope 1997            // id: %191

bb14:                                             // Preds: bb13
  br bb12, scope 1924                             // id: %192

bb15:                                             // Preds: bb13
  %193 = builtin "truncOrBitCast_Int64_Word"(%54 : $Builtin.Int64) : $Builtin.Word, scope 1997 // user: %204
  %194 = pointer_to_address %107 : $Builtin.RawPointer to [strict] $*Employee, scope 1924 // user: %196
  %195 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 1924 // users: %201, %196
  %196 = index_addr %194 : $*Employee, %195 : $Builtin.Word, scope 1924 // user: %198
  %197 = builtin "truncOrBitCast_Int64_Word"(%52 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %198
  %198 = index_addr %196 : $*Employee, %197 : $Builtin.Word, scope 1924 // user: %199
  %199 = address_to_pointer %198 : $*Employee to $Builtin.RawPointer, scope 1924 // user: %204
  %200 = pointer_to_address %134 : $Builtin.RawPointer to [strict] $*Employee, scope 1924 // user: %201
  %201 = index_addr %200 : $*Employee, %195 : $Builtin.Word, scope 1924 // user: %202
  %202 = index_addr %201 : $*Employee, %164 : $Builtin.Word, scope 1924 // user: %203
  %203 = address_to_pointer %202 : $*Employee to $Builtin.RawPointer, scope 1924 // user: %204
  %204 = builtin "takeArrayBackToFront"<Employee>(%89 : $@thick Employee.Type, %199 : $Builtin.RawPointer, %203 : $Builtin.RawPointer, %193 : $Builtin.Word) : $(), scope 1924
  br bb16, scope 1997                             // id: %205

bb16:                                             // Preds: bb15 bb12
  %206 = integer_literal $Builtin.Int64, -9223372036854775808, scope 1924 // user: %223
  %207 = builtin "onFastPath"() : $(), scope 2000
  %208 = builtin "onFastPath"() : $(), scope 2001
  %209 = load %69 : $*Builtin.Int64, scope 2002   // user: %210
  %210 = builtin "assumeNonNegative_Int64"(%209 : $Builtin.Int64) : $Builtin.Int64, scope 2002 // user: %211
  %211 = builtin "smul_with_overflow_Int64"(%210 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // user: %212
  %212 = tuple_extract %211 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %213
  %213 = builtin "truncOrBitCast_Int64_Word"(%212 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %214
  %214 = index_raw_pointer %134 : $Builtin.RawPointer, %213 : $Builtin.Word, scope 1924 // user: %219
  %215 = builtin "smul_with_overflow_Int64"(%71 : $Builtin.Int64, %127 : $Builtin.Int64, %26 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // user: %216
  %216 = tuple_extract %215 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // user: %217
  %217 = builtin "truncOrBitCast_Int64_Word"(%216 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %218
  %218 = index_raw_pointer %134 : $Builtin.RawPointer, %217 : $Builtin.Word, scope 1924 // users: %231, %220
  %219 = builtin "ptrtoint_Word"(%214 : $Builtin.RawPointer) : $Builtin.Word, scope 1924 // user: %221
  %220 = builtin "ptrtoint_Word"(%218 : $Builtin.RawPointer) : $Builtin.Word, scope 1924 // user: %221
  %221 = builtin "sub_Word"(%219 : $Builtin.Word, %220 : $Builtin.Word) : $Builtin.Word, scope 1924 // user: %222
  %222 = builtin "zextOrBitCast_Word_Int64"(%221 : $Builtin.Word) : $Builtin.Int64, scope 1924 // users: %229, %223
  %223 = builtin "cmp_eq_Int64"(%222 : $Builtin.Int64, %206 : $Builtin.Int64) : $Builtin.Int1, scope 1924 // user: %224
  cond_br %223, bb18, bb17, scope 1924            // id: %224

bb17:                                             // Preds: bb16
  br bb19, scope 1924                             // id: %225

bb18:                                             // Preds: bb16
  %226 = builtin "cmp_eq_Int64"(%127 : $Builtin.Int64, %31 : $Builtin.Int64) : $Builtin.Int1, scope 1924 // user: %227
  cond_fail %226 : $Builtin.Int1, scope 1924      // id: %227
  br bb19, scope 1924                             // id: %228

bb19:                                             // Preds: bb17 bb18
  %229 = builtin "sdiv_Int64"(%222 : $Builtin.Int64, %127 : $Builtin.Int64) : $Builtin.Int64, scope 1924 // user: %230
  %230 = builtin "truncOrBitCast_Int64_Word"(%229 : $Builtin.Int64) : $Builtin.Word, scope 2004 // user: %231
  %231 = builtin "destroyArray"<Employee>(%89 : $@thick Employee.Type, %218 : $Builtin.RawPointer, %230 : $Builtin.Word) : $(), scope 2004
  %232 = struct $Int (%139 : $Builtin.Int64), scope 1924 // users: %240, %237, %233
  debug_value %232 : $Int, scope 2006             // id: %233
  %234 = builtin "onFastPath"() : $(), scope 2007
  %235 = builtin "onFastPath"() : $(), scope 2008
  debug_value_addr %65 : $*_ArrayBody, scope 2006 // id: %236
  debug_value %232 : $Int, scope 2006             // id: %237
  %238 = struct_element_addr %65 : $*_ArrayBody, #_ArrayBody._storage, scope 2006 // user: %239
  %239 = struct_element_addr %238 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 2006 // user: %240
  store %232 to %239 : $*Int, scope 2006          // id: %240
  strong_release %59 : $Builtin.BridgeObject, scope 1924 // id: %241
  br bb20, scope 1924                             // id: %242

bb20:                                             // Preds: bb21 bb19
  %243 = load %9 : $*Builtin.NativeObject, scope 1924 // users: %248, %244
  %244 = unchecked_ref_cast %243 : $Builtin.NativeObject to $Builtin.BridgeObject, scope 2014 // user: %245
  %245 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%244 : $Builtin.BridgeObject), scope 1924 // user: %246
  %246 = struct $_ArrayBuffer<Employee> (%245 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1924 // user: %250
  %247 = load %58 : $*Builtin.BridgeObject, scope 1924 // user: %249
  strong_retain %243 : $Builtin.NativeObject, scope 1924 // id: %248
  strong_release %247 : $Builtin.BridgeObject, scope 1924 // id: %249
  store %246 to %0 : $*_ArrayBuffer<Employee>, scope 1924 // id: %250
  %251 = tuple (), scope 1924                     // user: %252
  return %251 : $(), scope 1924                   // id: %252

bb21:                                             // Preds: bb3 bb1
  %253 = integer_literal $Builtin.Int64, 0, scope 2020 // user: %254
  %254 = builtin "cmp_sle_Int64"(%253 : $Builtin.Int64, %47 : $Builtin.Int64) : $Builtin.Int1, scope 1924 // user: %255
  %255 = builtin "xor_Int1"(%254 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1924 // user: %281
  %256 = builtin "onFastPath"() : $(), scope 2031
  %257 = builtin "onFastPath"() : $(), scope 2034
  %258 = builtin "onFastPath"() : $(), scope 2037
  %259 = index_raw_pointer %62 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 2031 // user: %261
  %260 = builtin "truncOrBitCast_Int64_Word"(%47 : $Builtin.Int64) : $Builtin.Word, scope 2042 // users: %297, %261
  %261 = builtin "copyArray"<Employee>(%89 : $@thick Employee.Type, %107 : $Builtin.RawPointer, %259 : $Builtin.RawPointer, %260 : $Builtin.Word) : $(), scope 2044
  %262 = builtin "sadd_with_overflow_Int64"(%47 : $Builtin.Int64, %77 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1924 // users: %264, %263
  %263 = tuple_extract %262 : $(Builtin.Int64, Builtin.Int1), 0, scope 1924 // users: %283, %293, %279
  %264 = tuple_extract %262 : $(Builtin.Int64, Builtin.Int1), 1, scope 1924 // user: %265
  cond_fail %264 : $Builtin.Int1, scope 1924      // id: %265
  %266 = load %58 : $*Builtin.BridgeObject, scope 1924 // users: %269, %267
  %267 = unchecked_ref_cast %266 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 2052 // user: %273
  %268 = builtin "onFastPath"() : $(), scope 2055
  %269 = ref_to_raw_pointer %266 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 2058 // users: %290, %271
  %270 = builtin "onFastPath"() : $(), scope 2061
  %271 = index_raw_pointer %269 : $Builtin.RawPointer, %38 : $Builtin.Word, scope 2055 // user: %272
  %272 = pointer_to_address %271 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 2064 // user: %273
  %273 = mark_dependence %272 : $*_ArrayBody on %267 : $Builtin.NativeObject, scope 2064 // user: %274
  %274 = struct_element_addr %273 : $*_ArrayBody, #_ArrayBody._storage, scope 2064 // user: %275
  %275 = struct_element_addr %274 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 2064 // user: %276
  %276 = struct_element_addr %275 : $*Int, #Int._value, scope 2064 // user: %277
  %277 = load %276 : $*Builtin.Int64, scope 2064  // user: %278
  %278 = builtin "assumeNonNegative_Int64"(%277 : $Builtin.Int64) : $Builtin.Int64, scope 2064 // users: %283, %279
  %279 = builtin "cmp_sle_Int64"(%263 : $Builtin.Int64, %278 : $Builtin.Int64) : $Builtin.Int1, scope 1924 // user: %280
  %280 = builtin "xor_Int1"(%279 : $Builtin.Int1, %20 : $Builtin.Int1) : $Builtin.Int1, scope 1924 // user: %281
  %281 = builtin "or_Int1"(%255 : $Builtin.Int1, %280 : $Builtin.Int1) : $Builtin.Int1, scope 2068 // user: %282
  cond_fail %281 : $Builtin.Int1, scope 2068      // id: %282
  %283 = builtin "ssub_with_overflow_Int64"(%278 : $Builtin.Int64, %263 : $Builtin.Int64, %20 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2068 // users: %285, %284
  %284 = tuple_extract %283 : $(Builtin.Int64, Builtin.Int1), 0, scope 2068 // user: %291
  %285 = tuple_extract %283 : $(Builtin.Int64, Builtin.Int1), 1, scope 2068 // user: %286
  cond_fail %285 : $Builtin.Int1, scope 2068      // id: %286
  %287 = builtin "onFastPath"() : $(), scope 2069
  %288 = builtin "onFastPath"() : $(), scope 2070
  %289 = builtin "onFastPath"() : $(), scope 2071
  %290 = index_raw_pointer %269 : $Builtin.RawPointer, %106 : $Builtin.Word, scope 2069 // user: %292
  %291 = builtin "truncOrBitCast_Int64_Word"(%284 : $Builtin.Int64) : $Builtin.Word, scope 2072 // user: %301
  %292 = pointer_to_address %290 : $Builtin.RawPointer to [strict] $*Employee, scope 2068 // user: %294
  %293 = builtin "truncOrBitCast_Int64_Word"(%263 : $Builtin.Int64) : $Builtin.Word, scope 2068 // user: %294
  %294 = index_addr %292 : $*Employee, %293 : $Builtin.Word, scope 2068 // user: %295
  %295 = address_to_pointer %294 : $*Employee to $Builtin.RawPointer, scope 2068 // user: %301
  %296 = pointer_to_address %107 : $Builtin.RawPointer to [strict] $*Employee, scope 1924 // user: %297
  %297 = index_addr %296 : $*Employee, %260 : $Builtin.Word, scope 1924 // user: %299
  %298 = builtin "truncOrBitCast_Int64_Word"(%52 : $Builtin.Int64) : $Builtin.Word, scope 1924 // user: %299
  %299 = index_addr %297 : $*Employee, %298 : $Builtin.Word, scope 1924 // user: %300
  %300 = address_to_pointer %299 : $*Employee to $Builtin.RawPointer, scope 1924 // user: %301
  %301 = builtin "copyArray"<Employee>(%89 : $@thick Employee.Type, %300 : $Builtin.RawPointer, %295 : $Builtin.RawPointer, %291 : $Builtin.Word) : $(), scope 1924
  br bb20, scope 1924                             // id: %302
}

sil_scope 2073 { loc "swift.swift":47:6 parent 304 inlined_at 1206 }
sil_scope 2074 { loc "swift.swift":68:14 parent 313 inlined_at 1206 }
sil_scope 2075 {  parent 329 inlined_at 1206 }
sil_scope 2076 {  parent @_TTSg5V4Main8Employee___TFVs12_ArrayBufferCfT_GS_x_ : $@convention(method) (@thin _ArrayBuffer<Employee>.Type) -> @owned _ArrayBuffer<Employee> }
sil_scope 2077 {  parent 1211 }
sil_scope 2078 {  parent 2076 inlined_at 2077 }
sil_scope 2079 {  parent 2078 inlined_at 1213 }
sil_scope 2080 {  parent 2079 inlined_at 1218 }
sil_scope 2081 { loc "swift.swift":47:6 parent 1293 inlined_at 1298 }
sil_scope 2082 { loc "swift.swift":95:14 parent 395 inlined_at 1300 }
sil_scope 2083 { loc "swift.swift":47:6 parent 401 inlined_at 1291 }
sil_scope 2084 { loc "swift.swift":47:6 parent 2083 inlined_at 1300 }
sil_scope 2085 { loc "swift.swift":75:14 parent 406 inlined_at 1291 }
sil_scope 2086 { loc "swift.swift":75:14 parent 2085 inlined_at 1300 }
sil_scope 2087 { loc "swift.swift":47:6 parent 304 inlined_at 1306 }
sil_scope 2088 { loc "swift.swift":47:6 parent 2087 inlined_at 1300 }
sil_scope 2089 { loc "swift.swift":68:14 parent 313 inlined_at 1306 }
sil_scope 2090 { loc "swift.swift":68:14 parent 2089 inlined_at 1300 }
sil_scope 2091 {  parent 1207 }
sil_scope 2092 {  parent 367 inlined_at 2091 }
sil_scope 2093 {  parent 1301 }
sil_scope 2094 {  parent 367 inlined_at 2093 }
sil_scope 2095 {  parent 1308 }
sil_scope 2096 {  parent 367 inlined_at 2095 }

// specialized specialized static Array<A where ...>.load(iterator : AnyIterator<String>) -> [A]
sil shared @_TTSf4g_d___TTSg5V4Main8EmployeeS0_S_8LoadableS____TZFe4MainRxS_8Loadablexzwx6LoadedrSa4loadfT8iteratorGVs11AnyIteratorSS__GSax_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Array<Employee> {
// %0                                             // users: %136, %137, %273, %272, %290, %293, %276, %124, %122, %121, %108, %107, %106, %105, %104, %7, %5, %4, %3, %2
bb0(%0 : $AnyIterator<String>):
  %1 = alloc_stack $Array<Employee>, var, name "ret", loc "swift.swift":86:7, scope 1198 // users: %210, %207, %190, %172, %145, %144, %143, %100, %90
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":84:19, scope 1197 // id: %2
  %3 = struct_extract %0 : $AnyIterator<String>, #AnyIterator._box, loc "swift.swift":85:36, scope 1198 // users: %294, %125, %277, %116, %259, %8, %258
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 2073 // id: %4
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":68:19, scope 2074 // id: %5
  %6 = alloc_stack $Optional<String>, scope 1207  // users: %259, %261, %260
  debug_value %0 : $AnyIterator<String>, scope 1207 // id: %7
  checked_cast_br [exact] %3 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb23, bb24, scope 1207 // id: %8

bb1:                                              // Preds: bb24
  %9 = integer_literal $Builtin.Int1, -1, loc "swift.swift":69:34, scope 1209 // user: %10
  cond_fail %9 : $Builtin.Int1, loc "swift.swift":69:34, scope 1209 // id: %10
  unreachable, loc "swift.swift":69:34, scope 1209 // id: %11

bb2:                                              // Preds: bb24
  %12 = unchecked_enum_data %260 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 1209 // users: %19, %13
  debug_value %12 : $String, let, name "x", loc "swift.swift":69:7, scope 1209 // id: %13
  // function_ref Int.init(String, radix : Int) -> Int?
  %14 = function_ref @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:10, scope 1209 // users: %131, %19
  %15 = metatype $@thin Int.Type, loc "swift.swift":70:10, scope 1209 // users: %131, %19
  %16 = integer_literal $Builtin.Int64, 10, scope 2075 // user: %17
  %17 = struct $Int (%16 : $Builtin.Int64), scope 2075 // users: %131, %19
  retain_value %260 : $Optional<String>, scope 1197 // id: %18
  %19 = apply %14(%12, %17, %15) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 1209 // users: %20, %25
  switch_enum %19 : $Optional<Int>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb4, loc "swift.swift":70:16, scope 1209 // id: %20

bb3:                                              // Preds: bb2
  %21 = integer_literal $Builtin.Int1, -1, loc "swift.swift":70:16, scope 1209 // user: %22
  cond_fail %21 : $Builtin.Int1, loc "swift.swift":70:16, scope 1209 // id: %22
  unreachable, loc "swift.swift":70:16, scope 1209 // id: %23

bb4:                                              // Preds: bb2
  release_value %260 : $Optional<String>, scope 1197 // id: %24
  %25 = unchecked_enum_data %19 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 1209 // users: %91, %26
  debug_value %25 : $Int, let, name "n", loc "swift.swift":85:7, scope 1198 // id: %26
  %27 = integer_literal $Builtin.Int64, 0, scope 1217 // users: %92, %95, %102, %110
  %28 = integer_literal $Builtin.Int1, -1, scope 1219 // users: %192, %153, %93, %112, %117, %126, %133, %75, %68, %49
  %29 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage, scope 2080 // user: %30
  %30 = address_to_pointer %29 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer, scope 2080 // user: %31
  %31 = raw_pointer_to_ref %30 : $Builtin.RawPointer to $_EmptyArrayStorage, scope 2080 // users: %97, %109, %32
  %32 = unchecked_ref_cast %31 : $_EmptyArrayStorage to $Builtin.BridgeObject, scope 2080 // user: %33
  %33 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%32 : $Builtin.BridgeObject), scope 1219 // users: %39, %34
  %34 = struct $_ArrayBuffer<Employee> (%33 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1219 // users: %38, %37, %35
  %35 = struct $Array<Employee> (%34 : $_ArrayBuffer<Employee>), scope 1219 // users: %98, %89, %90, %88, %36
  debug_value %35 : $Array<Employee>, scope 1221  // id: %36
  debug_value %34 : $_ArrayBuffer<Employee>, scope 1226 // id: %37
  debug_value %34 : $_ArrayBuffer<Employee>, scope 1232 // id: %38
  debug_value %33 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1232 // id: %39
  %40 = builtin "onFastPath"() : $(), scope 1241
  %41 = builtin "onFastPath"() : $(), scope 1249
  %42 = builtin "onFastPath"() : $(), scope 1258
  %43 = metatype $@thick HeapObject.Type, scope 1258 // user: %44
  %44 = builtin "sizeof"<HeapObject>(%43 : $@thick HeapObject.Type) : $Builtin.Word, scope 1258 // user: %45
  %45 = builtin "zextOrBitCast_Word_Int64"(%44 : $Builtin.Word) : $Builtin.Int64, scope 1258 // user: %49
  %46 = metatype $@thick _ArrayBody.Type, scope 1258 // users: %66, %47
  %47 = builtin "alignof"<_ArrayBody>(%46 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1258 // user: %48
  %48 = builtin "zextOrBitCast_Word_Int64"(%47 : $Builtin.Word) : $Builtin.Int64, scope 1258 // users: %57, %49
  %49 = builtin "uadd_with_overflow_Int64"(%45 : $Builtin.Int64, %48 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1258 // users: %51, %50
  %50 = tuple_extract %49 : $(Builtin.Int64, Builtin.Int1), 0, scope 1258 // user: %55
  %51 = tuple_extract %49 : $(Builtin.Int64, Builtin.Int1), 1, scope 1258 // user: %52
  cond_fail %51 : $Builtin.Int1, scope 1258       // id: %52
  %53 = integer_literal $Builtin.Int64, 1, scope 1258 // users: %192, %201, %112, %81, %79, %57, %55
  %54 = integer_literal $Builtin.Int1, 0, scope 1258 // users: %203, %81, %79, %57, %55
  %55 = builtin "usub_with_overflow_Int64"(%50 : $Builtin.Int64, %53 : $Builtin.Int64, %54 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1258 // user: %56
  %56 = tuple_extract %55 : $(Builtin.Int64, Builtin.Int1), 0, scope 1258 // user: %61
  %57 = builtin "usub_with_overflow_Int64"(%48 : $Builtin.Int64, %53 : $Builtin.Int64, %54 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1258 // user: %58
  %58 = tuple_extract %57 : $(Builtin.Int64, Builtin.Int1), 0, scope 1258 // user: %60
  %59 = integer_literal $Builtin.Int64, -1, scope 1258 // users: %83, %60
  %60 = builtin "xor_Int64"(%58 : $Builtin.Int64, %59 : $Builtin.Int64) : $Builtin.Int64, scope 1258 // user: %61
  %61 = builtin "and_Int64"(%56 : $Builtin.Int64, %60 : $Builtin.Int64) : $Builtin.Int64, scope 1258 // user: %62
  %62 = builtin "u_to_s_checked_conversion_Int64"(%61 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1258 // users: %64, %63
  %63 = tuple_extract %62 : $(Builtin.Int64, Builtin.Int1), 0, scope 1258 // users: %161, %179, %68
  %64 = tuple_extract %62 : $(Builtin.Int64, Builtin.Int1), 1, scope 1258 // user: %65
  cond_fail %64 : $Builtin.Int1, scope 1258       // id: %65
  %66 = builtin "sizeof"<_ArrayBody>(%46 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 1249 // user: %67
  %67 = builtin "zextOrBitCast_Word_Int64"(%66 : $Builtin.Word) : $Builtin.Int64, scope 1249 // user: %68
  %68 = builtin "sadd_with_overflow_Int64"(%63 : $Builtin.Int64, %67 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1249 // users: %70, %69
  %69 = tuple_extract %68 : $(Builtin.Int64, Builtin.Int1), 0, scope 1249 // user: %75
  %70 = tuple_extract %68 : $(Builtin.Int64, Builtin.Int1), 1, scope 1249 // user: %71
  cond_fail %70 : $Builtin.Int1, scope 1249       // id: %71
  %72 = metatype $@thick Employee.Type, scope 1249 // user: %73
  %73 = builtin "alignof"<Employee>(%72 : $@thick Employee.Type) : $Builtin.Word, scope 1249 // user: %74
  %74 = builtin "zextOrBitCast_Word_Int64"(%73 : $Builtin.Word) : $Builtin.Int64, scope 1249 // users: %81, %75
  %75 = builtin "uadd_with_overflow_Int64"(%69 : $Builtin.Int64, %74 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1249 // users: %77, %76
  %76 = tuple_extract %75 : $(Builtin.Int64, Builtin.Int1), 0, scope 1249 // user: %79
  %77 = tuple_extract %75 : $(Builtin.Int64, Builtin.Int1), 1, scope 1249 // user: %78
  cond_fail %77 : $Builtin.Int1, scope 1249       // id: %78
  %79 = builtin "usub_with_overflow_Int64"(%76 : $Builtin.Int64, %53 : $Builtin.Int64, %54 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1249 // user: %80
  %80 = tuple_extract %79 : $(Builtin.Int64, Builtin.Int1), 0, scope 1249 // user: %84
  %81 = builtin "usub_with_overflow_Int64"(%74 : $Builtin.Int64, %53 : $Builtin.Int64, %54 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1249 // user: %82
  %82 = tuple_extract %81 : $(Builtin.Int64, Builtin.Int1), 0, scope 1249 // user: %83
  %83 = builtin "xor_Int64"(%82 : $Builtin.Int64, %59 : $Builtin.Int64) : $Builtin.Int64, scope 1249 // user: %84
  %84 = builtin "and_Int64"(%80 : $Builtin.Int64, %83 : $Builtin.Int64) : $Builtin.Int64, scope 1249 // user: %85
  %85 = builtin "u_to_s_checked_conversion_Int64"(%84 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 1249 // users: %232, %86
  %86 = tuple_extract %85 : $(Builtin.Int64, Builtin.Int1), 1, scope 1249 // user: %87
  cond_fail %86 : $Builtin.Int1, scope 1249       // id: %87
  debug_value %35 : $Array<Employee>, scope 1217  // id: %88
  debug_value %35 : $Array<Employee>, scope 1263  // id: %89
  store %35 to %1 : $*Array<Employee>, loc "swift.swift":86:24, scope 1198 // id: %90
  %91 = struct_extract %25 : $Int, #Int._value, loc "swift.swift":87:16, scope 1265 // users: %240, %102, %95, %92
  %92 = builtin "cmp_sle_Int64"(%27 : $Builtin.Int64, %91 : $Builtin.Int64) : $Builtin.Int1, loc "swift.swift":87:13, scope 1265 // user: %93
  %93 = builtin "xor_Int1"(%92 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, loc "swift.swift":87:13, scope 1265 // user: %94
  cond_fail %93 : $Builtin.Int1, loc "swift.swift":87:13, scope 1265 // id: %94
  %95 = builtin "cmp_eq_Int64"(%27 : $Builtin.Int64, %91 : $Builtin.Int64) : $Builtin.Int1, scope 1268 // user: %96
  cond_br %95, bb5, bb7, scope 1270               // id: %96

bb5:                                              // Preds: bb4
  strong_retain %31 : $_EmptyArrayStorage, scope 1197 // id: %97
  br bb6(%35 : $Array<Employee>), scope 1197      // id: %98

// %99                                            // user: %101
bb6(%99 : $Array<Employee>):                      // Preds: bb21 bb5
  dealloc_stack %1 : $*Array<Employee>, loc "swift.swift":86:7, scope 1198 // id: %100
  return %99 : $Array<Employee>, loc "swift.swift":90:3, scope 1198 // id: %101

bb7:                                              // Preds: bb4
  %102 = builtin "cmp_sge_Int64"(%27 : $Builtin.Int64, %91 : $Builtin.Int64) : $Builtin.Int1, scope 1288 // user: %103
  cond_fail %102 : $Builtin.Int1, scope 1288      // id: %103
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 2081 // id: %104
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":95:19, scope 2082 // id: %105
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 2084 // id: %106
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":75:19, scope 2086 // id: %107
  debug_value %0 : $AnyIterator<String>, scope 1301 // id: %108
  strong_retain %31 : $_EmptyArrayStorage, scope 1197 // id: %109
  br bb8(%27 : $Builtin.Int64), scope 1197        // id: %110

// %111                                           // user: %112
bb8(%111 : $Builtin.Int64):                       // Preds: bb22 bb7
  %112 = builtin "sadd_with_overflow_Int64"(%111 : $Builtin.Int64, %53 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1288 // user: %113
  %113 = tuple_extract %112 : $(Builtin.Int64, Builtin.Int1), 0, scope 1288 // users: %246, %240, %114
  debug_value %113 : $Builtin.Int64, scope 1288   // id: %114
  %115 = alloc_stack $Optional<String>, scope 1301 // users: %277, %279, %278
  checked_cast_br [exact] %3 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb25, bb26, scope 1301 // id: %116

bb9:                                              // Preds: bb26
  cond_fail %28 : $Builtin.Int1, loc "swift.swift":76:34, scope 1304 // id: %117
  unreachable, loc "swift.swift":76:34, scope 1304 // id: %118

bb10:                                             // Preds: bb26
  %119 = unchecked_enum_data %278 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 1304 // users: %141, %139, %120
  debug_value %119 : $String, let, name "x", loc "swift.swift":76:7, scope 1304 // id: %120
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 2088 // id: %121
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":68:19, scope 2090 // id: %122
  %123 = alloc_stack $Optional<String>, scope 1308 // users: %294, %296, %295
  debug_value %0 : $AnyIterator<String>, scope 1308 // id: %124
  checked_cast_br [exact] %3 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb27, bb28, scope 1308 // id: %125

bb11:                                             // Preds: bb28
  cond_fail %28 : $Builtin.Int1, loc "swift.swift":69:34, scope 1311 // id: %126
  unreachable, loc "swift.swift":69:34, scope 1311 // id: %127

bb12:                                             // Preds: bb28
  %128 = unchecked_enum_data %295 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 1311 // users: %131, %129
  debug_value %128 : $String, let, name "x", loc "swift.swift":69:7, scope 1311 // id: %129
  retain_value %295 : $Optional<String>, scope 1197 // id: %130
  %131 = apply %14(%128, %17, %15) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 1311 // users: %132, %138
  switch_enum %131 : $Optional<Int>, case #Optional.none!enumelt: bb13, case #Optional.some!enumelt.1: bb14, loc "swift.swift":70:16, scope 1311 // id: %132

bb13:                                             // Preds: bb12
  cond_fail %28 : $Builtin.Int1, loc "swift.swift":70:16, scope 1311 // id: %133
  unreachable, loc "swift.swift":70:16, scope 1311 // id: %134

bb14:                                             // Preds: bb12
  release_value %295 : $Optional<String>, scope 1197 // id: %135
  release_value %0 : $AnyIterator<String>, scope 1197 // id: %136
  release_value %0 : $AnyIterator<String>, scope 1197 // id: %137
  %138 = unchecked_enum_data %131 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 1311 // users: %141, %140
  debug_value %119 : $String, let, name "name", argno 1, loc "swift.swift":9:7, scope 1315 // id: %139
  debug_value %138 : $Int, let, name "age", argno 2, loc "swift.swift":9:21, scope 1315 // id: %140
  %141 = struct $Employee (%119 : $String, %138 : $Int), loc "swift.swift":88:44, scope 1297 // users: %239, %235, %209, %142
  debug_value %141 : $Employee, scope 1320        // id: %142
  debug_value_addr %1 : $*Array<Employee>, scope 1320 // id: %143
  debug_value_addr %1 : $*Array<Employee>, scope 1324 // id: %144
  %145 = struct_element_addr %1 : $*Array<Employee>, #Array._buffer, scope 1324 // users: %213, %148, %147, %146
  debug_value_addr %145 : $*_ArrayBuffer<Employee>, scope 1329 // id: %146
  debug_value_addr %145 : $*_ArrayBuffer<Employee>, scope 1335 // id: %147
  %148 = struct_element_addr %145 : $*_ArrayBuffer<Employee>, #_ArrayBuffer._storage, scope 1335 // users: %150, %149
  debug_value_addr %148 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, scope 1335 // id: %149
  %150 = struct_element_addr %148 : $*_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue, scope 1335 // users: %215, %227, %174, %156, %151
  %151 = unchecked_addr_cast %150 : $*Builtin.BridgeObject to $*Builtin.NativeObject, scope 1335 // user: %152
  %152 = is_unique %151 : $*Builtin.NativeObject, scope 1335 // user: %153
  %153 = builtin "int_expect_Int1"(%152 : $Builtin.Int1, %28 : $Builtin.Int1) : $Builtin.Int1, scope 1324 // user: %154
  cond_br %153, bb15, bb16, scope 1324            // id: %154

bb15:                                             // Preds: bb14
  br bb17, scope 1197                             // id: %155

bb16:                                             // Preds: bb14
  %156 = load %150 : $*Builtin.BridgeObject, scope 1324 // users: %159, %157
  %157 = unchecked_ref_cast %156 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1454 // user: %164
  %158 = builtin "onFastPath"() : $(), scope 1457
  %159 = ref_to_raw_pointer %156 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1460 // user: %162
  %160 = builtin "onFastPath"() : $(), scope 1463
  %161 = builtin "truncOrBitCast_Int64_Word"(%63 : $Builtin.Int64) : $Builtin.Word, scope 1457 // user: %162
  %162 = index_raw_pointer %159 : $Builtin.RawPointer, %161 : $Builtin.Word, scope 1457 // user: %163
  %163 = pointer_to_address %162 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1466 // user: %164
  %164 = mark_dependence %163 : $*_ArrayBody on %157 : $Builtin.NativeObject, scope 1466 // user: %165
  %165 = struct_element_addr %164 : $*_ArrayBody, #_ArrayBody._storage, scope 1466 // user: %166
  %166 = struct_element_addr %165 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1466 // user: %167
  %167 = struct_element_addr %166 : $*Int, #Int._value, scope 1466 // user: %168
  %168 = load %167 : $*Builtin.Int64, scope 1466  // user: %169
  %169 = builtin "assumeNonNegative_Int64"(%168 : $Builtin.Int64) : $Builtin.Int64, scope 1466 // user: %170
  %170 = struct $Int (%169 : $Builtin.Int64), scope 1466 // user: %172
  // function_ref specialized Array._copyToNewBuffer(oldCount : Int) -> ()
  %171 = function_ref @_TTSg5V4Main8Employee___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1324 // user: %172
  %172 = apply %171(%170, %1) : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1324
  br bb17, scope 1324                             // id: %173

bb17:                                             // Preds: bb15 bb16
  %174 = load %150 : $*Builtin.BridgeObject, scope 1320 // users: %175, %177
  %175 = unchecked_ref_cast %174 : $Builtin.BridgeObject to $Builtin.NativeObject, scope 1344 // user: %182
  %176 = builtin "onFastPath"() : $(), scope 1356
  %177 = ref_to_raw_pointer %174 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1364 // user: %180
  %178 = builtin "onFastPath"() : $(), scope 1371
  %179 = builtin "truncOrBitCast_Int64_Word"(%63 : $Builtin.Int64) : $Builtin.Word, scope 1356 // users: %220, %180
  %180 = index_raw_pointer %177 : $Builtin.RawPointer, %179 : $Builtin.Word, scope 1356 // user: %181
  %181 = pointer_to_address %180 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1374 // user: %182
  %182 = mark_dependence %181 : $*_ArrayBody on %175 : $Builtin.NativeObject, scope 1374 // user: %183
  %183 = struct_element_addr %182 : $*_ArrayBody, #_ArrayBody._storage, scope 1374 // users: %198, %184
  %184 = struct_element_addr %183 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1374 // user: %185
  %185 = struct_element_addr %184 : $*Int, #Int._value, scope 1374 // user: %186
  %186 = load %185 : $*Builtin.Int64, scope 1374  // user: %187
  %187 = builtin "assumeNonNegative_Int64"(%186 : $Builtin.Int64) : $Builtin.Int64, scope 1374 // users: %237, %192, %188
  %188 = struct $Int (%187 : $Builtin.Int64), scope 1374 // users: %211, %207, %191, %189
  debug_value %188 : $Int, scope 1320             // id: %189
  debug_value_addr %1 : $*Array<Employee>, scope 1378 // id: %190
  debug_value %188 : $Int, scope 1378             // id: %191
  %192 = builtin "sadd_with_overflow_Int64"(%187 : $Builtin.Int64, %53 : $Builtin.Int64, %28 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 1378 // users: %194, %193
  %193 = tuple_extract %192 : $(Builtin.Int64, Builtin.Int1), 0, scope 1378 // users: %212, %202
  %194 = tuple_extract %192 : $(Builtin.Int64, Builtin.Int1), 1, scope 1378 // user: %195
  cond_fail %194 : $Builtin.Int1, scope 1378      // id: %195
  %196 = builtin "onFastPath"() : $(), scope 1388
  %197 = builtin "onFastPath"() : $(), scope 1393
  %198 = struct_element_addr %183 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags, scope 1397 // user: %199
  %199 = struct_element_addr %198 : $*UInt, #UInt._value, scope 1397 // user: %200
  %200 = load %199 : $*Builtin.Int64, scope 1397  // user: %201
  %201 = builtin "lshr_Int64"(%200 : $Builtin.Int64, %53 : $Builtin.Int64) : $Builtin.Int64, scope 1397 // user: %202
  %202 = builtin "cmp_sgt_Int64"(%193 : $Builtin.Int64, %201 : $Builtin.Int64) : $Builtin.Int1, scope 1378 // user: %203
  %203 = builtin "int_expect_Int1"(%202 : $Builtin.Int1, %54 : $Builtin.Int1) : $Builtin.Int1, scope 1378 // user: %204
  cond_br %203, bb19, bb18, scope 1378            // id: %204

bb18:                                             // Preds: bb17
  br bb20, scope 1197                             // id: %205

bb19:                                             // Preds: bb17
  // function_ref specialized Array._copyToNewBuffer(oldCount : Int) -> ()
  %206 = function_ref @_TTSg5V4Main8Employee___TFSa16_copyToNewBufferfT8oldCountSi_T_ : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1378 // user: %207
  %207 = apply %206(%188, %1) : $@convention(method) (Int, @inout Array<Employee>) -> (), scope 1378
  br bb20, scope 1378                             // id: %208

bb20:                                             // Preds: bb18 bb19
  debug_value %141 : $Employee, scope 1401        // id: %209
  debug_value_addr %1 : $*Array<Employee>, scope 1401 // id: %210
  debug_value %188 : $Int, scope 1401             // id: %211
  %212 = struct $Int (%193 : $Builtin.Int64), scope 1401 // users: %226, %223, %216, %214
  debug_value_addr %145 : $*_ArrayBuffer<Employee>, scope 1406 // id: %213
  debug_value %212 : $Int, scope 1406             // id: %214
  %215 = load %150 : $*Builtin.BridgeObject, scope 1406 // user: %218
  debug_value %212 : $Int, scope 1412             // id: %216
  %217 = builtin "onFastPath"() : $(), scope 1418
  %218 = ref_to_raw_pointer %215 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1423 // user: %220
  %219 = builtin "onFastPath"() : $(), scope 1428
  %220 = index_raw_pointer %218 : $Builtin.RawPointer, %179 : $Builtin.Word, scope 1418 // user: %221
  %221 = pointer_to_address %220 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 1412 // users: %224, %222
  debug_value_addr %221 : $*_ArrayBody, scope 1412 // id: %222
  debug_value %212 : $Int, scope 1412             // id: %223
  %224 = struct_element_addr %221 : $*_ArrayBody, #_ArrayBody._storage, scope 1412 // user: %225
  %225 = struct_element_addr %224 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 1412 // user: %226
  store %212 to %225 : $*Int, scope 1412          // id: %226
  %227 = load %150 : $*Builtin.BridgeObject, scope 1401 // users: %241, %229
  %228 = builtin "onFastPath"() : $(), scope 1432
  %229 = ref_to_raw_pointer %227 : $Builtin.BridgeObject to $Builtin.RawPointer, scope 1439 // user: %234
  %230 = builtin "onFastPath"() : $(), scope 1442
  %231 = builtin "onFastPath"() : $(), scope 1445
  %232 = tuple_extract %85 : $(Builtin.Int64, Builtin.Int1), 0, scope 1442 // user: %233
  %233 = builtin "truncOrBitCast_Int64_Word"(%232 : $Builtin.Int64) : $Builtin.Word, scope 1432 // user: %234
  %234 = index_raw_pointer %229 : $Builtin.RawPointer, %233 : $Builtin.Word, scope 1432 // user: %236
  debug_value %141 : $Employee, scope 1450        // id: %235
  %236 = pointer_to_address %234 : $Builtin.RawPointer to [strict] $*Employee, scope 1450 // user: %238
  %237 = builtin "truncOrBitCast_Int64_Word"(%187 : $Builtin.Int64) : $Builtin.Word, scope 1450 // user: %238
  %238 = index_addr %236 : $*Employee, %237 : $Builtin.Word, scope 1450 // user: %239
  store %141 to %238 : $*Employee, scope 1450     // id: %239
  %240 = builtin "cmp_eq_Int64"(%113 : $Builtin.Int64, %91 : $Builtin.Int64) : $Builtin.Int1, scope 1268 // user: %244
  %241 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%227 : $Builtin.BridgeObject), scope 1197 // user: %242
  %242 = struct $_ArrayBuffer<Employee> (%241 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 1197 // user: %243
  %243 = struct $Array<Employee> (%242 : $_ArrayBuffer<Employee>), scope 1197 // user: %245
  cond_br %240, bb21, bb22, scope 1270            // id: %244

bb21:                                             // Preds: bb20
  br bb6(%243 : $Array<Employee>), scope 1197     // id: %245

bb22:                                             // Preds: bb20
  br bb8(%113 : $Builtin.Int64), scope 1197       // id: %246

bb23(%247 : $_AnyIteratorBoxBase<String>):        // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %248 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 2092 // user: %256
  %249 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 2092 // user: %251
  %250 = integer_literal $Builtin.Word, 181, scope 2092 // user: %253
  %251 = builtin "ptrtoint_Word"(%249 : $Builtin.RawPointer) : $Builtin.Word, scope 2092 // user: %253
  %252 = integer_literal $Builtin.Int8, 2, scope 2092 // user: %253
  %253 = struct $StaticString (%251 : $Builtin.Word, %250 : $Builtin.Word, %252 : $Builtin.Int8), scope 2092 // user: %256
  %254 = integer_literal $Builtin.Int64, 119, scope 2092 // user: %255
  %255 = struct $UInt (%254 : $Builtin.Int64), scope 2092 // user: %256
  %256 = apply %248(%253, %255) : $@convention(thin) (StaticString, UInt) -> Never, scope 2092
  unreachable, scope 2092                         // id: %257

bb24:                                             // Preds: bb0
  %258 = class_method %3 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1207 // users: %294, %277, %259
  %259 = apply %258<String>(%6, %3) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1207
  %260 = load %6 : $*Optional<String>, scope 1207 // users: %24, %18, %262, %12
  dealloc_stack %6 : $*Optional<String>, scope 1207 // id: %261
  switch_enum %260 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":69:34, scope 1209 // id: %262

bb25(%263 : $_AnyIteratorBoxBase<String>):        // Preds: bb8
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %264 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 2094 // user: %274
  %265 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 2094 // user: %267
  %266 = integer_literal $Builtin.Word, 181, scope 2094 // user: %269
  %267 = builtin "ptrtoint_Word"(%265 : $Builtin.RawPointer) : $Builtin.Word, scope 2094 // user: %269
  %268 = integer_literal $Builtin.Int8, 2, scope 2094 // user: %269
  %269 = struct $StaticString (%267 : $Builtin.Word, %266 : $Builtin.Word, %268 : $Builtin.Int8), scope 2094 // user: %274
  %270 = integer_literal $Builtin.Int64, 119, scope 2094 // user: %271
  %271 = struct $UInt (%270 : $Builtin.Int64), scope 2094 // user: %274
  retain_value %0 : $AnyIterator<String>, scope 1197 // id: %272
  retain_value %0 : $AnyIterator<String>, scope 1197 // id: %273
  %274 = apply %264(%269, %271) : $@convention(thin) (StaticString, UInt) -> Never, scope 2094
  unreachable, scope 2094                         // id: %275

bb26:                                             // Preds: bb8
  retain_value %0 : $AnyIterator<String>, scope 1197 // id: %276
  %277 = apply %258<String>(%115, %3) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1301
  %278 = load %115 : $*Optional<String>, scope 1301 // users: %280, %119
  dealloc_stack %115 : $*Optional<String>, scope 1301 // id: %279
  switch_enum %278 : $Optional<String>, case #Optional.none!enumelt: bb9, case #Optional.some!enumelt.1: bb10, loc "swift.swift":76:34, scope 1304 // id: %280

bb27(%281 : $_AnyIteratorBoxBase<String>):        // Preds: bb10
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %282 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 2096 // user: %291
  %283 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 2096 // user: %285
  %284 = integer_literal $Builtin.Word, 181, scope 2096 // user: %287
  %285 = builtin "ptrtoint_Word"(%283 : $Builtin.RawPointer) : $Builtin.Word, scope 2096 // user: %287
  %286 = integer_literal $Builtin.Int8, 2, scope 2096 // user: %287
  %287 = struct $StaticString (%285 : $Builtin.Word, %284 : $Builtin.Word, %286 : $Builtin.Int8), scope 2096 // user: %291
  %288 = integer_literal $Builtin.Int64, 119, scope 2096 // user: %289
  %289 = struct $UInt (%288 : $Builtin.Int64), scope 2096 // user: %291
  retain_value %0 : $AnyIterator<String>, scope 1197 // id: %290
  %291 = apply %282(%287, %289) : $@convention(thin) (StaticString, UInt) -> Never, scope 2096
  unreachable, scope 2096                         // id: %292

bb28:                                             // Preds: bb10
  retain_value %0 : $AnyIterator<String>, scope 1197 // id: %293
  %294 = apply %258<String>(%123, %3) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 1308
  %295 = load %123 : $*Optional<String>, scope 1308 // users: %135, %130, %297, %128
  dealloc_stack %123 : $*Optional<String>, scope 1308 // id: %296
  switch_enum %295 : $Optional<String>, case #Optional.none!enumelt: bb11, case #Optional.some!enumelt.1: bb12, loc "swift.swift":69:34, scope 1311 // id: %297
}

sil_scope 2097 { loc "swift.swift":14:29 parent @_TTSf4s___TFV4Main8Employeeg11descriptionSS : $@convention(thin) (@guaranteed String, Int) -> @owned String }
sil_scope 2098 { loc "swift.swift":16:5 parent 2097 }
sil_scope 2099 { loc "swift.swift":15:16 parent 2098 }
sil_scope 2100 {  parent 26 inlined_at 2099 }
sil_scope 2101 {  parent 32 inlined_at 2099 }
sil_scope 2102 {  parent 37 inlined_at 2099 }
sil_scope 2103 {  parent 43 inlined_at 2099 }
sil_scope 2104 {  parent 48 inlined_at 2099 }
sil_scope 2105 {  parent 2100 }
sil_scope 2106 {  parent 50 inlined_at 2105 }
sil_scope 2107 {  parent 55 inlined_at 2105 }
sil_scope 2108 {  parent 60 inlined_at 2105 }
sil_scope 2109 {  parent 66 inlined_at 2105 }
sil_scope 2110 {  parent 73 inlined_at 2105 }
sil_scope 2111 {  parent 79 inlined_at 2105 }
sil_scope 2112 {  parent 85 inlined_at 2105 }
sil_scope 2113 {  parent 89 inlined_at 2105 }
sil_scope 2114 {  parent 93 inlined_at 2105 }
sil_scope 2115 {  parent 100 inlined_at 2105 }
sil_scope 2116 {  parent 105 inlined_at 2105 }
sil_scope 2117 {  parent 109 inlined_at 2105 }
sil_scope 2118 { loc "swift.swift":15:16 parent 2098 }
sil_scope 2119 {  parent 112 inlined_at 2118 }
sil_scope 2120 {  parent 2119 }
sil_scope 2121 {  parent 111 inlined_at 2120 }
sil_scope 2122 { loc "swift.swift":15:16 parent 2098 }
sil_scope 2123 {  parent 117 inlined_at 2122 }
sil_scope 2124 { loc "swift.swift":15:29 parent 2098 }
sil_scope 2125 {  parent 117 inlined_at 2124 }
sil_scope 2126 { loc "swift.swift":15:30 parent 2098 }
sil_scope 2127 {  parent 112 inlined_at 2126 }
sil_scope 2128 {  parent 2127 }
sil_scope 2129 {  parent 111 inlined_at 2128 }
sil_scope 2130 { loc "swift.swift":15:30 parent 2098 }
sil_scope 2131 {  parent 117 inlined_at 2130 }
sil_scope 2132 {  parent @_TFSSCfT26stringInterpolationSegmentSi_SS : $@convention(method) (Int, @thin String.Type) -> @owned String }
sil_scope 2133 { loc "swift.swift":15:41 parent 2098 }
sil_scope 2134 {  parent 2132 inlined_at 2133 }
sil_scope 2135 { loc "swift.swift":15:42 parent 2098 }
sil_scope 2136 {  parent 112 inlined_at 2135 }
sil_scope 2137 {  parent 2136 }
sil_scope 2138 {  parent 111 inlined_at 2137 }
sil_scope 2139 { loc "swift.swift":15:42 parent 2098 }
sil_scope 2140 {  parent 117 inlined_at 2139 }
sil_scope 2141 { loc "swift.swift":15:42 parent 2098 }
sil_scope 2142 {  parent 133 inlined_at 2141 }
sil_scope 2143 {  parent 2097 }
sil_scope 2144 {  parent 136 inlined_at 2143 }
sil_scope 2145 {  parent 141 inlined_at 2143 }
sil_scope 2146 {  parent 149 inlined_at 2143 }
sil_scope 2147 {  parent 154 inlined_at 2143 }
sil_scope 2148 {  parent 163 inlined_at 2143 }
sil_scope 2149 {  parent 173 inlined_at 2143 }
sil_scope 2150 {  parent 177 inlined_at 2143 }
sil_scope 2151 {  parent 182 inlined_at 2143 }
sil_scope 2152 {  parent 187 inlined_at 2143 }
sil_scope 2153 {  parent 192 inlined_at 2143 }
sil_scope 2154 {  parent 196 inlined_at 2143 }
sil_scope 2155 {  parent 200 inlined_at 2143 }
sil_scope 2156 {  parent 203 inlined_at 2143 }
sil_scope 2157 {  parent 207 inlined_at 2143 }

// specialized Employee.description.getter
sil hidden @_TTSf4s___TFV4Main8Employeeg11descriptionSS : $@convention(thin) (@guaranteed String, Int) -> @owned String {
// %0                                             // users: %191, %135
// %1                                             // user: %154
bb0(%0 : $String, %1 : $Int):
  %2 = integer_literal $Builtin.Int64, 5, scope 2100 // users: %3, %60
  %3 = struct $Int (%2 : $Builtin.Int64), scope 2100 // users: %100, %97, %96, %90, %89, %88, %87, %8, %4
  debug_value %3 : $Int, scope 2100               // id: %4
  %5 = metatype $@thick _ContiguousArrayStorage<String>.Type, scope 2100 // user: %6
  %6 = init_existential_metatype %5 : $@thick _ContiguousArrayStorage<String>.Type, $@thick AnyObject.Type, scope 2100 // users: %84, %7
  debug_value %6 : $@thick AnyObject.Type, scope 2101 // id: %7
  debug_value %3 : $Int, scope 2101               // id: %8
  %9 = integer_literal $Builtin.Int1, -1, scope 2101 // users: %161, %141, %119, %64, %60, %44, %37, %18
  %10 = builtin "onFastPath"() : $(), scope 2102
  %11 = builtin "onFastPath"() : $(), scope 2103
  %12 = metatype $@thick HeapObject.Type, scope 2103 // users: %74, %13
  %13 = builtin "sizeof"<HeapObject>(%12 : $@thick HeapObject.Type) : $Builtin.Word, scope 2103 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 2103 // user: %18
  %15 = metatype $@thick _ArrayBody.Type, scope 2103 // users: %35, %16
  %16 = builtin "alignof"<_ArrayBody>(%15 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 2103 // user: %17
  %17 = builtin "zextOrBitCast_Word_Int64"(%16 : $Builtin.Word) : $Builtin.Int64, scope 2103 // users: %202, %70, %26, %18
  %18 = builtin "uadd_with_overflow_Int64"(%14 : $Builtin.Int64, %17 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2103 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 2103 // user: %24
  %20 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 1, scope 2103 // user: %21
  cond_fail %20 : $Builtin.Int1, scope 2103       // id: %21
  %22 = integer_literal $Builtin.Int64, 1, scope 2103 // users: %166, %80, %50, %48, %26, %24
  %23 = integer_literal $Builtin.Int1, 0, scope 2103 // users: %80, %50, %48, %26, %24
  %24 = builtin "usub_with_overflow_Int64"(%19 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2103 // user: %25
  %25 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 0, scope 2103 // user: %30
  %26 = builtin "usub_with_overflow_Int64"(%17 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2103 // user: %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 2103 // user: %29
  %28 = integer_literal $Builtin.Int64, -1, scope 2103 // users: %52, %29
  %29 = builtin "xor_Int64"(%27 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 2103 // user: %30
  %30 = builtin "and_Int64"(%25 : $Builtin.Int64, %29 : $Builtin.Int64) : $Builtin.Int64, scope 2103 // user: %31
  %31 = builtin "u_to_s_checked_conversion_Int64"(%30 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 2103 // users: %33, %32
  %32 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 0, scope 2103 // users: %94, %37
  %33 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 1, scope 2103 // user: %34
  cond_fail %33 : $Builtin.Int1, scope 2103       // id: %34
  %35 = builtin "sizeof"<_ArrayBody>(%15 : $@thick _ArrayBody.Type) : $Builtin.Word, scope 2102 // user: %36
  %36 = builtin "zextOrBitCast_Word_Int64"(%35 : $Builtin.Word) : $Builtin.Int64, scope 2102 // user: %37
  %37 = builtin "sadd_with_overflow_Int64"(%32 : $Builtin.Int64, %36 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2102 // users: %39, %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 2102 // user: %44
  %39 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 1, scope 2102 // user: %40
  cond_fail %39 : $Builtin.Int1, scope 2102       // id: %40
  %41 = metatype $@thick String.Type, scope 2102  // users: %192, %58, %42
  %42 = builtin "alignof"<String>(%41 : $@thick String.Type) : $Builtin.Word, scope 2102 // user: %43
  %43 = builtin "zextOrBitCast_Word_Int64"(%42 : $Builtin.Word) : $Builtin.Int64, scope 2102 // users: %72, %70, %50, %44
  %44 = builtin "uadd_with_overflow_Int64"(%38 : $Builtin.Int64, %43 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2102 // users: %46, %45
  %45 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 0, scope 2102 // user: %48
  %46 = tuple_extract %44 : $(Builtin.Int64, Builtin.Int1), 1, scope 2102 // user: %47
  cond_fail %46 : $Builtin.Int1, scope 2102       // id: %47
  %48 = builtin "usub_with_overflow_Int64"(%45 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2102 // user: %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, scope 2102 // user: %53
  %50 = builtin "usub_with_overflow_Int64"(%43 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2102 // user: %51
  %51 = tuple_extract %50 : $(Builtin.Int64, Builtin.Int1), 0, scope 2102 // user: %52
  %52 = builtin "xor_Int64"(%51 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 2102 // user: %53
  %53 = builtin "and_Int64"(%49 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int64, scope 2102 // user: %54
  %54 = builtin "u_to_s_checked_conversion_Int64"(%53 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 2102 // users: %56, %55
  %55 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 0, scope 2102 // users: %113, %64
  %56 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 1, scope 2102 // user: %57
  cond_fail %56 : $Builtin.Int1, scope 2102       // id: %57
  %58 = builtin "strideof_nonzero"<String>(%41 : $@thick String.Type) : $Builtin.Word, scope 2101 // user: %59
  %59 = builtin "zextOrBitCast_Word_Int64"(%58 : $Builtin.Word) : $Builtin.Int64, scope 2101 // user: %60
  %60 = builtin "smul_with_overflow_Int64"(%2 : $Builtin.Int64, %59 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2101 // users: %62, %61
  %61 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 0, scope 2101 // user: %64
  %62 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 1, scope 2101 // user: %63
  cond_fail %62 : $Builtin.Int1, scope 2101       // id: %63
  %64 = builtin "sadd_with_overflow_Int64"(%55 : $Builtin.Int64, %61 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2101 // users: %66, %65
  %65 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 0, scope 2101 // user: %68
  %66 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 1, scope 2101 // user: %67
  cond_fail %66 : $Builtin.Int1, scope 2101       // id: %67
  %68 = struct $Int (%65 : $Builtin.Int64), scope 2101 // users: %84, %69
  debug_value %68 : $Int, scope 2101              // id: %69
  %70 = builtin "cmp_sge_Int64"(%43 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int1, scope 2104 // user: %71
  cond_br %70, bb1, bb6, scope 2104               // id: %71

bb1:                                              // Preds: bb0
  br bb2(%43 : $Builtin.Int64), scope 2104        // id: %72

// %73                                            // users: %78, %76
bb2(%73 : $Builtin.Int64):                        // Preds: bb6 bb1
  %74 = builtin "alignof"<HeapObject>(%12 : $@thick HeapObject.Type) : $Builtin.Word, scope 2104 // user: %75
  %75 = builtin "zextOrBitCast_Word_Int64"(%74 : $Builtin.Word) : $Builtin.Int64, scope 2104 // users: %201, %76
  %76 = builtin "cmp_sge_Int64"(%73 : $Builtin.Int64, %75 : $Builtin.Int64) : $Builtin.Int1, scope 2104 // user: %77
  cond_br %76, bb3, bb5, scope 2104               // id: %77

bb3:                                              // Preds: bb2
  br bb4(%73 : $Builtin.Int64), scope 2104        // id: %78

// %79                                            // user: %80
bb4(%79 : $Builtin.Int64):                        // Preds: bb5 bb3
  %80 = builtin "ssub_with_overflow_Int64"(%79 : $Builtin.Int64, %22 : $Builtin.Int64, %23 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 2104 // user: %81
  %81 = tuple_extract %80 : $(Builtin.Int64, Builtin.Int1), 0, scope 2104 // user: %82
  %82 = struct $Int (%81 : $Builtin.Int64), scope 2104 // user: %84
  // function_ref swift_bufferAllocateOnStack
  %83 = function_ref @swift_bufferAllocateOnStack : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 2097 // user: %84
  %84 = apply %83(%6, %68, %82) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 2101 // users: %174, %199, %105, %92, %86, %85
  debug_value %84 : $AnyObject, scope 2101        // id: %85
  debug_value %84 : $AnyObject, scope 2106        // id: %86
  debug_value %3 : $Int, scope 2106               // id: %87
  debug_value %3 : $Int, scope 2107               // id: %88
  debug_value %3 : $Int, scope 2108               // id: %89
  debug_value %3 : $Int, scope 2108               // id: %90
  %91 = builtin "onFastPath"() : $(), scope 2109
  %92 = ref_to_raw_pointer %84 : $AnyObject to $Builtin.RawPointer, scope 2110 // users: %114, %95
  %93 = builtin "onFastPath"() : $(), scope 2111
  %94 = builtin "truncOrBitCast_Int64_Word"(%32 : $Builtin.Int64) : $Builtin.Word, scope 2109 // user: %95
  %95 = index_raw_pointer %92 : $Builtin.RawPointer, %94 : $Builtin.Word, scope 2109 // user: %103
  debug_value %3 : $Int, scope 2108               // id: %96
  debug_value %3 : $Int, scope 2108               // id: %97
  %98 = integer_literal $Builtin.Int64, 10, scope 2108 // user: %99
  %99 = struct $UInt (%98 : $Builtin.Int64), scope 2108 // user: %100
  %100 = struct $_SwiftArrayBodyStorage (%3 : $Int, %99 : $UInt), scope 2108 // user: %101
  %101 = struct $_ArrayBody (%100 : $_SwiftArrayBodyStorage), scope 2108 // users: %104, %102
  debug_value %101 : $_ArrayBody, scope 2112      // id: %102
  %103 = pointer_to_address %95 : $Builtin.RawPointer to [strict] $*_ArrayBody, scope 2112 // users: %185, %104
  store %101 to %103 : $*_ArrayBody, scope 2112   // id: %104
  %105 = unchecked_ref_cast %84 : $AnyObject to $Builtin.BridgeObject, scope 2107 // user: %106
  %106 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%105 : $Builtin.BridgeObject), scope 2113 // user: %107
  %107 = struct $_ArrayBuffer<String> (%106 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>), scope 2113 // users: %109, %108
  debug_value %107 : $_ArrayBuffer<String>, scope 2114 // id: %108
  %109 = struct $Array<String> (%107 : $_ArrayBuffer<String>), scope 2114 // users: %115, %173
  %110 = builtin "onFastPath"() : $(), scope 2115
  %111 = builtin "onFastPath"() : $(), scope 2116
  %112 = builtin "onFastPath"() : $(), scope 2117
  %113 = builtin "truncOrBitCast_Int64_Word"(%55 : $Builtin.Int64) : $Builtin.Word, scope 2115 // user: %114
  %114 = index_raw_pointer %92 : $Builtin.RawPointer, %113 : $Builtin.Word, scope 2115 // users: %192, %116
  debug_value %109 : $Array<String>, scope 2100   // id: %115
  %116 = pointer_to_address %114 : $Builtin.RawPointer to [strict] $*String, loc "swift.swift":15:16, scope 2098 // users: %157, %152, %138, %134, %132
  %117 = string_literal utf8 "(name=", loc "swift.swift":15:16, scope 2098 // users: %120, %118
  debug_value %117 : $Builtin.RawPointer, scope 2121 // id: %118
  debug_value %9 : $Builtin.Int1, scope 2121      // id: %119
  %120 = struct $UnsafeMutableRawPointer (%117 : $Builtin.RawPointer), scope 2121 // user: %121
  %121 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %120 : $UnsafeMutableRawPointer, scope 2121 // users: %127, %123
  %122 = enum $Optional<AnyObject>, #Optional.none!enumelt, scope 2121 // users: %165, %167, %145, %146, %127, %124
  debug_value %121 : $Optional<UnsafeMutableRawPointer>, scope 2121 // id: %123
  debug_value %122 : $Optional<AnyObject>, scope 2121 // id: %124
  %125 = integer_literal $Builtin.Int64, 6, scope 2121 // user: %126
  %126 = struct $UInt (%125 : $Builtin.Int64), scope 2121 // users: %146, %127
  %127 = struct $_StringCore (%121 : $Optional<UnsafeMutableRawPointer>, %126 : $UInt, %122 : $Optional<AnyObject>), scope 2121 // user: %128
  %128 = struct $String (%127 : $_StringCore), scope 2121 // users: %129, %131
  debug_value %128 : $String, scope 2123          // id: %129
  // function_ref specialized _toStringReadOnlyStreamable<A where ...> (A) -> String
  %130 = function_ref @_TTSgq5SSSSs20TextOutputStreamables___TFs27_toStringReadOnlyStreamableuRxs20TextOutputStreamablerFxSS : $@convention(thin) (@owned String) -> @owned String, scope 2123 // users: %170, %149, %135, %131
  %131 = apply %130(%128) : $@convention(thin) (@owned String) -> @owned String, scope 2123 // user: %132
  store %131 to %116 : $*String, loc "swift.swift":15:16, scope 2098 // id: %132
  %133 = integer_literal $Builtin.Word, 1, loc "swift.swift":15:29, scope 2098 // users: %160, %134
  %134 = index_addr %116 : $*String, %133 : $Builtin.Word, loc "swift.swift":15:29, scope 2098 // user: %136
  %135 = apply %130(%0) : $@convention(thin) (@owned String) -> @owned String, scope 2125 // user: %136
  store %135 to %134 : $*String, loc "swift.swift":15:29, scope 2098 // id: %136
  %137 = integer_literal $Builtin.Word, 2, loc "swift.swift":15:30, scope 2098 // user: %138
  %138 = index_addr %116 : $*String, %137 : $Builtin.Word, loc "swift.swift":15:30, scope 2098 // user: %150
  %139 = string_literal utf8 ", age=", loc "swift.swift":15:30, scope 2098 // users: %142, %140
  debug_value %139 : $Builtin.RawPointer, scope 2129 // id: %140
  debug_value %9 : $Builtin.Int1, scope 2129      // id: %141
  %142 = struct $UnsafeMutableRawPointer (%139 : $Builtin.RawPointer), scope 2129 // user: %143
  %143 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %142 : $UnsafeMutableRawPointer, scope 2129 // users: %146, %144
  debug_value %143 : $Optional<UnsafeMutableRawPointer>, scope 2129 // id: %144
  debug_value %122 : $Optional<AnyObject>, scope 2129 // id: %145
  %146 = struct $_StringCore (%143 : $Optional<UnsafeMutableRawPointer>, %126 : $UInt, %122 : $Optional<AnyObject>), scope 2129 // user: %147
  %147 = struct $String (%146 : $_StringCore), scope 2129 // users: %148, %149
  debug_value %147 : $String, scope 2131          // id: %148
  %149 = apply %130(%147) : $@convention(thin) (@owned String) -> @owned String, scope 2131 // user: %150
  store %149 to %138 : $*String, loc "swift.swift":15:30, scope 2098 // id: %150
  %151 = integer_literal $Builtin.Word, 3, loc "swift.swift":15:41, scope 2098 // user: %152
  %152 = index_addr %116 : $*String, %151 : $Builtin.Word, loc "swift.swift":15:41, scope 2098 // user: %155
  // function_ref specialized _toStringReadOnlyPrintable<A where ...> (A) -> String
  %153 = function_ref @_TTSgq5SiSis23CustomStringConvertibles___TFs26_toStringReadOnlyPrintableuRxs23CustomStringConvertiblerFxSS : $@convention(thin) (Int) -> @owned String, scope 2134 // user: %154
  %154 = apply %153(%1) : $@convention(thin) (Int) -> @owned String, scope 2134 // user: %155
  store %154 to %152 : $*String, loc "swift.swift":15:41, scope 2098 // id: %155
  %156 = integer_literal $Builtin.Word, 4, loc "swift.swift":15:42, scope 2098 // user: %157
  %157 = index_addr %116 : $*String, %156 : $Builtin.Word, loc "swift.swift":15:42, scope 2098 // user: %171
  %158 = string_literal utf8 ")", loc "swift.swift":15:42, scope 2098 // users: %162, %159
  debug_value %158 : $Builtin.RawPointer, scope 2138 // id: %159
  debug_value %133 : $Builtin.Word, scope 2138    // id: %160
  debug_value %9 : $Builtin.Int1, scope 2138      // id: %161
  %162 = struct $UnsafeMutableRawPointer (%158 : $Builtin.RawPointer), scope 2138 // user: %163
  %163 = enum $Optional<UnsafeMutableRawPointer>, #Optional.some!enumelt.1, %162 : $UnsafeMutableRawPointer, scope 2138 // users: %167, %164
  debug_value %163 : $Optional<UnsafeMutableRawPointer>, scope 2138 // id: %164
  debug_value %122 : $Optional<AnyObject>, scope 2138 // id: %165
  %166 = struct $UInt (%22 : $Builtin.Int64), scope 2138 // user: %167
  %167 = struct $_StringCore (%163 : $Optional<UnsafeMutableRawPointer>, %166 : $UInt, %122 : $Optional<AnyObject>), scope 2138 // user: %168
  %168 = struct $String (%167 : $_StringCore), scope 2138 // users: %169, %170
  debug_value %168 : $String, scope 2140          // id: %169
  %170 = apply %130(%168) : $@convention(thin) (@owned String) -> @owned String, scope 2140 // user: %171
  store %170 to %157 : $*String, loc "swift.swift":15:42, scope 2098 // id: %171
  // function_ref specialized String.init(stringInterpolation : [String]...) -> String
  %172 = function_ref @_TTSfq4g_d___TFSSCft19stringInterpolationGSaSS__SS : $@convention(thin) (@guaranteed Array<String>) -> @owned String, scope 2142 // user: %173
  %173 = apply %172(%109) : $@convention(thin) (@guaranteed Array<String>) -> @owned String, scope 2142 // user: %200
  %174 = unchecked_ref_cast %84 : $AnyObject to $_ContiguousArrayStorage<String>, scope 2097 // users: %197, %196, %193, %182, %178, %177, %176, %175
  set_deallocating %174 : $_ContiguousArrayStorage<String>, scope 2097 // id: %175
  debug_value %174 : $_ContiguousArrayStorage<String>, scope 2144 // id: %176
  debug_value %174 : $_ContiguousArrayStorage<String>, scope 2145 // id: %177
  debug_value %174 : $_ContiguousArrayStorage<String>, scope 2146 // id: %178
  %179 = builtin "onFastPath"() : $(), scope 2147
  %180 = builtin "onFastPath"() : $(), scope 2148
  %181 = builtin "onFastPath"() : $(), scope 2149
  debug_value %174 : $_ContiguousArrayStorage<String>, scope 2150 // id: %182
  %183 = builtin "onFastPath"() : $(), scope 2151
  %184 = builtin "onFastPath"() : $(), scope 2152
  %185 = struct_element_addr %103 : $*_ArrayBody, #_ArrayBody._storage, scope 2145 // user: %186
  %186 = struct_element_addr %185 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count, scope 2145 // user: %187
  %187 = struct_element_addr %186 : $*Int, #Int._value, scope 2145 // user: %188
  %188 = load %187 : $*Builtin.Int64, scope 2145  // user: %189
  %189 = builtin "assumeNonNegative_Int64"(%188 : $Builtin.Int64) : $Builtin.Int64, scope 2145 // user: %190
  %190 = builtin "truncOrBitCast_Int64_Word"(%189 : $Builtin.Int64) : $Builtin.Word, scope 2153 // user: %192
  retain_value %0 : $String, scope 2097           // id: %191
  %192 = builtin "destroyArray"<String>(%41 : $@thick String.Type, %114 : $Builtin.RawPointer, %190 : $Builtin.Word) : $(), scope 2153
  debug_value %174 : $_ContiguousArrayStorage<String>, scope 2154 // id: %193
  %194 = builtin "onFastPath"() : $(), scope 2155
  %195 = builtin "onFastPath"() : $(), scope 2156
  debug_value %174 : $_ContiguousArrayStorage<String>, scope 2157 // id: %196
  dealloc_ref %174 : $_ContiguousArrayStorage<String>, scope 2144 // id: %197
  // function_ref swift_bufferDeallocateFromStack
  %198 = function_ref @swift_bufferDeallocateFromStack : $@convention(thin) (@guaranteed AnyObject) -> (), scope 2097 // user: %199
  %199 = apply %198(%84) : $@convention(thin) (@guaranteed AnyObject) -> (), scope 2097
  return %173 : $String, loc "swift.swift":15:9, scope 2098 // id: %200

bb5:                                              // Preds: bb2
  br bb4(%75 : $Builtin.Int64), scope 2104        // id: %201

bb6:                                              // Preds: bb0
  br bb2(%17 : $Builtin.Int64), scope 2104        // id: %202
}


// _TTSf4n_g__TFC4Main7Companyg4nameSS
sil hidden [transparent] @_TTSf4n_g__TFC4Main7Companyg4nameSS : $@convention(method) (@guaranteed Company) -> String {
// %0                                             // users: %2, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":20:6, scope 209 // id: %1
  %2 = ref_element_addr %0 : $Company, #Company.name, scope 215 // user: %3
  %3 = load %2 : $*String, scope 215              // user: %4
  return %3 : $String, loc "swift.swift":20:6, scope 215 // id: %4
}


// _TTSf4n_g__TFC4Main7Companyg9employeesGSaVS_8Employee_
sil hidden [transparent] @_TTSf4n_g__TFC4Main7Companyg9employeesGSaVS_8Employee_ : $@convention(method) (@guaranteed Company) -> Array<Employee> {
// %0                                             // users: %2, %1
bb0(%0 : $Company):
  debug_value %0 : $Company, let, name "self", argno 1, loc "swift.swift":21:6, scope 226 // id: %1
  %2 = ref_element_addr %0 : $Company, #Company.employees, scope 232 // user: %3
  %3 = load %2 : $*Array<Employee>, scope 232     // user: %4
  return %3 : $Array<Employee>, loc "swift.swift":21:6, scope 232 // id: %4
}

sil_scope 2158 { loc "swift.swift":95:14 parent @_TTSf4g_d___TZFV4Main8Employee4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Employee }
sil_scope 2159 { loc "swift.swift":100:2 parent 2158 }
sil_scope 2160 { loc "swift.swift":97:38 parent 2159 }
sil_scope 2161 { loc "swift.swift":47:6 parent 401 inlined_at 2160 }
sil_scope 2162 { loc "swift.swift":75:14 parent 406 inlined_at 2160 }
sil_scope 2163 {  parent 408 inlined_at 2160 }
sil_scope 2164 { loc "swift.swift":78:2 parent 410 inlined_at 2160 }
sil_scope 2165 { loc "swift.swift":98:37 parent 2159 }
sil_scope 2166 { loc "swift.swift":47:6 parent 304 inlined_at 2165 }
sil_scope 2167 { loc "swift.swift":68:14 parent 313 inlined_at 2165 }
sil_scope 2168 {  parent 320 inlined_at 2165 }
sil_scope 2169 { loc "swift.swift":71:2 parent 323 inlined_at 2165 }
sil_scope 2170 {  parent 329 inlined_at 2165 }
sil_scope 2171 { loc "swift.swift":99:4 parent 2159 }
sil_scope 2172 { loc "swift.swift":9:2 parent 2 inlined_at 2171 }
sil_scope 2173 { loc "swift.swift":12:2 parent 3 inlined_at 2171 }
sil_scope 2174 {  parent 2163 }
sil_scope 2175 {  parent 367 inlined_at 2174 }
sil_scope 2176 {  parent 2168 }
sil_scope 2177 {  parent 367 inlined_at 2176 }

// specialized static Employee.load(iterator : AnyIterator<String>) -> Employee
sil hidden @_TTSf4g_d___TZFV4Main8Employee4loadfT8iteratorGVs11AnyIteratorSS__S0_ : $@convention(thin) (@guaranteed AnyIterator<String>) -> @owned Employee {
// %0                                             // users: %11, %35, %50, %68, %71, %54, %17, %15, %14, %6, %4, %3, %2, %1
bb0(%0 : $AnyIterator<String>):
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":95:19, scope 2158 // id: %1
  %2 = struct_extract %0 : $AnyIterator<String>, #AnyIterator._box, loc "swift.swift":97:30, scope 2159 // users: %72, %18, %55, %7, %53
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 2161 // id: %3
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":75:19, scope 2162 // id: %4
  %5 = alloc_stack $Optional<String>, scope 2163  // users: %55, %57, %56
  debug_value %0 : $AnyIterator<String>, scope 2163 // id: %6
  checked_cast_br [exact] %2 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb7, bb8, scope 2163 // id: %7

bb1:                                              // Preds: bb8
  %8 = integer_literal $Builtin.Int1, -1, loc "swift.swift":76:34, scope 2164 // user: %9
  cond_fail %8 : $Builtin.Int1, loc "swift.swift":76:34, scope 2164 // id: %9
  unreachable, loc "swift.swift":76:34, scope 2164 // id: %10

bb2:                                              // Preds: bb8
  release_value %0 : $AnyIterator<String>, scope 2158 // id: %11
  %12 = unchecked_enum_data %56 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":76:34, scope 2164 // users: %37, %39, %13
  debug_value %12 : $String, let, name "x", loc "swift.swift":76:7, scope 2164 // id: %13
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":47:24, scope 2166 // id: %14
  debug_value %0 : $AnyIterator<String>, let, name "iterator", argno 1, loc "swift.swift":68:19, scope 2167 // id: %15
  %16 = alloc_stack $Optional<String>, scope 2168 // users: %72, %74, %73
  debug_value %0 : $AnyIterator<String>, scope 2168 // id: %17
  checked_cast_br [exact] %2 : $_AnyIteratorBoxBase<String> to $_AnyIteratorBoxBase<String>, bb9, bb10, scope 2168 // id: %18

bb3:                                              // Preds: bb10
  %19 = integer_literal $Builtin.Int1, -1, loc "swift.swift":69:34, scope 2169 // user: %20
  cond_fail %19 : $Builtin.Int1, loc "swift.swift":69:34, scope 2169 // id: %20
  unreachable, loc "swift.swift":69:34, scope 2169 // id: %21

bb4:                                              // Preds: bb10
  %22 = unchecked_enum_data %73 : $Optional<String>, #Optional.some!enumelt.1, loc "swift.swift":69:34, scope 2169 // users: %29, %23
  debug_value %22 : $String, let, name "x", loc "swift.swift":69:7, scope 2169 // id: %23
  // function_ref Int.init(String, radix : Int) -> Int?
  %24 = function_ref @_TFSiCfTSS5radixSi_GSqSi_ : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:10, scope 2169 // user: %29
  %25 = metatype $@thin Int.Type, loc "swift.swift":70:10, scope 2169 // user: %29
  %26 = integer_literal $Builtin.Int64, 10, scope 2170 // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64), scope 2170 // user: %29
  retain_value %73 : $Optional<String>, scope 2158 // id: %28
  %29 = apply %24(%22, %27, %25) : $@convention(method) (@owned String, Int, @thin Int.Type) -> Optional<Int>, loc "swift.swift":70:15, scope 2169 // users: %30, %36
  switch_enum %29 : $Optional<Int>, case #Optional.none!enumelt: bb5, case #Optional.some!enumelt.1: bb6, loc "swift.swift":70:16, scope 2169 // id: %30

bb5:                                              // Preds: bb4
  %31 = integer_literal $Builtin.Int1, -1, loc "swift.swift":70:16, scope 2169 // user: %32
  cond_fail %31 : $Builtin.Int1, loc "swift.swift":70:16, scope 2169 // id: %32
  unreachable, loc "swift.swift":70:16, scope 2169 // id: %33

bb6:                                              // Preds: bb4
  release_value %73 : $Optional<String>, scope 2158 // id: %34
  release_value %0 : $AnyIterator<String>, scope 2158 // id: %35
  %36 = unchecked_enum_data %29 : $Optional<Int>, #Optional.some!enumelt.1, loc "swift.swift":70:16, scope 2169 // users: %38, %39
  debug_value %12 : $String, let, name "name", argno 1, loc "swift.swift":9:7, scope 2172 // id: %37
  debug_value %36 : $Int, let, name "age", argno 2, loc "swift.swift":9:21, scope 2172 // id: %38
  %39 = struct $Employee (%12 : $String, %36 : $Int), loc "swift.swift":12:2, scope 2173 // user: %40
  return %39 : $Employee, loc "swift.swift":96:3, scope 2159 // id: %40

bb7(%41 : $_AnyIteratorBoxBase<String>):          // Preds: bb0
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %42 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 2175 // user: %51
  %43 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 2175 // user: %45
  %44 = integer_literal $Builtin.Word, 181, scope 2175 // user: %47
  %45 = builtin "ptrtoint_Word"(%43 : $Builtin.RawPointer) : $Builtin.Word, scope 2175 // user: %47
  %46 = integer_literal $Builtin.Int8, 2, scope 2175 // user: %47
  %47 = struct $StaticString (%45 : $Builtin.Word, %44 : $Builtin.Word, %46 : $Builtin.Int8), scope 2175 // user: %51
  %48 = integer_literal $Builtin.Int64, 119, scope 2175 // user: %49
  %49 = struct $UInt (%48 : $Builtin.Int64), scope 2175 // user: %51
  retain_value %0 : $AnyIterator<String>, scope 2158 // id: %50
  %51 = apply %42(%47, %49) : $@convention(thin) (StaticString, UInt) -> Never, scope 2175
  unreachable, scope 2175                         // id: %52

bb8:                                              // Preds: bb0
  %53 = class_method %2 : $_AnyIteratorBoxBase<String>, #_AnyIteratorBoxBase.next!1 : <Element> (_AnyIteratorBoxBase<Element>) -> () -> Element? , $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 2163 // users: %72, %55
  retain_value %0 : $AnyIterator<String>, scope 2158 // id: %54
  %55 = apply %53<String>(%5, %2) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 2163
  %56 = load %5 : $*Optional<String>, scope 2163  // users: %58, %12
  dealloc_stack %5 : $*Optional<String>, scope 2163 // id: %57
  switch_enum %56 : $Optional<String>, case #Optional.none!enumelt: bb1, case #Optional.some!enumelt.1: bb2, loc "swift.swift":76:34, scope 2164 // id: %58

bb9(%59 : $_AnyIteratorBoxBase<String>):          // Preds: bb2
  // function_ref _abstract(file : StaticString, line : UInt) -> Never
  %60 = function_ref @_TFs9_abstractFT4fileVs12StaticString4lineSu_Os5Never : $@convention(thin) (StaticString, UInt) -> Never, scope 2177 // user: %69
  %61 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.63~2/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift", scope 2177 // user: %63
  %62 = integer_literal $Builtin.Word, 181, scope 2177 // user: %65
  %63 = builtin "ptrtoint_Word"(%61 : $Builtin.RawPointer) : $Builtin.Word, scope 2177 // user: %65
  %64 = integer_literal $Builtin.Int8, 2, scope 2177 // user: %65
  %65 = struct $StaticString (%63 : $Builtin.Word, %62 : $Builtin.Word, %64 : $Builtin.Int8), scope 2177 // user: %69
  %66 = integer_literal $Builtin.Int64, 119, scope 2177 // user: %67
  %67 = struct $UInt (%66 : $Builtin.Int64), scope 2177 // user: %69
  retain_value %0 : $AnyIterator<String>, scope 2158 // id: %68
  %69 = apply %60(%65, %67) : $@convention(thin) (StaticString, UInt) -> Never, scope 2177
  unreachable, scope 2177                         // id: %70

bb10:                                             // Preds: bb2
  retain_value %0 : $AnyIterator<String>, scope 2158 // id: %71
  %72 = apply %53<String>(%16, %2) : $@convention(method) <τ_0_0> (@guaranteed _AnyIteratorBoxBase<τ_0_0>) -> @out Optional<τ_0_0>, scope 2168
  %73 = load %16 : $*Optional<String>, scope 2168 // users: %34, %28, %75, %22
  dealloc_stack %16 : $*Optional<String>, scope 2168 // id: %74
  switch_enum %73 : $Optional<String>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb4, loc "swift.swift":69:34, scope 2169 // id: %75
}

sil_vtable Company {
  #Company.init!initializer.1: _TFC4Main7CompanycfT4nameSS9employeesGSaVS_8Employee__S0_	// Company.init(name : String, employees : [Employee]) -> Company
  #Company.description!getter.1: _TFC4Main7Companyg11descriptionSS	// Company.description.getter
  #Company.deinit!deallocator: _TFC4Main7CompanyD	// Company.__deallocating_deinit
  #Company.name!getter.1: _TFC4Main7Companyg4nameSS	// Company.name.getter
  #Company.name!setter.1: _TFC4Main7Companys4nameSS	// Company.name.setter
  #Company.name!materializeForSet.1: _TFC4Main7Companym4nameSS	// Company.name.materializeForSet
  #Company.employees!getter.1: _TFC4Main7Companyg9employeesGSaVS_8Employee_	// Company.employees.getter
  #Company.employees!setter.1: _TFC4Main7Companys9employeesGSaVS_8Employee_	// Company.employees.setter
  #Company.employees!materializeForSet.1: _TFC4Main7Companym9employeesGSaVS_8Employee_	// Company.employees.materializeForSet
}

sil_vtable PaperCompany {
  #Company.init!initializer.1: _TFC4Main12PaperCompanycfT4nameSS9employeesGSaVS_8Employee__S0_	// PaperCompany.init(name : String, employees : [Employee]) -> PaperCompany
  #Company.description!getter.1: _TFC4Main7Companyg11descriptionSS	// Company.description.getter
  #Company.name!getter.1: _TFC4Main7Companyg4nameSS	// Company.name.getter
  #Company.name!setter.1: _TFC4Main7Companys4nameSS	// Company.name.setter
  #Company.name!materializeForSet.1: _TFC4Main7Companym4nameSS	// Company.name.materializeForSet
  #Company.employees!getter.1: _TFC4Main7Companyg9employeesGSaVS_8Employee_	// Company.employees.getter
  #Company.employees!setter.1: _TFC4Main7Companys9employeesGSaVS_8Employee_	// Company.employees.setter
  #Company.employees!materializeForSet.1: _TFC4Main7Companym9employeesGSaVS_8Employee_	// Company.employees.materializeForSet
  #PaperCompany.deinit!deallocator: _TFC4Main12PaperCompanyD	// PaperCompany.__deallocating_deinit
}

sil_vtable _ContiguousArrayStorage {
  #_SwiftNativeNSArray.init!initializer.1: _TFCs23_ContiguousArrayStoragecfT_GS_x_	// _ContiguousArrayStorage.init() -> _ContiguousArrayStorage<A>
  #_SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects!1: _TFCs27_ContiguousArrayStorageBase25withUnsafeBufferOfObjectsurfzFzGSRPs9AnyObject__xx	// _ContiguousArrayStorageBase.withUnsafeBufferOfObjects<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A
  #_ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer!1: _TFCs24_ContiguousArrayStorage132_withVerbatimBridgedUnsafeBufferurfzFzGSRPs9AnyObject__xGSqx_	// _ContiguousArrayStorage1._withVerbatimBridgedUnsafeBuffer<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A?
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedCount!1: _TFCs23_ContiguousArrayStorage27_getNonVerbatimBridgedCountfT_Si	// _ContiguousArrayStorage._getNonVerbatimBridgedCount() -> Int
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer!1: _TFCs23_ContiguousArrayStorage32_getNonVerbatimBridgedHeapBufferfT_GVs11_HeapBufferSiPs9AnyObject__	// _ContiguousArrayStorage._getNonVerbatimBridgedHeapBuffer() -> _HeapBuffer<Int, AnyObject>
  #_ContiguousArrayStorageBase.staticElementType!getter.1: _TFCs23_ContiguousArrayStorageg17staticElementTypePMP_	// _ContiguousArrayStorage.staticElementType.getter
  #_ContiguousArrayStorage1._withVerbatimBridgedUnsafeBufferImpl!1: _TFCs23_ContiguousArrayStorage36_withVerbatimBridgedUnsafeBufferImplfzFzGSRPs9AnyObject__T_T_	// _ContiguousArrayStorage._withVerbatimBridgedUnsafeBufferImpl((UnsafeBufferPointer<AnyObject>) throws -> ()) throws -> ()
  #_ContiguousArrayStorage.deinit!deallocator: _TFCs23_ContiguousArrayStorageD	// _ContiguousArrayStorage.__deallocating_deinit
}

sil_vtable _HeapBufferStorage {
  #_HeapBufferStorage.init!initializer.1: _TFCs18_HeapBufferStoragecfT_GS_xq__	// _HeapBufferStorage.init() -> _HeapBufferStorage<A, B>
  #_HeapBufferStorage.deinit!deallocator: _TFCs18_HeapBufferStorageD	// _HeapBufferStorage.__deallocating_deinit
}

sil_vtable _IteratorBox {
  #_AnyIteratorBoxBase.next!1: _TFCs12_IteratorBox4nextfT_GSqwx7Element_	// _IteratorBox.next() -> A.Element?
  #_IteratorBox.init!initializer.1: _TFCs12_IteratorBoxcfxGS_x_	// _IteratorBox.init(A) -> _IteratorBox<A>
  #_IteratorBox.deinit!deallocator: _TFCs12_IteratorBoxD	// _IteratorBox.__deallocating_deinit
}

sil_vtable _ContiguousArrayStorage1 {
  #_SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects!1: _TFCs27_ContiguousArrayStorageBase25withUnsafeBufferOfObjectsurfzFzGSRPs9AnyObject__xx	// _ContiguousArrayStorageBase.withUnsafeBufferOfObjects<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A
  #_ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer!1: _TFCs24_ContiguousArrayStorage132_withVerbatimBridgedUnsafeBufferurfzFzGSRPs9AnyObject__xGSqx_	// _ContiguousArrayStorage1._withVerbatimBridgedUnsafeBuffer<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A?
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedCount!1: _TFCs27_ContiguousArrayStorageBase27_getNonVerbatimBridgedCountfT_Si	// _ContiguousArrayStorageBase._getNonVerbatimBridgedCount() -> Int
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer!1: _TFCs27_ContiguousArrayStorageBase32_getNonVerbatimBridgedHeapBufferfT_GVs11_HeapBufferSiPs9AnyObject__	// _ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer() -> _HeapBuffer<Int, AnyObject>
  #_ContiguousArrayStorageBase.staticElementType!getter.1: _TFCs27_ContiguousArrayStorageBaseg17staticElementTypePMP_	// _ContiguousArrayStorageBase.staticElementType.getter
  #_ContiguousArrayStorage1._withVerbatimBridgedUnsafeBufferImpl!1: _TFCs24_ContiguousArrayStorage136_withVerbatimBridgedUnsafeBufferImplfzFzGSRPs9AnyObject__T_T_	// _ContiguousArrayStorage1._withVerbatimBridgedUnsafeBufferImpl((UnsafeBufferPointer<AnyObject>) throws -> ()) throws -> ()
  #_ContiguousArrayStorage1.deinit!deallocator: _TFCs24_ContiguousArrayStorage1D	// _ContiguousArrayStorage1.__deallocating_deinit
}

sil_vtable _ContiguousArrayStorageBase {
  #_SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects!1: _TFCs27_ContiguousArrayStorageBase25withUnsafeBufferOfObjectsurfzFzGSRPs9AnyObject__xx	// _ContiguousArrayStorageBase.withUnsafeBufferOfObjects<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A
  #_ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer!1: _TFCs27_ContiguousArrayStorageBase32_withVerbatimBridgedUnsafeBufferurfzFzGSRPs9AnyObject__xGSqx_	// _ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A?
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedCount!1: _TFCs27_ContiguousArrayStorageBase27_getNonVerbatimBridgedCountfT_Si	// _ContiguousArrayStorageBase._getNonVerbatimBridgedCount() -> Int
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer!1: _TFCs27_ContiguousArrayStorageBase32_getNonVerbatimBridgedHeapBufferfT_GVs11_HeapBufferSiPs9AnyObject__	// _ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer() -> _HeapBuffer<Int, AnyObject>
  #_ContiguousArrayStorageBase.staticElementType!getter.1: _TFCs27_ContiguousArrayStorageBaseg17staticElementTypePMP_	// _ContiguousArrayStorageBase.staticElementType.getter
  #_ContiguousArrayStorageBase.deinit!deallocator: _TFCs27_ContiguousArrayStorageBaseD	// _ContiguousArrayStorageBase.__deallocating_deinit
}

sil_vtable _SwiftNativeNSArrayWithContiguousStorage {
  #_SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects!1: _TFCs40_SwiftNativeNSArrayWithContiguousStorage25withUnsafeBufferOfObjectsurfzFzGSRPs9AnyObject__xx	// _SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects<A> ((UnsafeBufferPointer<AnyObject>) throws -> A) throws -> A
  #_SwiftNativeNSArrayWithContiguousStorage.deinit!deallocator: _TFCs40_SwiftNativeNSArrayWithContiguousStorageD	// _SwiftNativeNSArrayWithContiguousStorage.__deallocating_deinit
}

sil_vtable _SwiftNativeNSArray {
  #_SwiftNativeNSArray.deinit!deallocator: _TFCs19_SwiftNativeNSArrayD	// _SwiftNativeNSArray.__deallocating_deinit
}

sil_vtable _AnyIteratorBoxBase {
  #_AnyIteratorBoxBase.next!1: _TFCs19_AnyIteratorBoxBase4nextfT_GSqx_	// _AnyIteratorBoxBase.next() -> A?
  #_AnyIteratorBoxBase.init!initializer.1: _TFCs19_AnyIteratorBoxBasecfT_GS_x_	// _AnyIteratorBoxBase.init() -> _AnyIteratorBoxBase<A>
  #_AnyIteratorBoxBase.deinit!deallocator: _TFCs19_AnyIteratorBoxBaseD	// _AnyIteratorBoxBase.__deallocating_deinit
}

sil_witness_table Employee: CustomStringConvertible module Main {
  method #CustomStringConvertible.description!getter.1: @_TTWV4Main8Employees23CustomStringConvertibleS_FS1_g11descriptionSS	// protocol witness for CustomStringConvertible.description.getter in conformance Employee
}

sil_witness_table Company: CustomStringConvertible module Main {
  method #CustomStringConvertible.description!getter.1: @_TTWC4Main7Companys23CustomStringConvertibleS_FS1_g11descriptionSS	// protocol witness for CustomStringConvertible.description.getter in conformance Company
}

sil_witness_table hidden Int: Loadable module Main {
  associated_type Loaded: Int
  method #Loadable.load!1: @_TTWSi4Main8LoadableS_ZFS0_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded	// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance Int
}

sil_witness_table hidden String: Loadable module Main {
  associated_type Loaded: String
  method #Loadable.load!1: @_TTWSS4Main8LoadableS_ZFS0_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded	// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance String
}

sil_witness_table hidden Employee: Loadable module Main {
  associated_type Loaded: Employee
  method #Loadable.load!1: @_TTWV4Main8EmployeeS_8LoadableS_ZFS1_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded	// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance Employee
}

sil_witness_table hidden Company: Loadable module Main {
  associated_type Loaded: Company
  method #Loadable.load!1: @_TTWC4Main7CompanyS_8LoadableS_ZFS1_4loadfT8iteratorGVs11AnyIteratorSS__wx6Loaded	// protocol witness for static Loadable.load(iterator : AnyIterator<String>) -> A.Loaded in conformance Company
}

sil_witness_table _SwiftNativeNSArray: AnyObject module Swift

sil_witness_table <Value, Element> _HeapBufferStorage<Value, Element>: AnyObject module Swift

sil_witness_table public_external [fragile] Int: Comparable module Swift {
  base_protocol Equatable: Int: Equatable module Swift
  method #Comparable."<"!1: @_TTWSis10ComparablesZFS_oi1lfTxx_Sb	// protocol witness for static Comparable.< infix(A, A) -> Bool in conformance Int
  method #Comparable."<="!1: @_TTWSis10ComparablesZFS_oi2lefTxx_Sb	// protocol witness for static Comparable.<= infix(A, A) -> Bool in conformance Int
  method #Comparable.">="!1: @_TTWSis10ComparablesZFS_oi2gefTxx_Sb	// protocol witness for static Comparable.>= infix(A, A) -> Bool in conformance Int
  method #Comparable.">"!1: @_TTWSis10ComparablesZFS_oi1gfTxx_Sb	// protocol witness for static Comparable.> infix(A, A) -> Bool in conformance Int
}

sil_witness_table public_external [fragile] Int: Equatable module Swift {
  method #Equatable."=="!1: @_TTWSis9EquatablesZFS_oi2eefTxx_Sb	// protocol witness for static Equatable.== infix(A, A) -> Bool in conformance Int
}

sil_witness_table public_external [fragile] <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> CountableRange<Bound>: IndexableBase module Swift {
  associated_type Index: Bound
  associated_type_protocol (Index: Comparable): dependent
  method #IndexableBase.startIndex!getter.1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g10startIndexwx5Index	// protocol witness for IndexableBase.startIndex.getter in conformance <A where ...> CountableRange<A>
  method #IndexableBase.endIndex!getter.1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g8endIndexwx5Index	// protocol witness for IndexableBase.endIndex.getter in conformance <A where ...> CountableRange<A>
  associated_type _Element: Bound
  method #IndexableBase.subscript!getter.1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g9subscriptFwx5Indexwx8_Element	// protocol witness for IndexableBase.subscript.getter in conformance <A where ...> CountableRange<A>
  associated_type SubSequence: CountableRange<Bound>
  method #IndexableBase.subscript!getter.1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_g9subscriptFGVs5Rangewx5Index_wx11SubSequence	// protocol witness for IndexableBase.subscript.getter in conformance <A where ...> CountableRange<A>
  method #IndexableBase._failEarlyRangeCheck!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_20_failEarlyRangeCheckfTwx5Index6boundsGVs5RangewxS5___T_	// protocol witness for IndexableBase._failEarlyRangeCheck(A.Index, bounds : Range<A.Index>) -> () in conformance <A where ...> CountableRange<A>
  method #IndexableBase._failEarlyRangeCheck!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_20_failEarlyRangeCheckfTGVs5Rangewx5Index_6boundsGS5_wxS6___T_	// protocol witness for IndexableBase._failEarlyRangeCheck(Range<A.Index>, bounds : Range<A.Index>) -> () in conformance <A where ...> CountableRange<A>
  method #IndexableBase.index!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_5indexfT5afterwx5Index_wxS5_	// protocol witness for IndexableBase.index(after : A.Index) -> A.Index in conformance <A where ...> CountableRange<A>
  method #IndexableBase.formIndex!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s13IndexableBasesFS4_9formIndexfT5afterRwx5Index_T_	// protocol witness for IndexableBase.formIndex(after : inout A.Index) -> () in conformance <A where ...> CountableRange<A>
}

sil_witness_table public_external [fragile] Int: _Strideable module Swift {
  base_protocol Equatable: Int: Equatable module Swift
  associated_type Stride: Int
  associated_type_protocol (Stride: SignedNumber): Int: SignedNumber module Swift
  method #_Strideable.distance!1: @_TTWSis11_StrideablesFS_8distancefT2tox_wx6Stride	// protocol witness for _Strideable.distance(to : A) -> A.Stride in conformance Int
  method #_Strideable.advanced!1: @_TTWSis11_StrideablesFS_8advancedfT2bywx6Stride_x	// protocol witness for _Strideable.advanced(by : A.Stride) -> A in conformance Int
  method #_Strideable._step!1: @_TTWSis11_StrideablesZFS_5_stepfT5afterT5indexGSqSi_5valuex_4fromx2bywx6Stride_T5indexGSqSi_5valuex_	// protocol witness for static _Strideable._step(after : (index : Int?, value : A), from : A, by : A.Stride) -> (index : Int?, value : A) in conformance Int
  associated_type _DisabledRangeIndex: Int
}

sil_witness_table public_external [fragile] Int: _ExpressibleByBuiltinIntegerLiteral module Swift {
  method #_ExpressibleByBuiltinIntegerLiteral.init!allocator.1: @_TTWSis35_ExpressibleByBuiltinIntegerLiteralsFS_CfT22_builtinIntegerLiteralBi2048__x	// protocol witness for _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral : Builtin.Int2048) -> A in conformance Int
}

sil_witness_table public_external [fragile] <Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> CountableRange<Bound>: Sequence module Swift {
  associated_type Iterator: IndexingIterator<CountableRange<Bound>>
  associated_type_protocol (Iterator: IteratorProtocol): IndexingIterator<CountableRange<Bound>>: specialize <CountableRange<Bound>, Bound, CountableRange<Bound>, Bound> (<Elements where Elements : IndexableBase, Elements.Index : Comparable> IndexingIterator<Elements>: IteratorProtocol module Swift)
  associated_type SubSequence: CountableRange<Bound>
  method #Sequence.makeIterator!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_12makeIteratorfT_wx8Iterator	// protocol witness for Sequence.makeIterator() -> A.Iterator in conformance <A where ...> CountableRange<A>
  method #Sequence.underestimatedCount!getter.1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_g19underestimatedCountSi	// protocol witness for Sequence.underestimatedCount.getter in conformance <A where ...> CountableRange<A>
  method #Sequence.map!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_3mapurfzFzWx8Iterator7Element_qd__GSaqd___	// protocol witness for Sequence.map<A> ((A.Iterator.Element) throws -> A1) throws -> [A1] in conformance <A where ...> CountableRange<A>
  method #Sequence.filter!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_6filterfzFzWx8Iterator7Element_SbGSaWxS5_S6___	// protocol witness for Sequence.filter((A.Iterator.Element) throws -> Bool) throws -> [A.Iterator.Element] in conformance <A where ...> CountableRange<A>
  method #Sequence.forEach!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_7forEachfzFzWx8Iterator7Element_T_T_	// protocol witness for Sequence.forEach((A.Iterator.Element) throws -> ()) throws -> () in conformance <A where ...> CountableRange<A>
  method #Sequence.dropFirst!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_9dropFirstfSiwx11SubSequence	// protocol witness for Sequence.dropFirst(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
  method #Sequence.dropLast!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_8dropLastfSiwx11SubSequence	// protocol witness for Sequence.dropLast(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
  method #Sequence.prefix!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_6prefixfSiwx11SubSequence	// protocol witness for Sequence.prefix(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
  method #Sequence.suffix!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_6suffixfSiwx11SubSequence	// protocol witness for Sequence.suffix(Int) -> A.SubSequence in conformance <A where ...> CountableRange<A>
  method #Sequence.split!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_5splitfzT9maxSplitsSi25omittingEmptySubsequencesSb14whereSeparatorFzWx8Iterator7Element_Sb_GSawx11SubSequence_	// protocol witness for Sequence.split(maxSplits : Int, omittingEmptySubsequences : Bool, whereSeparator : (A.Iterator.Element) throws -> Bool) throws -> [A.SubSequence] in conformance <A where ...> CountableRange<A>
  method #Sequence._customContainsEquatableElement!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_31_customContainsEquatableElementfWx8Iterator7Element_GSqSb_	// protocol witness for Sequence._customContainsEquatableElement(A.Iterator.Element) -> Bool? in conformance <A where ...> CountableRange<A>
  method #Sequence._preprocessingPass!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_18_preprocessingPassurfzFzT_qd__GSqqd___	// protocol witness for Sequence._preprocessingPass<A> (() throws -> A1) throws -> A1? in conformance <A where ...> CountableRange<A>
  method #Sequence._copyToContiguousArray!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_22_copyToContiguousArrayfT_GVs15ContiguousArrayWx8Iterator7Element__	// protocol witness for Sequence._copyToContiguousArray() -> ContiguousArray<A.Iterator.Element> in conformance <A where ...> CountableRange<A>
  method #Sequence._copyContents!1: @_TTWuRxs10Comparablexs11_StrideablewxPS0_6Strides13SignedIntegerrGVs14CountableRangex_s8SequencesFS4_13_copyContentsfT12initializingGSpWx8Iterator7Element___GSpWxS5_S6___	// protocol witness for Sequence._copyContents(initializing : UnsafeMutablePointer<A.Iterator.Element>) -> UnsafeMutablePointer<A.Iterator.Element> in conformance <A where ...> CountableRange<A>
}

sil_witness_table public_external [fragile] <Elements where Elements : IndexableBase, Elements.Index : Comparable> IndexingIterator<Elements>: IteratorProtocol module Swift {
  associated_type Element: Elements._Element
  method #IteratorProtocol.next!1: @_TTWuRxs13IndexableBaserGVs16IndexingIteratorx_s16IteratorProtocolsFS1_4nextfT_GSqwx7Element_	// protocol witness for IteratorProtocol.next() -> A.Element? in conformance <A where ...> IndexingIterator<A>
}

sil_witness_table public_external [fragile] <Element> _ArrayBuffer<Element>: _ArrayBufferProtocol module Swift {
  base_protocol MutableCollection: <Element> _ArrayBuffer<Element>: MutableCollection module Swift
  base_protocol RandomAccessCollection: <Element> _ArrayBuffer<Element>: RandomAccessCollection module Swift
  associated_type Indices: CountableRange<Int>
  associated_type_protocol (Indices: RandomAccessCollection): CountableRange<Int>: specialize <Int, Int, Int, Int, Int, Int, Int> (<Bound where Bound : Comparable, Bound : _Strideable, Bound.Stride : SignedInteger, Bound.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, Bound.Stride.Stride : SignedNumber, Bound.Stride.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> CountableRange<Bound>: RandomAccessCollection module Swift)
  associated_type Element: Element
  method #_ArrayBufferProtocol.init!allocator.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_CfT_x	// protocol witness for _ArrayBufferProtocol.init() -> A in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.init!allocator.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_CfTGVs22_ContiguousArrayBufferwx7Element_19shiftedToStartIndexSi_x	// protocol witness for _ArrayBufferProtocol.init(_ContiguousArrayBuffer<A.Element>, shiftedToStartIndex : Int) -> A in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol._copyContents!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_13_copyContentsfT8subRangeGVs5RangeSi_12initializingGSpwx7Element__GSpwxS2__	// protocol witness for _ArrayBufferProtocol._copyContents(subRange : Range<Int>, initializing : UnsafeMutablePointer<A.Element>) -> UnsafeMutablePointer<A.Element> in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.subscript!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g9subscriptFSiwx7Element	// protocol witness for _ArrayBufferProtocol.subscript.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.subscript!setter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_s9subscriptFSiwx7Element	// protocol witness for _ArrayBufferProtocol.subscript.setter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.subscript!materializeForSet.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_m9subscriptFSiwx7Element	// protocol witness for _ArrayBufferProtocol.subscript.materializeForSet in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.requestUniqueMutableBackingBuffer!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_33requestUniqueMutableBackingBufferfT15minimumCapacitySi_GSqGVs22_ContiguousArrayBufferwx7Element__	// protocol witness for _ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity : Int) -> _ContiguousArrayBuffer<A.Element>? in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.isMutableAndUniquelyReferenced!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_30isMutableAndUniquelyReferencedfT_Sb	// protocol witness for _ArrayBufferProtocol.isMutableAndUniquelyReferenced() -> Bool in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.requestNativeBuffer!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_19requestNativeBufferfT_GSqGVs22_ContiguousArrayBufferwx7Element__	// protocol witness for _ArrayBufferProtocol.requestNativeBuffer() -> _ContiguousArrayBuffer<A.Element>? in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.replace!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_7replaceuRd__s10Collectionwx7ElementzWd__8Iterator7Element_rfT8subRangeGVs5RangeSi_4withSi10elementsOfqd___T_	// protocol witness for _ArrayBufferProtocol.replace<A where ...> (subRange : Range<Int>, with : Int, elementsOf : A1) -> () in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.subscript!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g9subscriptFGVs5RangeSi_GVs12_SliceBufferwx7Element_	// protocol witness for _ArrayBufferProtocol.subscript.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.withUnsafeBufferPointer!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_23withUnsafeBufferPointerurfzFzGSRwx7Element_qd__qd__	// protocol witness for _ArrayBufferProtocol.withUnsafeBufferPointer<A> ((UnsafeBufferPointer<A.Element>) throws -> A1) throws -> A1 in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.withUnsafeMutableBufferPointer!1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_30withUnsafeMutableBufferPointerurfzFzGSrwx7Element_qd__qd__	// protocol witness for _ArrayBufferProtocol.withUnsafeMutableBufferPointer<A> ((UnsafeMutableBufferPointer<A.Element>) throws -> A1) throws -> A1 in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.count!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g5countSi	// protocol witness for _ArrayBufferProtocol.count.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.count!setter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_s5countSi	// protocol witness for _ArrayBufferProtocol.count.setter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.count!materializeForSet.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_m5countSi	// protocol witness for _ArrayBufferProtocol.count.materializeForSet in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.capacity!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g8capacitySi	// protocol witness for _ArrayBufferProtocol.capacity.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.owner!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g5ownerPs9AnyObject_	// protocol witness for _ArrayBufferProtocol.owner.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.firstElementAddress!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g19firstElementAddressGSpwx7Element_	// protocol witness for _ArrayBufferProtocol.firstElementAddress.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.firstElementAddressIfContiguous!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g31firstElementAddressIfContiguousGSqGSpwx7Element__	// protocol witness for _ArrayBufferProtocol.firstElementAddressIfContiguous.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.subscriptBaseAddress!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g20subscriptBaseAddressGSpwx7Element_	// protocol witness for _ArrayBufferProtocol.subscriptBaseAddress.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.identity!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g8identitySV	// protocol witness for _ArrayBufferProtocol.identity.getter in conformance <A> _ArrayBuffer<A>
  method #_ArrayBufferProtocol.startIndex!getter.1: @_TTWurGVs12_ArrayBufferx_s20_ArrayBufferProtocolsFS0_g10startIndexSi	// protocol witness for _ArrayBufferProtocol.startIndex.getter in conformance <A> _ArrayBuffer<A>
}

sil_witness_table public_external [fragile] <T> _IgnorePointer<T>: _PointerFunction module Swift {
  associated_type Element: T
  method #_PointerFunction.call!1: @_TTWurGVs14_IgnorePointerx_s16_PointerFunctionsFS0_4callfTGSpwx7Element_5countSi_T_	// protocol witness for _PointerFunction.call(UnsafeMutablePointer<A.Element>, count : Int) -> () in conformance <A> _IgnorePointer<A>
}

sil_witness_table public_external [fragile] <Element> _ArrayBuffer<Element>: MutableIndexable module Swift {
  base_protocol Indexable: <Element> _ArrayBuffer<Element>: Indexable module Swift
  associated_type Index: Int
  associated_type_protocol (Index: Comparable): Int: Comparable module Swift
  method #MutableIndexable.startIndex!getter.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g10startIndexwx5Index	// protocol witness for MutableIndexable.startIndex.getter in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.endIndex!getter.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g8endIndexwx5Index	// protocol witness for MutableIndexable.endIndex.getter in conformance <A> _ArrayBuffer<A>
  associated_type _Element: Element
  method #MutableIndexable.subscript!getter.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g9subscriptFwx5Indexwx8_Element	// protocol witness for MutableIndexable.subscript.getter in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.subscript!setter.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_s9subscriptFwx5Indexwx8_Element	// protocol witness for MutableIndexable.subscript.setter in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.subscript!materializeForSet.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_m9subscriptFwx5Indexwx8_Element	// protocol witness for MutableIndexable.subscript.materializeForSet in conformance <A> _ArrayBuffer<A>
  associated_type SubSequence: _SliceBuffer<Element>
  method #MutableIndexable.subscript!getter.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_g9subscriptFGVs5Rangewx5Index_wx11SubSequence	// protocol witness for MutableIndexable.subscript.getter in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.subscript!setter.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_s9subscriptFGVs5Rangewx5Index_wx11SubSequence	// protocol witness for MutableIndexable.subscript.setter in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.subscript!materializeForSet.1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_m9subscriptFGVs5Rangewx5Index_wx11SubSequence	// protocol witness for MutableIndexable.subscript.materializeForSet in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable._failEarlyRangeCheck!1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_20_failEarlyRangeCheckfTwx5Index6boundsGVs5RangewxS1___T_	// protocol witness for MutableIndexable._failEarlyRangeCheck(A.Index, bounds : Range<A.Index>) -> () in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable._failEarlyRangeCheck!1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_20_failEarlyRangeCheckfTGVs5Rangewx5Index_6boundsGS1_wxS2___T_	// protocol witness for MutableIndexable._failEarlyRangeCheck(Range<A.Index>, bounds : Range<A.Index>) -> () in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.index!1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_5indexfT5afterwx5Index_wxS1_	// protocol witness for MutableIndexable.index(after : A.Index) -> A.Index in conformance <A> _ArrayBuffer<A>
  method #MutableIndexable.formIndex!1: @_TTWurGVs12_ArrayBufferx_s16MutableIndexablesFS0_9formIndexfT5afterRwx5Index_T_	// protocol witness for MutableIndexable.formIndex(after : inout A.Index) -> () in conformance <A> _ArrayBuffer<A>
}

sil_witness_table public_external [fragile] <Pointee> UnsafePointer<Pointee>: Comparable module Swift {
  base_protocol Equatable: <Pointee> UnsafePointer<Pointee>: Equatable module Swift
  method #Comparable."<"!1: @_TTWurGSPx_s10ComparablesZFS_oi1lfTxx_Sb	// protocol witness for static Comparable.< infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
  method #Comparable."<="!1: @_TTWurGSPx_s10ComparablesZFS_oi2lefTxx_Sb	// protocol witness for static Comparable.<= infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
  method #Comparable.">="!1: @_TTWurGSPx_s10ComparablesZFS_oi2gefTxx_Sb	// protocol witness for static Comparable.>= infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
  method #Comparable.">"!1: @_TTWurGSPx_s10ComparablesZFS_oi1gfTxx_Sb	// protocol witness for static Comparable.> infix(A, A) -> Bool in conformance <A> UnsafePointer<A>
}

sil_witness_table public_external [fragile] <Pointee> UnsafeMutablePointer<Pointee>: Comparable module Swift {
  base_protocol Equatable: <Pointee> UnsafeMutablePointer<Pointee>: Equatable module Swift
  method #Comparable."<"!1: @_TTWurGSpx_s10ComparablesZFS_oi1lfTxx_Sb	// protocol witness for static Comparable.< infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
  method #Comparable."<="!1: @_TTWurGSpx_s10ComparablesZFS_oi2lefTxx_Sb	// protocol witness for static Comparable.<= infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
  method #Comparable.">="!1: @_TTWurGSpx_s10ComparablesZFS_oi2gefTxx_Sb	// protocol witness for static Comparable.>= infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
  method #Comparable.">"!1: @_TTWurGSpx_s10ComparablesZFS_oi1gfTxx_Sb	// protocol witness for static Comparable.> infix(A, A) -> Bool in conformance <A> UnsafeMutablePointer<A>
}

sil_witness_table public_external [fragile] <Element> Array<Element>: IndexableBase module Swift {
  associated_type Index: Int
  associated_type_protocol (Index: Comparable): Int: Comparable module Swift
  method #IndexableBase.startIndex!getter.1: @_TTWurGSax_s13IndexableBasesFS_g10startIndexwx5Index	// protocol witness for IndexableBase.startIndex.getter in conformance <A> [A]
  method #IndexableBase.endIndex!getter.1: @_TTWurGSax_s13IndexableBasesFS_g8endIndexwx5Index	// protocol witness for IndexableBase.endIndex.getter in conformance <A> [A]
  associated_type _Element: Element
  method #IndexableBase.subscript!getter.1: @_TTWurGSax_s13IndexableBasesFS_g9subscriptFwx5Indexwx8_Element	// protocol witness for IndexableBase.subscript.getter in conformance <A> [A]
  associated_type SubSequence: ArraySlice<Element>
  method #IndexableBase.subscript!getter.1: @_TTWurGSax_s13IndexableBasesFS_g9subscriptFGVs5Rangewx5Index_wx11SubSequence	// protocol witness for IndexableBase.subscript.getter in conformance <A> [A]
  method #IndexableBase._failEarlyRangeCheck!1: @_TTWurGSax_s13IndexableBasesFS_20_failEarlyRangeCheckfTwx5Index6boundsGVs5RangewxS0___T_	// protocol witness for IndexableBase._failEarlyRangeCheck(A.Index, bounds : Range<A.Index>) -> () in conformance <A> [A]
  method #IndexableBase._failEarlyRangeCheck!1: @_TTWurGSax_s13IndexableBasesFS_20_failEarlyRangeCheckfTGVs5Rangewx5Index_6boundsGS0_wxS1___T_	// protocol witness for IndexableBase._failEarlyRangeCheck(Range<A.Index>, bounds : Range<A.Index>) -> () in conformance <A> [A]
  method #IndexableBase.index!1: @_TTWurGSax_s13IndexableBasesFS_5indexfT5afterwx5Index_wxS0_	// protocol witness for IndexableBase.index(after : A.Index) -> A.Index in conformance <A> [A]
  method #IndexableBase.formIndex!1: @_TTWurGSax_s13IndexableBasesFS_9formIndexfT5afterRwx5Index_T_	// protocol witness for IndexableBase.formIndex(after : inout A.Index) -> () in conformance <A> [A]
}

sil_witness_table _SwiftNativeNSArrayWithContiguousStorage: _NSArrayCore module Swift

sil_default_witness_table hidden Loadable {
  no_default
  no_default
}



